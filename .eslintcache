[{"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\index.js":"1","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\App.js":"2","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\contexts\\editContext.js":"3","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\redux\\store.js":"4","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\redux\\root-reducer.js":"5","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\redux\\user\\user.action.js":"6","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\redux\\user\\user.selectors.js":"7","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\utils\\firebase.utils.js":"8","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\AdminSection\\AdminSection.js":"9","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\SignUp\\SignUp.js":"10","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\AdminSection\\AdminSectionCity.js":"11","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\SignIn\\SignIn.js":"12","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\AdminLanding\\AdminLanding.js":"13","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\Dashboard\\Dashboard.js":"14","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\redux\\user\\user.reducer.js":"15","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\redux\\user\\user.type.js":"16","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\utils\\actions.firebase.js":"17","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\AdminSection\\SectionMain.js":"18","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Home.js":"19","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\SideNav\\SideNav.js":"20","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\TopNav\\TopNav.js":"21","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Section\\Main.js":"22","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\hooks\\useFetch.js":"23","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\AdminSection\\SectionItems.js":"24","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\AdminSection\\Data.js":"25","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Section\\Topics\\Topics.js":"26","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Section\\Services\\AddService.js":"27","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Section\\Services\\Services.js":"28","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Section\\Members\\Members.js":"29","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Section\\Topics\\AddTopic.js":"30","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Section\\Articles\\AddArticle.js":"31","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Section\\Relocate\\Relocate.js":"32","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Section\\Articles\\Articles.js":"33","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Section\\SliderBanner\\SliderBanner.js":"34","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Section\\Vimeo\\Vimeo.js":"35","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Section\\TopVideos\\TopVideos.js":"36","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\AuxService\\AuxServiceSection.js":"37","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\SectionHeader\\SectionHeader.js":"38","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\Footer\\Footer.js":"39","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\JoinCommunity\\JoinCommunity.js":"40","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\AuxService\\AddService.js":"41","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\JoinCity\\JoinCitySection.js":"42","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Section\\TopVideos\\AddVideo.js":"43","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\OwnSection\\OwnSection.js":"44","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\FeaturedArticle\\FeaturedArticlePage.js":"45","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\HeroBanner\\HeroBanner.js":"46","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\FeatureCard\\FeatureCardPage.js":"47","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\SHeader\\SHeader.js":"48","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\utils\\GetWindowDimension.js":"49","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Section\\Topics\\TopicCard.js":"50","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\utils\\sizeTransform.js":"51","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\utils\\manageDisplayItems.js":"52","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Section\\Members\\MemberCard.js":"53","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Section\\Services\\ServiceCard.js":"54","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Section\\Articles\\AddArticleForm.js":"55","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\FeatureCard\\FeatureCard.js":"56","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\FeaturedArticle\\FeaturedArticle.js":"57","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\JoinCity\\JoinCity.js":"58","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Section\\TopVideos\\AddVideoForm.js":"59","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\CityForm\\SectionAddTopicForm.js":"60","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\CityForm\\CityForm.js":"61","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\CityForm\\SectionTopicsForm.js":"62","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\FeatureCardForm\\FeatureCardForm.js":"63","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\FeatureCardForm\\SectionServiceCardForm.js":"64","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\FeatureCardForm\\SectionServiceAddForm.js":"65","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\JoinCommunityForm\\CommunityMembersForm.js":"66","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\JoinCommunityForm\\SectionMembersForm.js":"67","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\JoinCommunityForm\\JoinCommunityForm.js":"68","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\BannerForm\\SectionBannerPhotoForm.js":"69","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\BannerForm\\BannerPhotoForm.js":"70","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\BannerForm\\BannerPlacesForm.js":"71","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\TextEdit\\TextEdit.js":"72","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\SearchCity\\SearchCity.js":"73","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\RequestNewCity\\RequestNewCity.js":"74","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\ArticleForm\\ArticleForm.js":"75","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\ServiceForm\\AddServiceForm.js":"76","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\TravelBlog\\sectionHeader\\SectionHeader.js":"77","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\Footer\\FooterCopyright.js":"78","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Section\\Header\\SearchBar\\SearchBar.js":"79","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\Footer\\FooterIcons.js":"80","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\MemberNearYou\\MemberNearYou.js":"81","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\ServiceForm\\ServiceForm.js":"82","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\AuxService\\AuxService.js":"83","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Section\\TopVideos\\VideoForm.js":"84","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\TravelBlog\\contexts\\refContext.js":"85","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\Carousel\\Carousel.js":"86","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\Carousel\\CarouselCard.js":"87","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\FeatureCardForm\\SectionNewsCardForm.js":"88","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Section\\Vimeo\\VimeoForm.js":"89","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Section\\Articles\\Form.js":"90","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Section\\Articles\\ArticlesForm.js":"91","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Section\\Relocate\\Summary\\Summary.js":"92","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Section\\Relocate\\Desktop\\Desktop.js":"93","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Section\\Relocate\\Mobile\\Mobile.js":"94","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\TextEdit\\Data.js":"95","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\UploadImage\\UploadImageSection.js":"96","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\config.js":"97","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\UploadImage\\UploadImage.js":"98","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Section\\Header\\SearchBar\\RelatedInfo.js":"99","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Section\\Header\\SearchBar\\oldSections.js":"100","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\Data\\JoinCityData.js":"101","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\EditDropdown\\Dropdown.js":"102","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\assets\\Section\\Header\\RelatedInfoData.js":"103","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\Carousel\\PlayVideo.js":"104","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Section\\Relocate\\Desktop\\DesktopCard.js":"105","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\assets\\Section\\Relocate\\RelocateData.js":"106","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Section\\Relocate\\Mobile\\MobileCard.js":"107","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\Data\\HelsinkiTopicData.js":"108","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\SideNav\\TopicMenu.js":"109","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\Navigation\\Navigation.js":"110","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\AdminTopic\\Accomodation.js":"111","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\AdminTopic\\MainAccomodation.js":"112","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\BannerForm\\BannerTopicForm.js":"113","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\UploadImage\\UploadImageTopic.js":"114","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Topic\\Menu\\Menu.js":"115","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Topic\\Service\\TopicServiceCardForm.js":"116","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Topic\\Main\\Body.js":"117","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Topic\\Main\\Article\\Article.js":"118","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Topic\\Main\\Article\\ArticleCard.js":"119","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Topic\\Service\\VideoArticleServiceCard.js":"120","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Topic\\Main\\Hotel\\Hotels.js":"121","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Topic\\Service\\HotelServiceCard.js":"122","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Topic\\Main\\Other\\OtherTopics.js":"123","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Topic\\Footer\\Footer.js":"124","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Topic\\Service\\AddTopicCardForm.js":"125","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Topic\\Main\\Member\\Member.js":"126","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Topic\\Header\\Header.js":"127","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Topic\\Header\\MainImg\\HeaderContent.js":"128","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Topic\\Header\\Banner\\Banner.js":"129","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\AdminTopic\\admin area\\AdminTopicListCountries.js":"130","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\AdminTopic\\admin area\\AdminTopic.js":"131","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\AdminTopic\\admin area\\TopicMain.js":"132","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\AdminTopic\\admin area\\TopicItems.js":"133","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Topic\\Service\\HotelServiceCard2.js":"134","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Topic\\Service\\NewServiceCardForm.js":"135","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\utils\\sliceData.js":"136","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\Data\\TopicData.js":"137","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\AdminTopic\\RawAccomodationData.js":"138","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\AdminTopic\\RawAttractionData.js":"139","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Topic\\Main\\LandingTopic.js":"140","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Topic\\Main\\Attractions\\Attraction.js":"141","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Topic\\Service\\attraction\\AttractionServiceCard.js":"142","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Topic\\Service\\attraction\\AddAttractionCardForm.js":"143","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\AdminTopic\\RawCultureData.js":"144","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Topic\\Main\\Culture\\Culture.js":"145","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\utils\\upperCaseFirstLetter.js":"146","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\AdminTopic\\RawTransportData.js":"147","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Topic\\Main\\Transport\\Transportation.js":"148"},{"size":663,"mtime":1622099814084,"results":"149","hashOfConfig":"150"},{"size":3033,"mtime":1630312457983,"results":"151","hashOfConfig":"150"},{"size":1708,"mtime":1629369089305,"results":"152","hashOfConfig":"150"},{"size":412,"mtime":1622099814189,"results":"153","hashOfConfig":"150"},{"size":376,"mtime":1622099814189,"results":"154","hashOfConfig":"150"},{"size":160,"mtime":1622099814189,"results":"155","hashOfConfig":"150"},{"size":192,"mtime":1622099814189,"results":"156","hashOfConfig":"150"},{"size":1747,"mtime":1631087881147,"results":"157","hashOfConfig":"150"},{"size":1128,"mtime":1626329307936,"results":"158","hashOfConfig":"150"},{"size":2634,"mtime":1622099814099,"results":"159","hashOfConfig":"150"},{"size":3056,"mtime":1625132136738,"results":"160","hashOfConfig":"150"},{"size":2582,"mtime":1622099814099,"results":"161","hashOfConfig":"150"},{"size":3756,"mtime":1622099814084,"results":"162","hashOfConfig":"150"},{"size":890,"mtime":1622466629167,"results":"163","hashOfConfig":"150"},{"size":384,"mtime":1622099814189,"results":"164","hashOfConfig":"150"},{"size":85,"mtime":1622099814189,"results":"165","hashOfConfig":"150"},{"size":1730,"mtime":1628150718383,"results":"166","hashOfConfig":"150"},{"size":1320,"mtime":1622099814084,"results":"167","hashOfConfig":"150"},{"size":2616,"mtime":1622099814099,"results":"168","hashOfConfig":"150"},{"size":1721,"mtime":1630526217552,"results":"169","hashOfConfig":"150"},{"size":1038,"mtime":1622099814099,"results":"170","hashOfConfig":"150"},{"size":2425,"mtime":1623333975170,"results":"171","hashOfConfig":"150"},{"size":862,"mtime":1622099814084,"results":"172","hashOfConfig":"150"},{"size":3099,"mtime":1628150391657,"results":"173","hashOfConfig":"150"},{"size":11326,"mtime":1626680433339,"results":"174","hashOfConfig":"150"},{"size":5206,"mtime":1626162701865,"results":"175","hashOfConfig":"150"},{"size":2746,"mtime":1623657649233,"results":"176","hashOfConfig":"150"},{"size":4567,"mtime":1623834048379,"results":"177","hashOfConfig":"150"},{"size":4440,"mtime":1626685620029,"results":"178","hashOfConfig":"150"},{"size":2603,"mtime":1622099814153,"results":"179","hashOfConfig":"150"},{"size":3228,"mtime":1622099814131,"results":"180","hashOfConfig":"150"},{"size":679,"mtime":1622099814150,"results":"181","hashOfConfig":"150"},{"size":6691,"mtime":1622099814131,"results":"182","hashOfConfig":"150"},{"size":4083,"mtime":1629880812355,"results":"183","hashOfConfig":"150"},{"size":4635,"mtime":1629889973393,"results":"184","hashOfConfig":"150"},{"size":5825,"mtime":1622099814153,"results":"185","hashOfConfig":"150"},{"size":5121,"mtime":1622099814037,"results":"186","hashOfConfig":"150"},{"size":270,"mtime":1622099814068,"results":"187","hashOfConfig":"150"},{"size":3161,"mtime":1622099814052,"results":"188","hashOfConfig":"150"},{"size":9982,"mtime":1622099814052,"results":"189","hashOfConfig":"150"},{"size":1992,"mtime":1622099814037,"results":"190","hashOfConfig":"150"},{"size":3883,"mtime":1622099814052,"results":"191","hashOfConfig":"150"},{"size":2616,"mtime":1622099814153,"results":"192","hashOfConfig":"150"},{"size":612,"mtime":1622099814052,"results":"193","hashOfConfig":"150"},{"size":3657,"mtime":1622099814052,"results":"194","hashOfConfig":"150"},{"size":6360,"mtime":1622099814052,"results":"195","hashOfConfig":"150"},{"size":3653,"mtime":1622099814052,"results":"196","hashOfConfig":"150"},{"size":7771,"mtime":1622633291027,"results":"197","hashOfConfig":"150"},{"size":533,"mtime":1622099814189,"results":"198","hashOfConfig":"150"},{"size":813,"mtime":1626162703458,"results":"199","hashOfConfig":"150"},{"size":379,"mtime":1622099814189,"results":"200","hashOfConfig":"150"},{"size":473,"mtime":1622099814189,"results":"201","hashOfConfig":"150"},{"size":559,"mtime":1626766081722,"results":"202","hashOfConfig":"150"},{"size":426,"mtime":1622099814153,"results":"203","hashOfConfig":"150"},{"size":3358,"mtime":1622099814131,"results":"204","hashOfConfig":"150"},{"size":859,"mtime":1622099814037,"results":"205","hashOfConfig":"150"},{"size":1077,"mtime":1622099814052,"results":"206","hashOfConfig":"150"},{"size":1533,"mtime":1622099814052,"results":"207","hashOfConfig":"150"},{"size":2499,"mtime":1622099814153,"results":"208","hashOfConfig":"150"},{"size":2711,"mtime":1622099814099,"results":"209","hashOfConfig":"150"},{"size":2719,"mtime":1622099814099,"results":"210","hashOfConfig":"150"},{"size":2757,"mtime":1622099814099,"results":"211","hashOfConfig":"150"},{"size":2436,"mtime":1622099814099,"results":"212","hashOfConfig":"150"},{"size":2372,"mtime":1623829837640,"results":"213","hashOfConfig":"150"},{"size":2356,"mtime":1622099814099,"results":"214","hashOfConfig":"150"},{"size":2434,"mtime":1622099814099,"results":"215","hashOfConfig":"150"},{"size":2550,"mtime":1622099814099,"results":"216","hashOfConfig":"150"},{"size":743,"mtime":1622099814099,"results":"217","hashOfConfig":"150"},{"size":1484,"mtime":1623057707459,"results":"218","hashOfConfig":"150"},{"size":1477,"mtime":1622633291034,"results":"219","hashOfConfig":"150"},{"size":1907,"mtime":1622099814099,"results":"220","hashOfConfig":"150"},{"size":2332,"mtime":1622099814068,"results":"221","hashOfConfig":"150"},{"size":2557,"mtime":1622099814068,"results":"222","hashOfConfig":"150"},{"size":3430,"mtime":1622099814068,"results":"223","hashOfConfig":"150"},{"size":2983,"mtime":1622099814084,"results":"224","hashOfConfig":"150"},{"size":2119,"mtime":1622099814099,"results":"225","hashOfConfig":"150"},{"size":318,"mtime":1622099814068,"results":"226","hashOfConfig":"150"},{"size":262,"mtime":1622099814052,"results":"227","hashOfConfig":"150"},{"size":2940,"mtime":1622099814131,"results":"228","hashOfConfig":"150"},{"size":1578,"mtime":1622099814052,"results":"229","hashOfConfig":"150"},{"size":416,"mtime":1622099814052,"results":"230","hashOfConfig":"150"},{"size":2713,"mtime":1622099814099,"results":"231","hashOfConfig":"150"},{"size":887,"mtime":1622099814037,"results":"232","hashOfConfig":"150"},{"size":2819,"mtime":1622099814153,"results":"233","hashOfConfig":"150"},{"size":145,"mtime":1622099814173,"results":"234","hashOfConfig":"150"},{"size":1903,"mtime":1622099814037,"results":"235","hashOfConfig":"150"},{"size":2095,"mtime":1622099814037,"results":"236","hashOfConfig":"150"},{"size":2407,"mtime":1622099814099,"results":"237","hashOfConfig":"150"},{"size":3777,"mtime":1622099814153,"results":"238","hashOfConfig":"150"},{"size":3452,"mtime":1622099814131,"results":"239","hashOfConfig":"150"},{"size":3526,"mtime":1622099814131,"results":"240","hashOfConfig":"150"},{"size":1100,"mtime":1622099814153,"results":"241","hashOfConfig":"150"},{"size":1888,"mtime":1622099814148,"results":"242","hashOfConfig":"150"},{"size":1303,"mtime":1622099814150,"results":"243","hashOfConfig":"150"},{"size":704,"mtime":1622099814068,"results":"244","hashOfConfig":"150"},{"size":2208,"mtime":1623057882241,"results":"245","hashOfConfig":"150"},{"size":80,"mtime":1622099814084,"results":"246","hashOfConfig":"150"},{"size":2192,"mtime":1622633291028,"results":"247","hashOfConfig":"150"},{"size":261,"mtime":1622099814131,"results":"248","hashOfConfig":"150"},{"size":614,"mtime":1622099814131,"results":"249","hashOfConfig":"150"},{"size":6508,"mtime":1622099813768,"results":"250","hashOfConfig":"150"},{"size":491,"mtime":1622099814037,"results":"251","hashOfConfig":"150"},{"size":872,"mtime":1622099813883,"results":"252","hashOfConfig":"150"},{"size":654,"mtime":1622099814037,"results":"253","hashOfConfig":"150"},{"size":1555,"mtime":1622099814149,"results":"254","hashOfConfig":"150"},{"size":2249,"mtime":1622099813899,"results":"255","hashOfConfig":"150"},{"size":1614,"mtime":1622099814150,"results":"256","hashOfConfig":"150"},{"size":1211,"mtime":1622099813768,"results":"257","hashOfConfig":"150"},{"size":1507,"mtime":1629362878817,"results":"258","hashOfConfig":"150"},{"size":5461,"mtime":1622633291026,"results":"259","hashOfConfig":"150"},{"size":3532,"mtime":1631023885745,"results":"260","hashOfConfig":"150"},{"size":630,"mtime":1630312676282,"results":"261","hashOfConfig":"150"},{"size":1439,"mtime":1629369266516,"results":"262","hashOfConfig":"150"},{"size":2222,"mtime":1629369336775,"results":"263","hashOfConfig":"150"},{"size":10015,"mtime":1623142721972,"results":"264","hashOfConfig":"150"},{"size":3560,"mtime":1630059539967,"results":"265","hashOfConfig":"150"},{"size":450,"mtime":1629709977722,"results":"266","hashOfConfig":"150"},{"size":24346,"mtime":1629793761851,"results":"267","hashOfConfig":"150"},{"size":2937,"mtime":1629793982277,"results":"268","hashOfConfig":"150"},{"size":6025,"mtime":1628064773441,"results":"269","hashOfConfig":"150"},{"size":9123,"mtime":1629836289960,"results":"270","hashOfConfig":"150"},{"size":4126,"mtime":1626763653665,"results":"271","hashOfConfig":"150"},{"size":6434,"mtime":1630308143623,"results":"272","hashOfConfig":"150"},{"size":3620,"mtime":1624954989959,"results":"273","hashOfConfig":"150"},{"size":2605,"mtime":1630307259886,"results":"274","hashOfConfig":"150"},{"size":4518,"mtime":1629710353769,"results":"275","hashOfConfig":"150"},{"size":810,"mtime":1630312695668,"results":"276","hashOfConfig":"150"},{"size":5868,"mtime":1629708075560,"results":"277","hashOfConfig":"150"},{"size":10531,"mtime":1631007935060,"results":"278","hashOfConfig":"150"},{"size":1839,"mtime":1630526209186,"results":"279","hashOfConfig":"150"},{"size":992,"mtime":1626330847227,"results":"280","hashOfConfig":"150"},{"size":1259,"mtime":1630312504590,"results":"281","hashOfConfig":"150"},{"size":3413,"mtime":1629702277671,"results":"282","hashOfConfig":"150"},{"size":3542,"mtime":1626764602089,"results":"283","hashOfConfig":"150"},{"size":2383,"mtime":1628065835142,"results":"284","hashOfConfig":"150"},{"size":96,"mtime":1625142145597,"results":"285","hashOfConfig":"150"},{"size":1563,"mtime":1631007736827,"results":"286","hashOfConfig":"150"},{"size":24233,"mtime":1629360762500,"results":"287","hashOfConfig":"150"},{"size":36490,"mtime":1630523650604,"results":"288","hashOfConfig":"150"},{"size":799,"mtime":1630526986296,"results":"289","hashOfConfig":"150"},{"size":8447,"mtime":1630316200207,"results":"290","hashOfConfig":"150"},{"size":3503,"mtime":1631088775906,"results":"291","hashOfConfig":"150"},{"size":3065,"mtime":1631088838464,"results":"292","hashOfConfig":"150"},{"size":30413,"mtime":1630523826305,"results":"293","hashOfConfig":"150"},{"size":8203,"mtime":1631088889157,"results":"294","hashOfConfig":"150"},{"size":97,"mtime":1630315476524,"results":"295","hashOfConfig":"150"},{"size":25079,"mtime":1631259881545,"results":"296","hashOfConfig":"150"},{"size":11293,"mtime":1631564504171,"results":"297","hashOfConfig":"150"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},"of96k7",{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"300"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"300"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"300"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"300"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"300"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"300"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"300"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364","usedDeprecatedRules":"300"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"300"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"300"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"300"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"300"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"300"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"300"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"300"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408","usedDeprecatedRules":"300"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"300"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"416","usedDeprecatedRules":"300"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"427","usedDeprecatedRules":"300"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"436","usedDeprecatedRules":"300"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"453","usedDeprecatedRules":"300"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"466","usedDeprecatedRules":"300"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"493","usedDeprecatedRules":"300"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"496","usedDeprecatedRules":"300"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"509","usedDeprecatedRules":"300"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"512","usedDeprecatedRules":"300"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"523","messages":"524","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"531","usedDeprecatedRules":"300"},{"filePath":"532","messages":"533","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"534","usedDeprecatedRules":"300"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"539","usedDeprecatedRules":"300"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"544","messages":"545","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"548","usedDeprecatedRules":"549"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"552","usedDeprecatedRules":"300"},{"filePath":"553","messages":"554","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"555","messages":"556","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"557","messages":"558","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"559","messages":"560","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"561"},{"filePath":"562","messages":"563","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"564","usedDeprecatedRules":"300"},{"filePath":"565","messages":"566","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"569","usedDeprecatedRules":"300"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"572","usedDeprecatedRules":"300"},{"filePath":"573","messages":"574","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":3,"source":"575","usedDeprecatedRules":"300"},{"filePath":"576","messages":"577","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"578","usedDeprecatedRules":"300"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"583","usedDeprecatedRules":"300"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"586","messages":"587","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"588","messages":"589","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"590","usedDeprecatedRules":"300"},{"filePath":"591","messages":"592","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"593","messages":"594","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"595","usedDeprecatedRules":"300"},{"filePath":"596","messages":"597","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"598","usedDeprecatedRules":"300"},{"filePath":"599","messages":"600","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"601","messages":"602","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"603","messages":"604","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"605","usedDeprecatedRules":"300"},{"filePath":"606","messages":"607","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"608","messages":"609","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"610","usedDeprecatedRules":"300"},{"filePath":"611","messages":"612","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"613","messages":"614","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"615","messages":"616","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"617","usedDeprecatedRules":"300"},{"filePath":"618","messages":"619","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"620","messages":"621","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"622","messages":"623","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"624","messages":"625","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"626","usedDeprecatedRules":"300"},{"filePath":"627","messages":"628","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"629","usedDeprecatedRules":"300"},{"filePath":"630","messages":"631","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"632","usedDeprecatedRules":"300"},{"filePath":"633","messages":"634","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"635","messages":"636","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"637","usedDeprecatedRules":"300"},{"filePath":"638","messages":"639","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"640","messages":"641","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"642","messages":"643","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\index.js",[],["644","645"],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\App.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\contexts\\editContext.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\redux\\store.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\redux\\root-reducer.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\redux\\user\\user.action.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\redux\\user\\user.selectors.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\utils\\firebase.utils.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\AdminSection\\AdminSection.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\SignUp\\SignUp.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\AdminSection\\AdminSectionCity.js",["646"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport SideNav from \"../SideNav/SideNav\";\r\nimport styles from \"./AdminSection.module.css\";\r\nimport { IoMdArrowDropright } from \"react-icons/io\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport TopNav from \"../TopNav/TopNav\";\r\nimport Main from \"../../Section/Main\";\r\nimport { EditContext } from \"../../../contexts/editContext\";\r\nimport { firestore } from \"../../../utils/firebase.utils\";\r\nimport { readData } from \"../../../utils/actions.firebase\";\r\n// import useFetch from \"../../../hooks/useFetch\";\r\n\r\nconst AdminSectionCity = () => {\r\n  const { city, cityId } = useParams();\r\n  const { editMode, handleEditMode, setEditMode } = useContext(EditContext);\r\n  const [currentCity, setFetchedCurrentCity] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const getCurrentCity = async () => {\r\n      const doc = await firestore.collection('section_items').doc(cityId).get();\r\n      if (!doc.exists) {\r\n        setLoading(true);\r\n      } else {\r\n        setFetchedCurrentCity(doc.data());\r\n        setLoading(false);\r\n      }\r\n    };\r\n    getCurrentCity();\r\n  }, [cityId]);\r\n\r\n  const releaseNewCity = async () => {\r\n    const check = await readData('section_live', cityId);\r\n    check\r\n      ?\r\n      await firestore.collection('section_live').doc(check).update(currentCity)\r\n      :\r\n      await firestore.collection('section_live').add({ ...currentCity, id: cityId })\r\n    alert(\"your changes are now live...\");\r\n  };\r\n  // console.log({...currentCity})\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <TopNav />\r\n      <div>\r\n        <div className={styles.navLink}>\r\n          <Link\r\n            to=\"/dashboard\"\r\n            className={styles.dashboardLink}\r\n          >\r\n            Dashboard\r\n          </Link>\r\n          <IoMdArrowDropright color=\"#F26678\" size=\"25px\" />\r\n          <Link\r\n            to=\"/section\"\r\n            className={styles.dashboardLink}\r\n          >\r\n            Section Page\r\n          </Link>\r\n          <IoMdArrowDropright color=\"#F26678\" size=\"25px\" />\r\n          <Link\r\n            to={`/section/${city}/${cityId}`}\r\n            className={styles.landingLink}\r\n          >\r\n            {city}\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <div className={styles.container}>\r\n        <section className={styles.sidenav}>\r\n          <SideNav />\r\n        </section>\r\n        <section className={styles.main}>\r\n          {!editMode ?\r\n            (<button className={styles.editBtn} onClick={handleEditMode}>Edit it</button>) :\r\n            (<div>\r\n              <button className={styles.svrBtn}>Save it</button>\r\n              <button className={styles.svrBtn} onClick={() => setEditMode(false)}>View it</button>\r\n              <button className={styles.svrBtn} onClick={releaseNewCity}>Release it</button>\r\n            </div>\r\n            )\r\n          }\r\n          {<Main cityId={cityId} />}\r\n        </section>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminSectionCity;\r\n","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\SignIn\\SignIn.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\AdminLanding\\AdminLanding.js",["647"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport Home from \"../../Home\";\r\nimport SideNav from \"../SideNav/SideNav\";\r\nimport styles from \"./AdminLanding.module.css\";\r\nimport { IoMdArrowDropright } from \"react-icons/io\";\r\nimport { Link } from \"react-router-dom\";\r\nimport TopNav from \"../TopNav/TopNav\";\r\nimport \"./AdminLanding.css\";\r\nimport { EditContext } from '../../../contexts/editContext';\r\nimport { firestore } from \"../../../utils/firebase.utils\";\r\nimport useFetch from \"../../../hooks/useFetch\";\r\n\r\nconst AdminLanding = () => {\r\n  const { editMode, handleEditMode, setEditMode } = useContext(EditContext);\r\n  const [loading, setLoading] = useState(false);\r\n  const texts = useFetch(\"texts\");\r\n  // const [texts, setTexts] = useState()\r\n  const places = useFetch('places');\r\n  const articles = useFetch('articles');\r\n  const banners = useFetch('banners');\r\n  const cities = useFetch('cities');\r\n  const community = useFetch('community');\r\n  const features = useFetch('features');\r\n  const services = useFetch('services');\r\n  const video = useFetch('video');\r\n \r\n  const updateData = async () => {\r\n      await firestore.collection('landing_live').doc('texts').update({...texts.items});\r\n      await firestore.collection('landing_live').doc('places').update({...places.items});\r\n      await firestore.collection('landing_live').doc('articles').update({...articles.items});\r\n      await firestore.collection('landing_live').doc('banners').update({...banners.items});\r\n      await firestore.collection('landing_live').doc('cities').update({...cities.items});\r\n      await firestore.collection('landing_live').doc('community').update({...community.items});\r\n      await firestore.collection('landing_live').doc('features').update({...features.items});\r\n      await firestore.collection('landing_live').doc('services').set({...services.items});\r\n      await firestore.collection('landing_live').doc('video').update({...video.items});\r\n      // updateToLive(documents);\r\n      (texts.loading || places.loading || articles.loading || banners.loading || cities.loading || community.loading || features.loading || video.loading || services.loading) ? setLoading(true) : setLoading(false);\r\n      alert(\"your changes are now live...\");\r\n\r\n  };\r\nconsole.log(banners.items)\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <TopNav/>\r\n      <div className={styles.navLink}>\r\n            <Link \r\n              to=\"/dashboard\" \r\n              className={styles.dashboardLink}\r\n            >\r\n              Dashboard\r\n            </Link>\r\n            <IoMdArrowDropright color=\"#F26678\" size=\"25px\"/>\r\n            <Link \r\n              to=\"/landing\" \r\n              className={styles.landingLink}\r\n            >\r\n              Landing Page\r\n            </Link>\r\n          </div>\r\n      <div className={styles.container}>\r\n        <section className={styles.sidenav}>\r\n          <SideNav/>\r\n        </section>\r\n        <section className={styles.main}>\r\n          {!editMode ?\r\n            (<button className={styles.editBtn} onClick={handleEditMode}>Edit it</button>) :\r\n            (<div>\r\n              <button className={styles.svrBtn}>Save it</button>\r\n              <button className={styles.svrBtn} onClick={() => setEditMode(false)}>View it</button>\r\n              {!loading ? \r\n                <button \r\n                className={styles.svrBtn}\r\n                onClick={updateData}\r\n              >\r\n                Release it\r\n              </button>\r\n\r\n              : <span>Please wait ...</span>}\r\n              \r\n              </div>\r\n            )\r\n            }\r\n            {  <Home contentEditable={editMode ? true : false}/> }\r\n        </section>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminLanding;\r\n","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\Dashboard\\Dashboard.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\redux\\user\\user.reducer.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\redux\\user\\user.type.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\utils\\actions.firebase.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\AdminSection\\SectionMain.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Home.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\SideNav\\SideNav.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\TopNav\\TopNav.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Section\\Main.js",["648"],"import React, { useContext, useState } from \"react\";\r\nimport Services from \"./Services/Services\";\r\nimport AddService from \"./Services/AddService\";\r\nimport Topics from \"./Topics/Topics\";\r\nimport AddTopic from \"./Topics/AddTopic\";\r\nimport Members from \"./Members/Members\";\r\nimport Articles from \"./Articles/Articles\";\r\nimport Relocate from \"./Relocate/Relocate\";\r\nimport SliderBanner from \"./SliderBanner/SliderBanner\";\r\nimport Vimeo from \"./Vimeo/Vimeo\";\r\nimport { OwnSection } from \"../../components/OwnSection/OwnSection\";\r\nimport { Footer } from \"../../components/Footer/Footer\";\r\nimport styles from \"./index.module.css\";\r\nimport { EditContext } from \"../../contexts/editContext\";\r\nimport SHeader from \"../../components/SHeader/SHeader\";\r\nimport AddArticle from \"./Articles/AddArticle\";\r\nimport TopVideos from \"./TopVideos/TopVideos\";\r\nimport AddVideo from \"./TopVideos/AddVideo\";\r\n\r\nconst Main = ({ cityId }) => {\r\n  const { editMode } = useContext(EditContext);\r\n  const [render, setRender] = useState(false);\r\n\r\n  return (\r\n    <div className={styles.section}>\r\n      <div className={styles.header}>\r\n        <SHeader contentEditable={editMode ? true : false} cityId={cityId} />\r\n      </div>\r\n      <div className={styles.main}>\r\n        <div className={styles.center}>\r\n          <div className={styles.services}>\r\n            {editMode &&\r\n              <AddService cityId={cityId} />\r\n            }\r\n            <Services cityId={cityId} />\r\n            {editMode &&\r\n              <AddTopic cityId={cityId} />\r\n            }\r\n            <Topics cityId={cityId} />\r\n          </div>\r\n          <div className={styles.slider}>\r\n            <SliderBanner cityId={cityId} />\r\n            <Vimeo cityId={cityId} />\r\n          </div>\r\n        </div>\r\n        <div className={styles.members}>\r\n          <Members cityId={cityId} />\r\n        </div>\r\n        <div className={styles.articles}>\r\n          {editMode &&\r\n            <AddArticle cityId={cityId} />\r\n          }\r\n          <Articles cityId={cityId} />\r\n        </div>\r\n        <div className={styles.relocate}>\r\n          {editMode &&\r\n            <AddVideo cityId={cityId} setRender={setRender} render={render} />\r\n          }\r\n          <TopVideos cityId={cityId} render={render} />\r\n        </div>\r\n      </div>\r\n\r\n      <div className={styles.footer}>\r\n        <OwnSection />\r\n        <Footer />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\hooks\\useFetch.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\AdminSection\\SectionItems.js",["649"],"import React, { useEffect, useState } from 'react';\r\nimport { Fragment } from 'react';\r\nimport styles from './AdminSection.module.css';\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { deleteWithId, readData } from '../../../utils/actions.firebase';\r\nimport useFetch from '../../../hooks/useFetch';\r\n\r\nconst SectionItems = ({ currentItems }) => {\r\n  const { loading, items } = useFetch('section_live');\r\n  const [showWarning, setShowWarning] = useState(false);\r\n  const [clickedCard, setClickedCard] = useState(null);\r\n  const [released, setReleased] = useState([])\r\n\r\n  const deleteWarning = (item) => {\r\n    setClickedCard(item);\r\n    setShowWarning(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setReleased(items.map((i) => i.id))\r\n  }, [items]);\r\n\r\n  // find the id of deleted item in live-db\r\n  const filterDeleted = async (items, id) => {\r\n    const docId = await readData('section_live', id);\r\n    return docId\r\n  };\r\n\r\n  // delete selected id from both places in db - live and edit\r\n  const onDelete = async (data) => {\r\n    const id = await filterDeleted(currentItems, data.id);\r\n    await deleteWithId('section_items', data.id)\r\n    await deleteWithId('section_live', id);\r\n    setShowWarning(false);\r\n  };\r\n\r\n  const unRelease = async (data) => {\r\n    const id = await filterDeleted(currentItems, data.id);\r\n    await deleteWithId('section_live', id);\r\n  };\r\n\r\n  const warningForm = (data) => {\r\n    return (\r\n      <div className=\"warningBox\" style={{ margin: '0 auto', position: 'absolute' }}>\r\n        <div className=\"warningHeader\">Warning</div>\r\n        <div className=\"warningText\">\r\n          {`Are you sure you want to DELETE \"${data.name}\" section?`}\r\n        </div>\r\n        <div className=\"warningActions\">\r\n          <p onClick={() => onDelete(data)}>Yes</p>\r\n          <p onClick={() => setShowWarning(false)}>No</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <div className={styles.sectionGrid}>\r\n        {currentItems.map(item => (\r\n          <div\r\n            key={item.id}\r\n            className={styles.card}\r\n            style={{ backgroundImage: `url(${item.img || item.bannerImg}), linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0,0.2), rgba(0, 0, 0, 0.5))`, backgroundSize: 'cover', backgroundRepeat: 'no-repeat' }}\r\n          >\r\n            <div className={styles.released}>\r\n              {released.includes(item.id) ? \"released\" : \"\"}\r\n            </div>\r\n            <div className={styles.options}>\r\n              <Link to={`/section/${item.name}/${item.id}`}>\r\n                <p>Edit</p>\r\n              </Link>\r\n              <p onClick={() => deleteWarning(item)}>Delete</p>\r\n            </div>\r\n            {released.includes(item.id) &&\r\n              <div className={styles.optionsx}><p onClick={() => unRelease(item)}>NotRelease</p></div>}\r\n            <div className={styles.name}>{item.name}</div>\r\n            {showWarning && item.id === clickedCard.id ? warningForm(clickedCard) : null}\r\n          </div>\r\n\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withRouter(SectionItems);","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\AdminSection\\Data.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Section\\Topics\\Topics.js",["650"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport styles from \"./Topics.module.css\";\r\nimport BlogHeader from \"../../../components/TravelBlog/sectionHeader/SectionHeader\";\r\nimport TopicCard from \"./TopicCard\";\r\nimport arrow from \"../../../assets/Section/Topics/arrow-icon.svg\";\r\nimport { GetWindowDimension } from \"../../../utils/GetWindowDimension\";\r\nimport CityForm from \"../../Admin/CityForm/SectionTopicsForm\";\r\nimport { EditContext } from \"../../../contexts/editContext\";\r\nimport { sizeTransform } from \"../../../utils/sizeTransform\";\r\nimport { firestore, app } from \"../../../utils/firebase.utils\";\r\nimport { arraySize } from \"../../../utils/manageDisplayItems\";\r\n\r\nconst Topics = ({ cityId }) => {\r\n  const { width } = GetWindowDimension();\r\n  const { editMode } = useContext(EditContext);\r\n  const [currentCity, setFetchedCurrentCity] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [cardsToShow, setCardsToShow] = useState(arraySize(6, 9));\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  const [fileUrl, setFileUrl] = useState(null);\r\n  const initialItemState = [{ id: null, text: \"\", image: \"\", link: \"\" }];\r\n  const [currentItem, setCurrentItem] = useState(initialItemState);\r\n  const [topics, setTopics] = useState([]);\r\n\r\n  const moreCards = () => {\r\n    let no = cardsToShow + 3;\r\n    if (cardsToShow >= topics.length) {\r\n      if (window.innerWidth <= 1100) no = 3;\r\n      else no = 6;\r\n    }\r\n    return setCardsToShow(no);\r\n  };\r\n\r\n  const moreOrLess = () => {\r\n    let label = \"View more\";\r\n    if (cardsToShow >= topics.length) {\r\n      label = \"View less\";\r\n    }\r\n    return label;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getCurrentCity = async () => {\r\n      const doc = await firestore.collection('section_items').doc(cityId).get();\r\n      if (!doc.exists) {\r\n        setLoading(true);\r\n      } else {\r\n        setFetchedCurrentCity(doc.data());\r\n        setTopics(doc.data().topics)\r\n        setLoading(false);\r\n      }\r\n    };\r\n    getCurrentCity();\r\n  }, [cityId, isVisible]);\r\n\r\n\r\n  const formHandler = (data) => {\r\n    setIsVisible(true);\r\n    setCurrentItem({\r\n      id: data.id,\r\n      text: data.text,\r\n      image: data.image,\r\n      link: data.link\r\n    })\r\n  };\r\n\r\n  //validations\r\n  const typeValidation = [\"image/png\", \"image/jpeg\", \"image/jpg\"];\r\n  const sizeValidation = 200000;\r\n  const message = (file) => {\r\n    return `The size of the image should be maximum ${sizeTransform(sizeValidation)}, and the format need to be PNG, JPG. You tried to upload a file format: ${file.type}, size: ${sizeTransform(file.size)}`;\r\n  };\r\n\r\n  const onFileChange = async (e) => {\r\n    const file = e.target.files[0];\r\n    const storageRef = app.storage().ref();\r\n\r\n    if (file && typeValidation.includes(file.type) && file.size <= sizeValidation) {\r\n      const fileRef = storageRef.child(`section/topics/${file.name}`);\r\n      await fileRef.put(file);\r\n      setFileUrl(await fileRef.getDownloadURL());\r\n    } else {\r\n      alert(message(file))\r\n    }\r\n  };\r\n\r\n  const updateItem = (({ currentItem }, updatedItem) => {\r\n    // console.log(\"it sends item to the updated item function\", updatedItem, currentItem.id);\r\n    const updatedTopics = topics.map((s) => s.id === updatedItem.id ? { ...updatedItem, image: fileUrl || updatedItem.image } : s)\r\n    setIsVisible(false);\r\n    firestore.collection('section_items').doc(cityId).update({ topics: updatedTopics });\r\n  });\r\n\r\n  const onSelectedTopic = (data, topic) => {\r\n    return (\r\n      topic.id === data.id &&\r\n      isVisible && editMode &&\r\n      <div>\r\n        <CityForm\r\n          setIsVisible={setIsVisible}\r\n          currentItem={currentItem}\r\n          updateItem={updateItem}\r\n          onFileChange={onFileChange}\r\n          fileUrl={fileUrl}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const TopicsMobile = () => {\r\n    return (\r\n      <div className={styles.wrapper}>\r\n        Go on desktop to edit\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const TopicsDesktop = () => {\r\n    return (\r\n      <div className={styles.wrapper}>\r\n        <BlogHeader label=\"Top Topics to explore\" />\r\n        <div className={styles.container}>\r\n          {topics.slice(0, cardsToShow).map(topic => (\r\n            <div key={topic.id}>\r\n             \r\n                <TopicCard\r\n                  openForm={() => formHandler(topic)}\r\n                  topic={topic}\r\n                  currentCity={currentCity}\r\n                />\r\n             \r\n              {onSelectedTopic(topic, currentItem)}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <button\r\n          className={styles.moreBtn}\r\n        // onClick={showTopicsHandlerDesk}\r\n        >\r\n          View More\r\n        </button>\r\n        <div\r\n          className={styles.moreDesk}\r\n        // onClick={showTopicsHandlerDesk}\r\n        >\r\n          <p className={styles.moreLink} onClick={moreCards}>\r\n            {moreOrLess().includes(\"less\") ? \"See Less topics\" : \"See More topics\"}\r\n            <img src={arrow} alt=\"arrow-icon\" className={styles.arrow} />\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return <>{width > 1100 ? TopicsDesktop() : TopicsMobile()}</>;\r\n};\r\n\r\nexport default Topics;\r\n","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Section\\Services\\AddService.js",["651","652","653"],"import React, { useEffect, useState } from 'react';\r\nimport { firestore, app } from '../../../utils/firebase.utils';\r\nimport { sizeTransform } from '../../../utils/sizeTransform';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport FeatureCardForm from '../../Admin/FeatureCardForm/SectionServiceAddForm';\r\n\r\nconst AddArticle = ({ cityId }) => {\r\n  const [show, setShow] = useState(false);\r\n  const [imgUrl, setImgUrl] = useState(null);\r\n  const [currentCity, setFetchedCurrentCity] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [services, setServices] = useState([]);\r\n  const [currentService, setCurrentService] = useState(\r\n    {\r\n      title: \"\",\r\n      url: \"\",\r\n      text: \"\",\r\n      image: \"\",\r\n      id: uuidv4(),\r\n    }\r\n  );\r\n  \r\n  useEffect(() => {\r\n    const getCurrentCity = async () => {\r\n      const doc = await firestore.collection('section_items').doc(cityId).get();\r\n      if (!doc.exists) {\r\n        setLoading(true);\r\n      } else {\r\n        setFetchedCurrentCity(doc.data());\r\n        setServices(doc.data().services)\r\n        setLoading(false);\r\n      }\r\n    };\r\n    getCurrentCity();\r\n  }, [show, cityId]);\r\n\r\n  const createService = async (data)=> {\r\n    setShow(false);\r\n    await firestore.collection('section_items').doc(cityId).update({services: [...services, {...data, image: imgUrl}]});\r\n  };\r\n\r\n  //validations\r\n  const typeValidation = [\"image/png\",  \"image/jpeg\", \"image/jpg\", \"image/svg+xml\"];\r\n  const sizeValidation = 200000;\r\n  const message = (file) => {\r\n    return `The size of the image should be maximum ${sizeTransform(sizeValidation)}, and the format need to be PNG, JPG. You tried to upload a file format: ${file.type}, size: ${sizeTransform(file.size)}`;\r\n  };\r\n\r\n  const onFileChange = async (e) => {\r\n    const file = e.target.files[0];\r\n    const storageRef = app.storage().ref();\r\n    if (file && typeValidation.includes(file.type) && file.size <= sizeValidation) {\r\n      const fileRef = storageRef.child(`section/services/${file.name}`);\r\n      await fileRef.put(file);\r\n      setImgUrl(await fileRef.getDownloadURL());\r\n    } else {\r\n      alert(message(file))\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div \r\n        className=\"add_article\"\r\n        style={{backgroundColor: show ? '#f24b6a' : '#C4C4C4', left:'850px', bottom: '-140px'}}\r\n        onClick={() => setShow(true)}\r\n      >\r\n        +\r\n      </div>\r\n      {show && \r\n        <FeatureCardForm\r\n          setShow={setShow}\r\n          onFileChange={onFileChange}\r\n          // onAuthorChange={onAuthorChange}\r\n          updateFeatureCard={createService}\r\n          // createdId={createdId}\r\n          currentFeatureCard={currentService}\r\n      />\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddArticle;","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Section\\Services\\Services.js",["654","655"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport styles from './Services.module.css';\r\nimport BlogHeader from '../../../components/TravelBlog/sectionHeader/SectionHeader';\r\nimport ServiceCard from \"./ServiceCard\";\r\nimport more from '../../../assets/Section/Services/more.svg';\r\nimport { EditContext } from \"../../../contexts/editContext\";\r\nimport { firestore, app } from \"../../../utils/firebase.utils\";\r\nimport FeatureCardForm from \"../../Admin/FeatureCardForm/SectionServiceCardForm\";\r\nimport { sizeTransform } from \"../../../utils/sizeTransform\";\r\nimport { arraySize } from \"../../../utils/manageDisplayItems\";\r\n\r\nconst Services = ({ cityId }) => {\r\n  const { editStyle, editMode } = useContext(EditContext);\r\n  const [currentCity, setFetchedCurrentCity] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [serviceData, setServiceData] = useState([]);\r\n  const [show, setShow] = useState(false);\r\n  const [currentFeatureCard, setCurrentFeatureCard] = useState([]);\r\n  const [fileUrl, setFileUrl] = useState(null);\r\n  const [cardsToShow, setCardsToShow] = useState(arraySize(1, 3));\r\n  const moreCards = () => {\r\n    let no = cardsToShow + 1;\r\n    if (cardsToShow >= serviceData.length) {\r\n      no = 3;\r\n    }\r\n    return setCardsToShow(no);\r\n  };\r\n\r\n  const moreOrLess = () => {\r\n    let label = \"View more\";\r\n    if (cardsToShow >= serviceData.length) {\r\n      label = \"View less\";\r\n    }\r\n    return label;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getCurrentCity = async () => {\r\n      const doc = await firestore.collection('section_items').doc(cityId).get();\r\n      if (!doc.exists) {\r\n        setLoading(true);\r\n      } else {\r\n        setFetchedCurrentCity(doc.data());\r\n        setServiceData(doc.data().services)\r\n        setLoading(false);\r\n      }\r\n    };\r\n    getCurrentCity();\r\n    console.log('martor')\r\n  }, [cityId, show]);\r\n\r\n  const openEditForm = (data) => {\r\n    setShow(true);\r\n    setCurrentFeatureCard({\r\n      id: data.id,\r\n      text: data.text,\r\n      title: data.title,\r\n      image: data.image,\r\n      url: data.url\r\n    })\r\n  };\r\n\r\n  const updateFeatureCard = (({ currentFeatureCard }, updatedFeatureCard) => {\r\n    setShow(false);\r\n    const updatedServices = serviceData.map((s) => s.id === updatedFeatureCard.id ? { ...updatedFeatureCard, image: fileUrl || updatedFeatureCard.image } : s)\r\n    \r\n    return firestore.collection('section_items').doc(cityId).update({ services: updatedServices })\r\n  });\r\n\r\n  const typeValidation = [\"image/png\", \"image/jpeg\", \"image/jpg\", \"image/svg+xml\"];\r\n  const sizeValidation = 200000;\r\n  const message = (file) => {\r\n    return `The size of the image should be maximum ${sizeTransform(sizeValidation)}, and the format need to be PNG, JPG. You tried to upload a file format: ${file.type}, size: ${sizeTransform(file.size)}`;\r\n  }\r\n  // manage the upload file form + type and size validation\r\n  const onFileChange = async (e) => {\r\n    const file = e.target.files[0];\r\n    const storageRef = app.storage().ref();\r\n    if (file && typeValidation.includes(file.type) && file.size <= sizeValidation) {\r\n      const fileRef = storageRef.child(`section/services/${file.name}`);\r\n      await fileRef.put(file);\r\n      setFileUrl(await fileRef.getDownloadURL());\r\n    } else {\r\n      alert(message(file))\r\n    }\r\n  }\r\n\r\n  const onSelectedCard = (card, currentCard) => {\r\n    return (\r\n      card.id === currentCard.id &&\r\n      show && editMode &&\r\n      <div>\r\n        <FeatureCardForm\r\n          setShow={setShow}\r\n          currentFeatureCard={currentFeatureCard}\r\n          updateFeatureCard={updateFeatureCard}\r\n          onFileChange={onFileChange}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <BlogHeader label=\"Recommend Services\" />\r\n      <div className={styles.container}>\r\n        {serviceData.slice(0, cardsToShow).map(card => (\r\n          <div style={editStyle} key={card.id}>\r\n            <ServiceCard\r\n              card={card}\r\n              editFeatureCard={() => openEditForm(card)}\r\n              editMode={editMode}\r\n            />\r\n            {onSelectedCard(card, currentFeatureCard)}\r\n          </div>\r\n        ))}\r\n        <div className={styles.moreBtn} onClick={moreCards}>\r\n          <img src={more} alt='more-icon' className={styles.moreIcon} />\r\n          <p\r\n            className={styles.moreText}\r\n          >\r\n            {moreOrLess().includes(\"less\") ? \"Less\" : \"More\"}\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Services;","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Section\\Members\\Members.js",["656","657","658"],"import React, { useContext, useState, Fragment, useEffect, useRef } from 'react';\r\nimport styles from './Members.module.css';\r\nimport BlogHeader from '../../../components/TravelBlog/sectionHeader/SectionHeader';\r\nimport { FiPlus } from \"react-icons/fi\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { MemberCard } from './MemberCard';\r\nimport { EditContext } from '../../../contexts/editContext';\r\nimport CommunityMembersForm from '../../Admin/JoinCommunityForm/SectionMembersForm';\r\nimport { firestore, app } from '../../../utils/firebase.utils';\r\nimport { sizeTransform } from '../../../utils/sizeTransform';\r\n\r\nconst Members = ({ cityId }) => {\r\n  const { editStyle, editMode } = useContext(EditContext);\r\n  const [showMembersForm, setShowMembersForm] = useState(false);\r\n  const [currentMember, setCurrentMember] = useState({id: \"\", name: '', flags: '', image: ''});\r\n  const [fileUrl, setFileUrl] = useState(null);\r\n  const [currentCity, setFetchedCurrentCity] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [members, setMembers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getCurrentCity = async () => {\r\n      const doc = await firestore.collection('section_items').doc(cityId).get();\r\n      if (!doc.exists) {\r\n        setLoading(true);\r\n      } else {\r\n        setFetchedCurrentCity(doc.data());\r\n        setMembers(doc.data().topMembers)\r\n        setLoading(false);\r\n      }\r\n    };\r\n    getCurrentCity();\r\n  }, [cityId, showMembersForm]);\r\n\r\n  const getCurrentMember = (ref) => {\r\n    const member = members.filter((m) => {\r\n      return m.id === ref.current.id;\r\n    });\r\n    setCurrentMember(member[0]);\r\n    setShowMembersForm(true);\r\n  };\r\n\r\n  const updateMemberData = (({currentMember}, updatedMember) => {\r\n    setShowMembersForm(false);\r\n    const updatedMembers = members.map((s) => s.id === updatedMember.id ? {...updatedMember, image: fileUrl || updatedMember.image} : s)\r\n    setShowMembersForm(false);\r\n  firestore.collection('section_items').doc(cityId).update({topMembers: updatedMembers});\r\n    \r\n  });\r\n\r\n  // validations for uploaded images\r\n  const typeValidation = [\"image/png\",  \"image/jpeg\", \"image/jpg\"];\r\n  const sizeValidation = 200000;\r\n  const message = (file) => {\r\n    return `The size of the image should be maximum ${sizeTransform(sizeValidation)}, and the format need to be PNG, JPG. You tried to upload a file format: ${file.type}, size: ${sizeTransform(file.size)}`;\r\n  } \r\n  // manage the upload member picture form + type and size validation\r\n  const onFileChange = async (e) => {\r\n  const file = e.target.files[0];\r\n  const storageRef = app.storage().ref();\r\n  if (file && typeValidation.includes(file.type) && file.size <= sizeValidation) {\r\n    const fileRef = storageRef.child(`section/members/${file.name}`);\r\n    await fileRef.put(file);\r\n    setFileUrl(await fileRef.getDownloadURL());\r\n  } else {\r\n    alert(message(file))\r\n  }\r\n  }\r\n  return (\r\n  <div className={styles.wrapper}>\r\n      <BlogHeader label=\"Top members to meet\" />\r\n      <div className={styles.grid} style={editStyle}>\r\n        <div className={styles.empty}/>\r\n        {members.slice(0,2).map((memberData) => (\r\n          <MemberCard \r\n            key={memberData.id} \r\n            memberData={memberData} \r\n            getCurrentMember={getCurrentMember} \r\n          />\r\n        ))}\r\n        <div className={styles.flipcard}>\r\n          <div className={styles.flipcardInner}>\r\n            <div className={styles.flipcardFront}>\r\n              <FiPlus className={styles.joinIcon} />\r\n            </div>\r\n            <button type=\"button\" className={styles.flipcardBack}>\r\n              <Link to=\"/signup\" className={styles.joinAnchor}>\r\n                Join us\r\n              </Link>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {members.slice(2,5).map((memberData) => (\r\n          <MemberCard \r\n            key={memberData.id}\r\n            memberData={memberData} \r\n            getCurrentMember={getCurrentMember} />\r\n        ))}\r\n        <div />\r\n      </div>\r\n      { editMode && \r\n    <Fragment>\r\n      { showMembersForm && \r\n        <CommunityMembersForm\r\n        currentMember={currentMember}\r\n        setShowMembersForm={setShowMembersForm}\r\n        updateMemberData={updateMemberData}\r\n        // onFileSubmit={onFileSubmit}\r\n        onFileChange={onFileChange}\r\n      />\r\n      }\r\n    </Fragment>\r\n    }\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default Members;\r\n","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Section\\Topics\\AddTopic.js",["659","660","661"],"import React, { useEffect, useState } from 'react';\r\nimport { firestore, app } from '../../../utils/firebase.utils';\r\nimport { sizeTransform } from '../../../utils/sizeTransform';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport CityForm from '../../Admin/CityForm/SectionAddTopicForm';\r\n\r\nconst AddArticle = ({ cityId }) => {\r\n  const [show, setShow] = useState(false);\r\n  const [imgUrl, setImgUrl] = useState(null);\r\n  const [currentCity, setFetchedCurrentCity] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [topics, setTopics] = useState([]);\r\n  const [currentService, setCurrentService] = useState(\r\n    {\r\n      link: \"\",\r\n      text: \"\",\r\n      image: \"\",\r\n      id: uuidv4(),\r\n    }\r\n  );\r\n  \r\n  useEffect(() => {\r\n    const getCurrentCity = async () => {\r\n      const doc = await firestore.collection('section_items').doc(cityId).get();\r\n      if (!doc.exists) {\r\n        setLoading(true);\r\n      } else {\r\n        setFetchedCurrentCity(doc.data());\r\n        setTopics(doc.data().topics)\r\n        setLoading(false);\r\n      }\r\n    };\r\n    getCurrentCity();\r\n  }, [show, cityId]);\r\n\r\n  const createService = async (data)=> {\r\n    setShow(false);\r\n    await firestore.collection('section_items').doc(cityId).update({topics: [...topics, {...data, image: imgUrl}]});\r\n  };\r\n\r\n  //validations\r\n  const typeValidation = [\"image/png\",  \"image/jpeg\", \"image/jpg\", \"image/svg+xml\"];\r\n  const sizeValidation = 200000;\r\n  const message = (file) => {\r\n    return `The size of the image should be maximum ${sizeTransform(sizeValidation)}, and the format need to be PNG, JPG. You tried to upload a file format: ${file.type}, size: ${sizeTransform(file.size)}`;\r\n  };\r\n\r\n  const onFileChange = async (e) => {\r\n    const file = e.target.files[0];\r\n    const storageRef = app.storage().ref();\r\n    if (file && typeValidation.includes(file.type) && file.size <= sizeValidation) {\r\n      const fileRef = storageRef.child(`section/services/${file.name}`);\r\n      await fileRef.put(file);\r\n      setImgUrl(await fileRef.getDownloadURL());\r\n    } else {\r\n      alert(message(file))\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div \r\n        className=\"add_article\"\r\n        style={{backgroundColor: show ? '#f24b6a' : '#C4C4C4', left:'850px', bottom: '-190px'}}\r\n        onClick={() => setShow(true)}\r\n      >\r\n        +\r\n      </div>\r\n      {show && \r\n        <CityForm\r\n          setIsVisible={setShow}\r\n          onFileChange={onFileChange}\r\n          updateItem={createService}\r\n          currentItem={currentService}\r\n      />\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddArticle;","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Section\\Articles\\AddArticle.js",["662","663","664","665"],"import React, { useEffect, useState } from 'react';\r\nimport AddArticleForm from './AddArticleForm';\r\nimport { firestore, app } from '../../../utils/firebase.utils';\r\nimport { sizeTransform } from '../../../utils/sizeTransform';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst AddArticle = ({cityId}) => {\r\n  const [show, setShow] = useState(false);\r\n  const [coverUrl, setCoverUrl] = useState(null);\r\n  const [authUrl, setAuthUrl] = useState(null);\r\n  const [createdId, setCreatedId] = useState(null);\r\n  const [currentCity, setFetchedCurrentCity] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [articles, setArticles] = useState([]);\r\n  const [currentArticle, setCurrentArticle] = useState(\r\n    {\r\n      coverImg: coverUrl,\r\n      title: \"title\",\r\n      link: \"\",\r\n      authImg: authUrl,\r\n      authName: \"author\",\r\n      likes: \"0\",\r\n      id: uuidv4(),\r\n    }\r\n  );\r\n \r\n  useEffect(() => {\r\n    const getCurrentCity = async () => {\r\n      const doc = await firestore.collection('section_items').doc(cityId).get();\r\n      if (!doc.exists) {\r\n        setLoading(true);\r\n      } else {\r\n        setFetchedCurrentCity(doc.data());\r\n        setArticles(doc.data().articles)\r\n        setLoading(false);\r\n      }\r\n    };\r\n    getCurrentCity();\r\n  }, [cityId, show]);\r\n\r\n  const createArticle = async (data)=> {\r\n    setShow(false);\r\n    await firestore.collection('section_items').doc(cityId).update({articles: [...articles, data]});\r\n  };\r\n\r\n  //validations\r\n  const typeValidation = [\"image/png\",  \"image/jpeg\", \"image/jpg\"];\r\n  const sizeValidation = 200000;\r\n  const message = (file) => {\r\n    return `The size of the image should be maximum ${sizeTransform(sizeValidation)}, and the format need to be PNG, JPG. You tried to upload a file format: ${file.type}, size: ${sizeTransform(file.size)}`;\r\n  };\r\n\r\n  const onCoverChange = async (e) => {\r\n    const file = e.target.files[0];\r\n    const storageRef = app.storage().ref();\r\n    if (file && typeValidation.includes(file.type) && file.size <= sizeValidation) {\r\n      const fileRef = storageRef.child(`section/articles/${file.name}`);\r\n      await fileRef.put(file);\r\n      setCoverUrl(await fileRef.getDownloadURL());\r\n    } else {\r\n      alert(message(file))\r\n    }\r\n  }\r\n  \r\n  const onAuthorChange = async (e) => {\r\n    const file = e.target.files[0];\r\n    const storageRef = app.storage().ref();\r\n    if (file && typeValidation.includes(file.type) && file.size <= sizeValidation) {\r\n      const fileRef = storageRef.child(`section/articles/${file.name}`);\r\n      await fileRef.put(file);\r\n      setAuthUrl(await fileRef.getDownloadURL());\r\n    } else {\r\n      alert(message(file))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div \r\n        className=\"add_article\"\r\n        style={{backgroundColor: show ? '#f24b6a' : '#C4C4C4'}}\r\n        onClick={() => setShow(true)}\r\n      >\r\n        +\r\n      </div>\r\n      {show && \r\n        <AddArticleForm\r\n          setShow={setShow}\r\n          onCoverChange={onCoverChange}\r\n          onAuthorChange={onAuthorChange}\r\n          createArticle={createArticle}\r\n          createdId={createdId}\r\n          currentArticle={currentArticle}\r\n      />\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddArticle;","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Section\\Relocate\\Relocate.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Section\\Articles\\Articles.js",["666","667","668","669","670"],"import React, { useState, useEffect, useContext, Fragment, useRef } from \"react\";\r\nimport \"./Articles.css\";\r\nimport styles from \"./Articles.module.css\";\r\nimport BlogHeader from \"../../../components/TravelBlog/sectionHeader/SectionHeader\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport Slider from \"react-slick\";\r\nimport { GetWindowDimension } from \"../../../utils/GetWindowDimension\";\r\nimport { firestore, app } from \"../../../utils/firebase.utils\";\r\nimport { EditContext } from \"../../../contexts/editContext\";\r\nimport heart from \"../../../assets/Section/Articles/heart-button.svg\";\r\nimport ArticlesForm from \"./ArticlesForm\";\r\nimport Form from \"./Form\";\r\nimport { sizeTransform } from \"../../../utils/sizeTransform\";\r\n\r\nconst Articles = ({ cityId }) => {\r\n  const { width } = GetWindowDimension();\r\n  const { editStyle, editMode } = useContext(EditContext)\r\n  const [coverUrl, setCoverUrl] = useState(null);\r\n  const [authUrl, setAuthUrl] = useState(null);\r\n  const [currentCity, setFetchedCurrentCity] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [articles, setArticles] = useState([]);\r\n  const [show, setShow] = useState(false);\r\n  const [currentArticle, setCurrentArticle] = useState({id: \"\", authImg: '', authName: '', coverImg: '', likes: ''});\r\n\r\n  useEffect(() => {\r\n    const getCurrentCity = async () => {\r\n      const doc = await firestore.collection('section_items').doc(cityId).get();\r\n      if (!doc.exists) {\r\n        setLoading(true);\r\n      } else {\r\n        setFetchedCurrentCity(doc.data());\r\n        setArticles(doc.data().articles)\r\n        setLoading(false);\r\n      }\r\n    };\r\n    getCurrentCity();\r\n  }, [cityId, show]);\r\n\r\n  const getCurrentArticle = (data) => {\r\n    const article = articles.filter((m) => {\r\n      return m.id === data.id;\r\n    });\r\n    setCurrentArticle(article[0]);\r\n    setShow(true);\r\n  };\r\n\r\n  const updateArticles = (({currentArticle}, updatedArticle) => {\r\n    setShow(false);\r\n    const updatedArticles = articles.map((s) => s.id === updatedArticle.id ? {...updatedArticle, coverImg: coverUrl || updatedArticle.coverImg, authImg: authUrl || updatedArticle.authImg} : s)\r\n    setShow(false);\r\n  firestore.collection('section_items').doc(cityId).update({articles: updatedArticles});\r\n  });\r\n\r\n  // validations for uploaded images\r\n  const typeValidation = [\"image/png\",  \"image/jpeg\", \"image/jpg\"];\r\n  const sizeValidation = 200000;\r\n  const message = (file) => {\r\n    return `The size of the image should be maximum ${sizeTransform(sizeValidation)}, and the format need to be PNG, JPG. You tried to upload a file format: ${file.type}, size: ${sizeTransform(file.size)}`;\r\n  } \r\n  // manage the upload member picture form + type and size validation\r\n  const onCoverChange = async (e) => {\r\n  const file = e.target.files[0];\r\n  const storageRef = app.storage().ref();\r\n  if (file && typeValidation.includes(file.type) && file.size <= sizeValidation) {\r\n    const fileRef = storageRef.child(`section/articles/${file.name}`);\r\n    await fileRef.put(file);\r\n    setCoverUrl(await fileRef.getDownloadURL());\r\n  } else {\r\n    alert(message(file))\r\n  }\r\n}\r\n\r\nconst onAuthorChange = async (e) => {\r\n  const file = e.target.files[0];\r\n  const storageRef = app.storage().ref();\r\n  if (file && typeValidation.includes(file.type) && file.size <= sizeValidation) {\r\n    const fileRef = storageRef.child(`section/articles/${file.name}`);\r\n    await fileRef.put(file);\r\n    setAuthUrl(await fileRef.getDownloadURL());\r\n  } else {\r\n    alert(message(file))\r\n  }\r\n}\r\n\r\nconst onImgChange = async (e, setImg) => {\r\n  // const file = e.target.files[0];\r\n  // const storageRef = app.storage().ref();\r\n  // if (file && typeValidation.includes(file.type) && file.size <= sizeValidation) {\r\n  //   const fileRef = storageRef.child(`section/articles/${file.name}`);\r\n  //   await fileRef.put(file);\r\n  //   setImg(await fileRef.getDownloadURL());\r\n  // } else {\r\n  //   alert(message(file))\r\n  // }\r\n  console.log(e, setImg)\r\n};\r\n\r\n  const ArticlesMobile = () => {\r\n    return (\r\n      <div className={styles.mobile}>\r\n        <div className={styles.items}>\r\n          Go on desktop for editing\r\n        </div>\r\n        <button className={styles.moreBtn} >\r\n          View More\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const ArticlesDesk = () => {\r\n    const settings = {\r\n      infinite: false,\r\n      speed: 500,\r\n      slidesToShow: 4,\r\n      slidesToScroll: 1,\r\n      className: \"slider variable-width\",\r\n      variableWidth: true,\r\n    };\r\n    return (\r\n      <div className='articles' style={{position: \"relative\"}}>\r\n      <Slider\r\n        {...settings}\r\n        className={styles.articles}\r\n      >\r\n        {articles.map((data) => (\r\n          <div \r\n            className={styles.eachSlide}\r\n            key={data.id}\r\n            onClick={() => getCurrentArticle(data)}\r\n          >\r\n            <div className={styles.card} style={editStyle}>\r\n              <div\r\n                className={styles.top}\r\n                style={{ backgroundImage: `url(${data.coverImg})` }}\r\n              >\r\n                <p className={styles.title}>{data.title}</p>\r\n              </div>\r\n              <div className={styles.bottom}>\r\n                <div className={styles.author}>\r\n                  <img src={data.authImg} alt=\"author\" className={styles.img} />\r\n                  <p className={styles.name}>{data.authName}</p>\r\n                </div>\r\n                <div className={styles.likes}>\r\n                  <img\r\n                    src={heart}\r\n                    alt=\"heart-button\"\r\n                    className={styles.heart}\r\n                  />\r\n                  <p className={styles.number}>{data.likes}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </Slider>\r\n      { editMode && \r\n      <Fragment>\r\n        { show && \r\n          <ArticlesForm\r\n          currentArticle={currentArticle}\r\n          setShow={setShow}\r\n          updateArticles={updateArticles}\r\n          onCoverChange={onCoverChange}\r\n          onAuthorChange={onAuthorChange}\r\n        />\r\n        // <Form\r\n        //   currentItem={currentArticle}\r\n        //   setShow={setShow}\r\n        //   updateItem={updateArticles}\r\n        //   onImgChange={onImgChange}\r\n        // />\r\n        }\r\n      </Fragment>\r\n      }\r\n      </div>\r\n    );\r\n  };\r\n  return (\r\n    <div\r\n      className={styles.wrapper}\r\n      style={{ display: \"grid\", gridGap: \"30px\" }}\r\n    >\r\n      <BlogHeader label=\"Top Articles to see\" />\r\n      {width >= 1100 ? ArticlesDesk() : ArticlesMobile()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Articles;\r\n","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Section\\SliderBanner\\SliderBanner.js",["671","672"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport styles from \"./SliderBanner.module.css\";\r\nimport \"./SliderBanner.css\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport Slider from \"react-slick\";\r\nimport { EditContext } from \"../../../contexts/editContext\";\r\nimport { firestore, app } from \"../../../utils/firebase.utils\";\r\nimport FeatureCardForm from \"../../Admin/FeatureCardForm/SectionNewsCardForm\";\r\nimport { sizeTransform } from \"../../../utils/sizeTransform\";\r\n\r\nconst SliderBanner = ({ cityId }) => {\r\n  const { editStyle, editMode } = useContext(EditContext);\r\n  const [currentCity, setFetchedCurrentCity] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [newsData, setNewsData] = useState([]);\r\n  const [show, setShow] = useState(false);\r\n  const [currentFeatureCard, setCurrentFeatureCard] = useState([]);\r\n  const [fileUrl, setFileUrl] = useState(null);\r\n  \r\n  useEffect(() => {\r\n    const getCurrentCity = async () => {\r\n      const doc = await firestore.collection('section_items').doc(cityId).get();\r\n      if (!doc.exists) {\r\n        setLoading(true);\r\n      } else {\r\n        setFetchedCurrentCity(doc.data());\r\n        setNewsData(doc.data().news)\r\n        setLoading(false);\r\n      }\r\n    };\r\n    getCurrentCity();\r\n  }, [cityId, show]);\r\n\r\n  const settings = {\r\n    dots: true,\r\n    dotsClass: \"slider-dots\",\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    autoplay: true,\r\n    autoplaySpeed: 3000,\r\n    arrows: false,\r\n  };\r\n\r\n  const openEditForm = (data) => {\r\n    setShow(true);\r\n    setCurrentFeatureCard({\r\n      id: data.id,\r\n      text: data.text,\r\n      link: data.link,\r\n      image: data.image,\r\n    })\r\n  };\r\n\r\n  const updateFeatureCard = (({currentFeatureCard}, updatedFeatureCard) => {\r\n    setShow(false);\r\n   const updatedServices = newsData.map((s) => s.id === updatedFeatureCard.id ? {...updatedFeatureCard, image: fileUrl || updatedFeatureCard.image} : s)\r\n   return firestore.collection('section_items').doc(cityId).update({news: updatedServices})\r\n  });\r\n\r\n  const typeValidation = [\"image/png\",  \"image/jpeg\", \"image/jpg\", \"image/svg+xml\"];\r\n  const sizeValidation = 200000;\r\n  const message = (file) => {\r\n    return `The size of the image should be maximum ${sizeTransform(sizeValidation)}, and the format need to be PNG, JPG. You tried to upload a file format: ${file.type}, size: ${sizeTransform(file.size)}`;\r\n  } \r\n  // manage the upload file form + type and size validation\r\n  const onFileChange = async (e) => {\r\n    const file = e.target.files[0];\r\n    const storageRef = app.storage().ref();\r\n    if (file && typeValidation.includes(file.type) && file.size <= sizeValidation) {\r\n      const fileRef = storageRef.child(`section/news/${file.name}`);\r\n      await fileRef.put(file);\r\n      setFileUrl(await fileRef.getDownloadURL());\r\n    } else {\r\n      alert(message(file))\r\n    }\r\n  }\r\n\r\n  const onSelectedCard = (currentFeatureCard) => {\r\n    return (\r\n      show && editMode &&\r\n      <div>\r\n      <FeatureCardForm \r\n        setShow={setShow} \r\n        currentFeatureCard={currentFeatureCard} \r\n        updateFeatureCard={updateFeatureCard} \r\n        onFileChange={onFileChange}\r\n      />\r\n    </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <div className={styles.container} style={editStyle}>\r\n        <Slider {...settings}>\r\n          {newsData.map((news) => (\r\n            <div key={news.id}>\r\n            <div className={styles.eachSlide} onClick={() => openEditForm(news)}>\r\n              <div\r\n                style={{\r\n                  backgroundImage: `url(${news.image})`,\r\n                  position: \"relative\",\r\n                }}\r\n              />\r\n              <p className={styles.headline}>\r\n                {news.text}\r\n              </p>\r\n            </div>\r\n            \r\n            </div>\r\n          ))}\r\n        </Slider>\r\n      </div>\r\n      {onSelectedCard(currentFeatureCard)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SliderBanner;\r\n","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Section\\Vimeo\\Vimeo.js",["673","674","675"],"import React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport { EditContext } from '../../../contexts/editContext';\r\nimport { firestore, app } from '../../../utils/firebase.utils';\r\nimport styles from './Vimeo.module.css';\r\nimport VimeoForm from './VimeoForm';\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport Slider from \"react-slick\";\r\nimport { sizeTransform } from '../../../utils/sizeTransform';\r\n\r\nconst Vimeo = ({ cityId, collection }) => {\r\n  const { editStyle, editMode } = useContext(EditContext);\r\n  const [show, setShow] = useState(false);\r\n  const [fileUrl, setFileUrl] = useState(null);\r\n  const [currentCity, setFetchedCurrentCity] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [advertisements, setAdvertisements] = useState([]);\r\n  const [currentFeatureCard, setCurrentFeatureCard] = useState({});\r\n  const advRef = useRef(null);\r\n\r\n  //hard code for the time being\r\n  const col = collection ? collection : 'section_items'\r\n\r\n  const settings = {\r\n    dots: true,\r\n    dotsClass: \"slider-dots\",\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    autoplay: true,\r\n    autoplaySpeed: 3000,\r\n    arrows: false,\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getCurrentCity = async () => {\r\n      const doc = await firestore.collection(col).doc(cityId).get();\r\n      if (!doc.exists) {\r\n        setLoading(true);\r\n      } else {\r\n        setFetchedCurrentCity(doc.data());\r\n        setAdvertisements(doc.data().advertisements)\r\n        setLoading(false);\r\n      }\r\n    };\r\n    getCurrentCity();\r\n  }, [cityId, show]);\r\n\r\n\r\n  // const handleClick = (item) => (e) => {\r\n  // \tif (editMode) {\r\n  // \t\tif (advRef.current.contains(e.target)) {\r\n  // \t\t\tsetCurrentItem(item)\r\n  // \t\t\t}\r\n  // \t\tsetShow(true)\r\n  // \t}\r\n  // };\r\n\r\n  const openEditForm = (data) => {\r\n    setShow(true);\r\n    setCurrentFeatureCard({\r\n      id: data.id,\r\n      text1: data.text1,\r\n      text2: data.text2,\r\n      link: data.link,\r\n      logo: data.logo,\r\n      bgColor: data.bgColor,\r\n      btColor: data.btColor,\r\n    })\r\n  };\r\n\r\n  const updateFeatureCard = (({ currentFeatureCard }, updatedFeatureCard) => {\r\n    setShow(false);\r\n    const updatedServices = advertisements.map((s) => s.id === updatedFeatureCard.id ? { ...updatedFeatureCard, logo: fileUrl || updatedFeatureCard.logo } : s)\r\n    return firestore.collection(col).doc(cityId).update({ advertisements: updatedServices })\r\n  });\r\n\r\n  const typeValidation = [\"image/png\", \"image/jpeg\", \"image/jpg\", \"image/svg+xml\"];\r\n  const sizeValidation = 200000;\r\n  const message = (file) => {\r\n    return `The size of the image should be maximum ${sizeTransform(sizeValidation)}, and the format need to be PNG, JPG. You tried to upload a file format: ${file.type}, size: ${sizeTransform(file.size)}`;\r\n  }\r\n  // manage the upload file form + type and size validation\r\n  const onFileChange = async (e) => {\r\n    const file = e.target.files[0];\r\n    const storageRef = app.storage().ref();\r\n    if (file && typeValidation.includes(file.type) && file.size <= sizeValidation) {\r\n      const fileRef = storageRef.child(`section/news/${file.name}`);\r\n      await fileRef.put(file);\r\n      setFileUrl(await fileRef.getDownloadURL());\r\n    } else {\r\n      alert(message(file))\r\n    }\r\n  }\r\n\r\n  const onSelectedCard = (currentFeatureCard) => {\r\n    return (\r\n      show && editMode &&\r\n      <div>\r\n        <VimeoForm\r\n          setShow={setShow}\r\n          currentItem={currentFeatureCard}\r\n          updateArticles={updateFeatureCard}\r\n          onFileChange={onFileChange}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.mainContainer} style={editStyle}>\r\n        <Slider {...settings}>\r\n          {advertisements.map((adv) => (\r\n            <div key={adv.id}>\r\n              <div ref={advRef} className={styles.wrapper} onClick={() => openEditForm(adv)} style={{ background: adv.bgColor }}>\r\n                <div className={styles.container}>\r\n                  {/* <p className={styles.title}>Vimeo</p> */}\r\n                  <img src={adv.logo} alt=\"logo\" />\r\n                  {/* <p className={styles.caption}>{adv.text1}</p>\r\n\t\t\t\t\t\t\t<p className={styles.text}>{adv.text2}</p> */}\r\n                </div>\r\n                {/* <button className={styles.btn} style={{background: adv.btColor}}>Learn more</button> */}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </Slider>\r\n      </div>\r\n      {editMode && show &&\r\n        onSelectedCard(currentFeatureCard)\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Vimeo;\r\n","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Section\\TopVideos\\TopVideos.js",["676","677","678"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport BlogHeader from '../../../components/TravelBlog/sectionHeader/SectionHeader';\r\nimport KeenSlider from '../../../components/Carousel/Carousel';\r\nimport { EditContext } from '../../../contexts/editContext';\r\nimport { firestore, app } from '../../../utils/firebase.utils';\r\nimport { sizeTransform } from '../../../utils/sizeTransform';\r\nimport VideoForm from './VideoForm';\r\nimport { readData } from '../../../utils/actions.firebase';\r\nimport styles from './styles.module.css';\r\nimport CarouselCard from '../../../components/Carousel/CarouselCard';\r\nimport { BsCircle } from 'react-icons/bs';\r\n\r\nconst TopVideos = ({ cityId, render }) => {\r\n  const { editStyle, editMode} = useContext(EditContext);\r\n  const [currentCity, setFetchedCurrentCity] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [videos, setVideos] = useState([]);\r\n  const [showVideoForm, setShowVideoForm] = useState(false);\r\n  const [currentVideo, setCurrentVideo] = useState({});\r\n  const [fileUrl, setFileUrl] = useState(null);\r\n  const [deleteForm, showDeleteForm] = useState(false);\r\n  const [showWarning, setShowWarning] = useState(false);\r\n  const [clickedCard, setClickedCard] = useState(null);\r\n  const [varza, setVarza] = useState(false);\r\n  const [currentSlide, setCurrentSlide] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const getCurrentCity = async () => {\r\n      const doc = await firestore.collection('section_items').doc(cityId).get();\r\n      if (!doc.exists) {\r\n        setLoading(true);\r\n      } else {\r\n        setFetchedCurrentCity(doc.data());\r\n        setVideos(doc.data().videos)\r\n        setLoading(false);\r\n      }\r\n    };\r\n    // console.log('martor')\r\n    getCurrentCity();\r\n  }, [cityId, showVideoForm, deleteForm, varza, render]);\r\n\r\n  const getCurrentVideo = (id) => {\r\n    const video = videos.filter((m) => {\r\n      return m.id === id;\r\n    });\r\n    setCurrentVideo(video[0]);\r\n    setShowVideoForm(true);\r\n  };\r\n\r\n  const updateVideoData = (({currentVideo}, updatedVideo) => {\r\n    setShowVideoForm(false);\r\n    const updatedVideos = videos.map((s) => s.id === updatedVideo.id ? {...updatedVideo, coverImg: fileUrl || updatedVideo.coverImg} : s)\r\n    setShowVideoForm(false);\r\n  firestore.collection('section_items').doc(cityId).update({videos: updatedVideos});\r\n  });\r\n\r\n  // validations for uploaded images\r\n  const typeValidation = [\"image/png\",  \"image/jpeg\", \"image/jpg\"];\r\n  const sizeValidation = 200000;\r\n  const message = (file) => {\r\n    return `The size of the image should be maximum ${sizeTransform(sizeValidation)}, and the format need to be PNG, JPG. You tried to upload a file format: ${file.type}, size: ${sizeTransform(file.size)}`;\r\n  } \r\n  // manage the upload video picture placeholder form + type and size validation\r\n  const onFileChange = async (e) => {\r\n  const file = e.target.files[0];\r\n  const storageRef = app.storage().ref();\r\n  if (file && typeValidation.includes(file.type) && file.size <= sizeValidation) {\r\n    const fileRef = storageRef.child(`section/videos/${file.name}`);\r\n    await fileRef.put(file);\r\n    setFileUrl(await fileRef.getDownloadURL());\r\n  } else {\r\n    alert(message(file))\r\n  }\r\n  };\r\n\r\n  // delete selected id from both places in db - live and edit\r\n  const onDelete = async (data) => {\r\n    setShowWarning(false);\r\n    // const id = await readData('section_live', cityId);\r\n    const filter = videos.filter((video) => video.id !== data.id)\r\n    await firestore.collection('section_items').doc(cityId).update({videos: filter});\r\n    // await firestore.collection('section_live').doc(id).update({videos: filter});\r\n    setVarza(!varza)\r\n  };\r\n\r\n  const warningForm = (data) => {\r\n    return (\r\n      <div className=\"warningBox\" style={{ position:'absolute', left:'50%'}}>\r\n        <div className=\"warningHeader\">Warning</div>\r\n        <div className=\"warningText\">\r\n        {`Are you sure you want to DELETE \"${data.text}\" video?`}\r\n        </div>\r\n        <div className=\"warningActions\">\r\n          <p onClick={() => onDelete(data)}>Yes</p>\r\n          <p onClick={() => setShowWarning(false)}>No</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\nconst setCircle = (i, z) => {\r\n  setCurrentSlide(i);\r\n}\r\n\r\n  return (\r\n    <div>\r\n      <BlogHeader label=\"Top Videos to see\"/>\r\n      <div>\r\n        {\r\n          !loading ? (\r\n            <KeenSlider\r\n              data={videos}\r\n              editStyle={editStyle}\r\n              getCurrentVideo={getCurrentVideo}\r\n              cityId={cityId}\r\n              showDeleteForm={showDeleteForm}\r\n              setShowVideoForm={setShowVideoForm}\r\n              render={render}\r\n              currentSlide={currentSlide}\r\n              setCurrentSlide={setCurrentSlide}\r\n            />\r\n          ) : <div>loading...</div>\r\n        }  \r\n        <div className={styles.circleBox}>\r\n          <div className={styles.circleItem}>\r\n            {videos.map((item, i) => (\r\n              <div key={item.id} onClick={() => setCircle(i, item)}>\r\n              <BsCircle style={{background: i === videos.indexOf(item) ? '#f24b6a' : 'white', borderRadius:'50%', cursor: 'pointer'}}/>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      { editMode && \r\n    <>\r\n      { showVideoForm && \r\n        <VideoForm\r\n        currentMember={currentVideo}\r\n        setShowMembersForm={setShowVideoForm}\r\n        updateMemberData={updateVideoData}\r\n        onFileChange={onFileChange}\r\n        setShowVideoForm={setShowVideoForm}\r\n        videos={videos}\r\n        showWarning={showWarning}\r\n        setShowWarning={setShowWarning}\r\n        setClickedCard={setClickedCard}\r\n      />\r\n      }\r\n    </>\r\n    }\r\n    {showWarning  ? warningForm(clickedCard) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopVideos;","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\AuxService\\AuxServiceSection.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\SectionHeader\\SectionHeader.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\Footer\\Footer.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\JoinCommunity\\JoinCommunity.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\AuxService\\AddService.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\JoinCity\\JoinCitySection.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Section\\TopVideos\\AddVideo.js",["679","680","681"],"import React, { useEffect, useState } from 'react';\r\nimport { firestore, app } from '../../../utils/firebase.utils';\r\nimport { sizeTransform } from '../../../utils/sizeTransform';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport VideoForm from './AddVideoForm';\r\n\r\n\r\nconst AddVideo = ({ cityId, setRender, render }) => {\r\n  const [show, setShow] = useState(false);\r\n  const [imgUrl, setImgUrl] = useState(null);\r\n  const [currentCity, setFetchedCurrentCity] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [videos, setVideos] = useState([]);\r\n  const [currentVideo, setCurrentVideo] = useState(\r\n    {\r\n      url: \"\",\r\n      text: \"\",\r\n      coverImg: \"\",\r\n      id: uuidv4(),\r\n    }\r\n  );\r\n  \r\n  useEffect(() => {\r\n    const getCurrentCity = async () => {\r\n      const doc = await firestore.collection('section_items').doc(cityId).get();\r\n      if (!doc.exists) {\r\n        setLoading(true);\r\n      } else {\r\n        setFetchedCurrentCity(doc.data());\r\n        setVideos(doc.data().videos)\r\n        setLoading(false);\r\n      }\r\n    };\r\n    getCurrentCity();\r\n  }, [show, cityId]);\r\n\r\n  const createVideo = async (data)=> {\r\n    setShow(false);\r\n    await firestore.collection('section_items').doc(cityId).update({videos: [...videos, {...data, coverImg: imgUrl}]});\r\n    setRender(false)\r\n  };\r\n\r\n  //validations\r\n  const typeValidation = [\"image/png\",  \"image/jpeg\", \"image/jpg\", \"image/svg+xml\"];\r\n  const sizeValidation = 200000;\r\n  const message = (file) => {\r\n    return `The size of the image should be maximum ${sizeTransform(sizeValidation)}, and the format need to be PNG, JPG. You tried to upload a file format: ${file.type}, size: ${sizeTransform(file.size)}`;\r\n  };\r\n\r\n  const onFileChange = async (e) => {\r\n    const file = e.target.files[0];\r\n    const storageRef = app.storage().ref();\r\n    if (file && typeValidation.includes(file.type) && file.size <= sizeValidation) {\r\n      const fileRef = storageRef.child(`section/videos/${file.name}`);\r\n      await fileRef.put(file);\r\n      setImgUrl(await fileRef.getDownloadURL());\r\n    } else {\r\n      alert(message(file))\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div \r\n        className=\"add_article\"\r\n        style={{backgroundColor: show ? '#f24b6a' : '#C4C4C4'}}\r\n        onClick={() => setShow(true)}\r\n      >\r\n        +\r\n      </div>\r\n      {show && \r\n        <VideoForm\r\n        currentMember={currentVideo}\r\n        setShowMembersForm={setShow}\r\n        updateMemberData={createVideo}\r\n        onFileChange={onFileChange}\r\n        setRender={setRender}\r\n      />\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddVideo;","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\OwnSection\\OwnSection.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\FeaturedArticle\\FeaturedArticlePage.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\HeroBanner\\HeroBanner.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\FeatureCard\\FeatureCardPage.js",["682"],"import React, { useEffect, useState, useContext } from 'react';\r\nimport { EditContext } from '../../contexts/editContext';\r\nimport FeatureCardForm from '../../pages/Admin/FeatureCardForm/FeatureCardForm';\r\nimport { app, firestore } from '../../utils/firebase.utils';\r\nimport { sizeTransform } from '../../utils/sizeTransform';\r\nimport FeatureCard from './FeatureCard';\r\nimport styles from './FeatureCard.module.css';\r\n\r\nconst FeatureCardPage = () => {\r\n  const [featureCards, setFeatureCards] = useState([]);\r\n  const [show, setShow] = useState(false);\r\n  const [fileUrl, setFileUrl] = useState(null);\r\n  const initialFeatureCardState = [\r\n    {id: null, text:\"\", image:\"\", title:\"\"},\r\n  ];\r\n  const [currentFeatureCard, setCurrentFeatureCard] = useState(initialFeatureCardState);\r\n  const { editStyle, editMode } = useContext(EditContext);\r\n\r\n  useEffect(() => {\r\n    //fetch FeatureCard data from firebase\r\n    const unsubscribe = firestore\r\n      .collection(\"features\")\r\n      // .orderBy(\"title\")\r\n      .onSnapshot((snapshot) => {\r\n        const newCards = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        setFeatureCards(newCards);\r\n      });\r\n      return () => unsubscribe();\r\n  }, []);\r\n\r\n  const openEditForm = (data) => {\r\n    setShow(true);\r\n    setCurrentFeatureCard({\r\n      id: data.id,\r\n      text: data.text,\r\n      title: data.title,\r\n      image: data.image,\r\n    })\r\n  };\r\n\r\n  const updateFeatureCard = (({currentFeatureCard}, updatedFeatureCard) => {\r\n    setShow(false);\r\n    firestore.collection('features').doc(currentFeatureCard.id).update(updatedFeatureCard)\r\n  });\r\n\r\n  // on form submit, the file url is set in firestore\r\n  const onSubmit = async (data) => {\r\n    const getCollection = firestore.collection('features');\r\n    await getCollection.doc(currentFeatureCard.id).set({\r\n      image: fileUrl || data.image,\r\n      text: data.text,\r\n      title: data.title\r\n    })\r\n    console.log(\"file saved:\", fileUrl)\r\n    setShow(false);\r\n  }\r\n\r\n\r\n  const typeValidation = [\"image/png\",  \"image/jpeg\", \"image/jpg\"];\r\n  const sizeValidation = 200000;\r\n  const message = (file) => {\r\n    return `The size of the image should be maximum ${sizeTransform(sizeValidation)}, and the format need to be PNG, JPG. You tried to upload a file format: ${file.type}, size: ${sizeTransform(file.size)}`;\r\n  } \r\n  // manage the upload file form + type and size validation\r\n  const onFileChange = async (e) => {\r\n    const file = e.target.files[0];\r\n    const storageRef = app.storage().ref();\r\n    if (file && typeValidation.includes(file.type) && file.size <= sizeValidation) {\r\n      const fileRef = storageRef.child(`features/${file.name}`);\r\n      await fileRef.put(file);\r\n      setFileUrl(await fileRef.getDownloadURL());\r\n    } else {\r\n      alert(message(file))\r\n    }\r\n  }\r\n\r\nconst onSelectedCard = (card, currentCard) => {\r\n  return (\r\n    card.id === currentCard.id &&\r\n    show && editMode &&\r\n    <div>\r\n    <FeatureCardForm \r\n      setShow={setShow} \r\n      currentFeatureCard={currentFeatureCard} \r\n      updateFeatureCard={updateFeatureCard} \r\n      onFileChange={onFileChange}\r\n      onFileSubmit={onSubmit}\r\n    />\r\n  </div>\r\n  );\r\n};\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className={styles.home_value_container}>\r\n        {featureCards.map((card) => (\r\n          <div key={card.id} >\r\n            <FeatureCard \r\n              card={card} \r\n              editFeatureCard={() => openEditForm(card)} \r\n            />\r\n            {onSelectedCard(card, currentFeatureCard)}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeatureCardPage;","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\SHeader\\SHeader.js",["683","684"],"import React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport { firestore } from '../../utils/firebase.utils';\r\nimport { EditContext } from '../../contexts/editContext';\r\nimport { SearchCity } from '../SearchCity/SearchCity';\r\nimport { Fragment } from 'react';\r\nimport TextEdit from '../TextEdit/TextEdit';\r\nimport BannerPlacesForm from '../../pages/Admin/BannerForm/BannerPlacesForm';\r\nimport BannerPhotoForm from '../../pages/Admin/BannerForm/SectionBannerPhotoForm';\r\nimport { AiFillCaretRight } from \"react-icons/ai\";\r\nimport { Link } from 'react-router-dom';\r\nimport SearchBar from '../../pages/Section/Header/SearchBar/SearchBar';\r\n\r\nconst SHeader = ({ contentEditable, cityId }) => {\r\n  const { editStyle, editMode } = useContext(EditContext);\r\n  const [currentCity, setFetchedCurrentCity] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [banners, setBanners] = useState([]);\r\n  const [showTextForm, setShowTextForm] = useState(false);\r\n  const [showPlaceForm, setShowPlaceForm] = useState(false);\r\n  let header = useRef();\r\n  let place = useRef();\r\n  const rawPlace = { text: '', color: '', link: '' };\r\n  const rawText = {\r\n    content: '',\r\n    style: {\r\n      color: '',\r\n      fontSize: '',\r\n      fontWeight: '',\r\n      textAlign: ''\r\n    }\r\n  };\r\n  const [fetchedTexts, setFetchedTexts] = useState([]);\r\n  const [currentText, setCurrentText] = useState(rawText);\r\n  const [places, setPlaces] = useState([]);\r\n  const [currentPlace, setCurrentPlace] = useState(rawPlace);\r\n\r\n  useEffect(() => {\r\n    const getCurrentCity = async () => {\r\n      const doc = await firestore.collection('section_items').doc(cityId).get();\r\n      if (!doc.exists) {\r\n        setLoading(true);\r\n      } else {\r\n        setFetchedCurrentCity(doc.data());\r\n        setBanners([{ img: doc.data().img || doc.data().bannerImg }])\r\n        setFetchedTexts([{ id: 'title', content: doc.data().title.content, style: doc.data().title.style }, { id: 'subtitle', content: doc.data().subtitle.content, style: doc.data().subtitle.style }])\r\n        setPlaces([{ id: 'placeOne', color: doc.data().placeOne.color, link: doc.data().placeOne.link, text: doc.data().placeOne.text }, { id: 'placeTwo', color: doc.data().placeTwo.color, link: doc.data().placeTwo.link, text: doc.data().placeTwo.text }, { id: 'placeThree', color: doc.data().placeThree.color, link: doc.data().placeThree.link, text: doc.data().placeThree.text }])\r\n        setLoading(false);\r\n      }\r\n    };\r\n    getCurrentCity();\r\n  }, [cityId, currentText, currentPlace]);\r\n\r\n  // select the clicked 'place'\r\n  const handleClick = (e) => {\r\n    const newPlace = places.filter((place) => {\r\n      return place.id === e.target.name;\r\n    });\r\n    setCurrentPlace(newPlace[0]);\r\n  };\r\n\r\n  // select the clicked 'text' on banner\r\n  const getCurrentText = (e) => {\r\n    const newText = fetchedTexts.filter((text) => {\r\n      return text.id === e.target.id;\r\n    });\r\n    setCurrentText(newText[0]);\r\n  };\r\n\r\n  // change handler for place\r\n  const handleChangePlace = (e) => {\r\n    const { name, value } = e.target;\r\n    setCurrentPlace({ ...currentPlace, [name]: value });\r\n  };\r\n\r\n  // change handler for banner text\r\n  const handleChangeText = (e) => {\r\n    // const { name, value } = e.target;\r\n    setCurrentText({ ...currentText, content: e.target.innerText, id: e.target.id });\r\n  };\r\n\r\n  const formTextStyle = !showTextForm ? { display: \"none\" }\r\n    : {\r\n      position: 'relative',\r\n      left: '20%',\r\n    };\r\n\r\n  const handleSubmitText = async () => {\r\n    switch (currentText.id) {\r\n      case 'title':\r\n        await firestore.collection(\"section_items\").doc(cityId).update({ ...currentCity, title: { content: currentText.content, style: currentText.style } });\r\n        break;\r\n      case 'subtitle':\r\n        await firestore.collection(\"section_items\").doc(cityId).update({ ...currentCity, subtitle: { content: currentText.content, style: currentText.style } });\r\n        break;\r\n      default:\r\n    }\r\n    setShowTextForm(false);\r\n  };\r\n\r\n  const handleSubmitPlace = async () => {\r\n    switch (currentPlace.id) {\r\n      case 'placeOne':\r\n        await firestore.collection(\"section_items\").doc(cityId).update({ ...currentCity, placeOne: currentPlace });\r\n        break;\r\n      case 'placeTwo':\r\n        await firestore.collection(\"section_items\").doc(cityId).update({ ...currentCity, placeTwo: currentPlace });\r\n        break;\r\n      case 'placeThree':\r\n        await firestore.collection(\"section_items\").doc(cityId).update({ ...currentCity, placeThree: currentPlace });\r\n        break;\r\n      default:\r\n    }\r\n    setShowPlaceForm(false);\r\n  };\r\n\r\n  const onSelectedText = (text, currentText) => {\r\n    return (\r\n      editMode && showTextForm && text.id === currentText.id &&\r\n      <TextEdit\r\n        currentText={currentText}\r\n        formTextStyle={formTextStyle}\r\n        setShowForm={setShowTextForm}\r\n        save={handleSubmitText}\r\n      />\r\n    );\r\n  };\r\n\r\n  const onSelectedPlace = (place, currentPlace) => {\r\n    return (\r\n      editMode && showPlaceForm && place.id === currentPlace.id &&\r\n      <BannerPlacesForm\r\n        showPlaceForm={showPlaceForm}\r\n        currentPlace={currentPlace}\r\n        handleChangePlace={handleChangePlace}\r\n        setShowPlaceForm={setShowPlaceForm}\r\n        save={handleSubmitPlace}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div style={{ position: 'relative', bottom: \"-60px\" }}>\r\n        <BannerPhotoForm\r\n          collection=\"section_items\"\r\n          doc={cityId}\r\n        />\r\n      </div>\r\n      {banners.map(banner => (\r\n        <section\r\n          key={banner.img}\r\n          className=\"section_header\"\r\n          id=\"section_header\"\r\n          style={{ backgroundImage: `url(${banner.img})` }}\r\n        >\r\n          <div className=\"city_header_url\">\r\n            <Link to=\"/landing\">\r\n              <p>Landing Page</p>\r\n            </Link>\r\n            <AiFillCaretRight className=\"city_header_url_icon\" />\r\n            <p>{currentCity.name}</p>\r\n          </div>\r\n          <div\r\n            className=\"headers\"\r\n            ref={header}\r\n          >\r\n            {fetchedTexts.map((t) => (\r\n              <Fragment key={t.id}>\r\n                <div>{onSelectedText(t, currentText)}</div>\r\n                <p\r\n                  id={t.id}\r\n                  name={t.id}\r\n                  contentEditable={contentEditable}\r\n                  style={{ ...editStyle, ...t.style }}\r\n                  suppressContentEditableWarning=\"true\"\r\n                  onFocus={getCurrentText}\r\n                  onBlur={handleChangeText}\r\n                  onClick={() => setShowTextForm(true)}\r\n                >\r\n                  {t.content}\r\n                </p>\r\n              </Fragment>\r\n            ))}\r\n          </div>\r\n          {/* <SearchCity /> */}\r\n          <SearchBar sectionName={currentCity.name} />\r\n          <div ref={place}>\r\n            <div id=\"header_suggestion\" className=\"places\">\r\n              Maybe{\" \"}\r\n              {places.map((p) => (\r\n                <Fragment key={p.id}>\r\n                  {onSelectedPlace(p, currentPlace)}\r\n                  <a\r\n                    href={p.link}\r\n                    target=\"_new\"\r\n                    name={p.id}\r\n                    contentEditable={contentEditable}\r\n                    suppressContentEditableWarning=\"true\"\r\n                    style={{ ...editStyle, color: p.color }}\r\n                    onFocus={handleClick}\r\n                    onClick={() => setShowPlaceForm(true)}\r\n                  >\r\n                    {p.text}\r\n                  </a>\r\n                </Fragment>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </section>\r\n      ))}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default SHeader;","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\utils\\GetWindowDimension.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Section\\Topics\\TopicCard.js",["685","686"],"import React, { useContext } from \"react\";\r\nimport { EditContext } from \"../../../contexts/editContext\";\r\nimport styles from './TopicCard.module.css';\r\n\r\nconst TopicCard = ({ topic, openForm, currentCity }) => {\r\n  const { editStyle, editMode } = useContext(EditContext);\r\n  const { text, image } = topic;\r\n  return (\r\n    <a href={editMode ? '#' : 'https://accomodation-page.web.app/'} target='_blank'>\r\n      <div\r\n        className={styles.card}\r\n        style={{ ...editStyle, backgroundImage: `url(${image})` }}\r\n        onClick={editMode ? openForm : undefined}\r\n      >\r\n        <div className={styles.text}>\r\n          <p className={styles.title}>{text}</p>\r\n          <p className={styles.location}>{currentCity.name}</p>\r\n        </div>\r\n\r\n      </div>\r\n    </a>\r\n  );\r\n};\r\n\r\nexport default TopicCard;\r\n","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\utils\\sizeTransform.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\utils\\manageDisplayItems.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Section\\Members\\MemberCard.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Section\\Services\\ServiceCard.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Section\\Articles\\AddArticleForm.js",["687"],"import React, { useEffect, useState } from 'react';\r\nimport styles from './styles.module.css';\r\n\r\nconst AddArticleForm = (props) => {\r\n  const { setShow, onCoverChange, onAuthorChange, createArticle, currentArticle } = props;\r\n  \r\n  const [data, setData] = useState(currentArticle);\r\n  \r\n  const editMemberStyle = {\r\n    bottom: '-2900px',\r\n    left: '739px',\r\n    zIndex: 100\r\n  };\r\n  const inputHandler = (e) => {\r\n    const {name, value} = e.target;\r\n    setData({...data, [name]:value})\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      <div className={styles.feature_card} style={{...editMemberStyle, height: \"510px\", width: \"560px\"}}>\r\n      <div className={styles.feature_card_container}>\r\n        <h4>Add new article</h4>\r\n        <div className={styles.icon_text}>\r\n          Cover Image\r\n          <span>(Image has to be below 200 KB and PNG/JPG format)</span>\r\n        </div>\r\n        <div className={styles.form_wrapper}>\r\n          <div className={styles.upload_btn_wrapper}>\r\n            <input \r\n              type=\"file\"  \r\n              name=\"coverImg\"\r\n              onChange={onCoverChange}\r\n            />\r\n            <button className={styles.btn}>Upload image</button>\r\n          </div>\r\n          <div>\r\n            <p>Title</p>\r\n            <input\r\n              type=\"text\"\r\n              name=\"title\"\r\n              className={styles.title_input}\r\n              value={data.title}\r\n              onChange={inputHandler}\r\n            />\r\n          </div>\r\n          <div>\r\n            <p>Link of the article</p>\r\n            <input\r\n              type=\"text\"\r\n              name=\"link\"\r\n              className={styles.title_input}\r\n              value={data.link}\r\n              onChange={inputHandler}\r\n            />\r\n          </div>\r\n          <div className={styles.icon_text}>\r\n          <p>Author image\r\n          <span>(Image has to be below 200 KB and PNG/JPG format)</span>\r\n          </p>\r\n          </div>\r\n          <div className={styles.upload_btn_wrapper}>\r\n            <input \r\n              type=\"file\"  \r\n              name=\"authImg\"\r\n              onChange={onAuthorChange}\r\n            />\r\n            <button className={styles.btn}>Upload image</button>\r\n          </div>\r\n          <div className={styles.authLikes}>\r\n            <p>Author name</p>\r\n            <input\r\n              type=\"text\"\r\n              name=\"authName\"\r\n              className={styles.title_input}\r\n              value={data.authName}\r\n              onChange={inputHandler}\r\n            />\r\n            <p>Liked number</p>\r\n            <input\r\n              type=\"text\"\r\n              name=\"likes\"\r\n              className={styles.title_input}\r\n              value={data.likes}\r\n              onChange={inputHandler}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={styles.btn_container}>\r\n        <span>\r\n          <button \r\n            className={styles.btn_apply}\r\n            onClick={() => createArticle(data)}\r\n          >\r\n            Apply\r\n          </button>\r\n        </span>\r\n        <div className={styles.vertical} />\r\n        <span>\r\n          <button \r\n            className={styles.btn_cancel} \r\n            onClick={() => setShow(false)}\r\n          >\r\n            Cancel\r\n          </button>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default AddArticleForm;","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\FeatureCard\\FeatureCard.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\FeaturedArticle\\FeaturedArticle.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\JoinCity\\JoinCity.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Section\\TopVideos\\AddVideoForm.js",["688"],"import React, { useEffect, useState } from 'react';\r\nimport styles from './styles.module.css';\r\n\r\nconst VideoForm = (props) => {\r\n  const { setShowMembersForm, currentMember, updateMemberData, onFileSubmit, onFileChange, setRender, render } = props;\r\n  const [data, setData] = useState(currentMember);\r\n  \r\n  const editMemberStyle = {\r\n    left: '888px',\r\n    zIndex: '100',\r\n    height: '395px'\r\n  };\r\n\r\n  const inputHandler = (e) => {\r\n    const {name, value} = e.target;\r\n    setData({...data, [name]:value})\r\n  };\r\n  \r\n  const submitMemberData = (e) => {\r\n    setRender(!render);\r\n    e.preventDefault();\r\n    updateMemberData(data);\r\n    \r\n  };\r\n  useEffect(() => {\r\n    setData(currentMember);\r\n  }, [currentMember]);\r\n\r\n  return (\r\n    <div>\r\n      <div className={styles.feature_card} style={editMemberStyle}>\r\n      <div className={styles.feature_card_container}>\r\n        <h4>Add video</h4>\r\n        <div className={styles.icon_text}>\r\n          Cover image\r\n          <span>(Image has to be below 200 KB and PNG/JPG format)</span>\r\n        </div>\r\n        <div className={styles.form_wrapper}>\r\n          <div className={styles.upload_btn_wrapper}>\r\n            <input \r\n              type=\"file\"  \r\n              name=\"image\"\r\n              onChange={onFileChange}\r\n            />\r\n            <button className={styles.btn}>Upload image</button>\r\n          </div>\r\n          <div>\r\n            <p>URL</p>\r\n            <input\r\n              type=\"text\"\r\n              name=\"url\"\r\n              className={styles.title_input}\r\n              value={data.url}\r\n              onChange={inputHandler}\r\n            />\r\n          </div>\r\n          <div>\r\n            <p>Text</p>\r\n            <input\r\n              type=\"text\"\r\n              name=\"text\"\r\n              className={styles.title_input}\r\n              value={data.text}\r\n              onChange={inputHandler}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={styles.btn_container}>\r\n        <span>\r\n          <button \r\n            className={styles.btn_apply}\r\n            onClick={submitMemberData}\r\n          >\r\n            Apply\r\n          </button>\r\n        </span>\r\n        <div className={styles.vertical} />\r\n        <span>\r\n          <button \r\n            className={styles.btn_cancel} \r\n            onClick={() => setShowMembersForm(false)}\r\n          >\r\n            Cancel\r\n          </button>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default VideoForm;","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\CityForm\\SectionAddTopicForm.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\CityForm\\CityForm.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\CityForm\\SectionTopicsForm.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\FeatureCardForm\\FeatureCardForm.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\FeatureCardForm\\SectionServiceCardForm.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\FeatureCardForm\\SectionServiceAddForm.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\JoinCommunityForm\\CommunityMembersForm.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\JoinCommunityForm\\SectionMembersForm.js",["689"],"import React, { useEffect, useState } from 'react';\r\nimport styles from './styles.module.css';\r\n\r\nconst ComunnityMembersForm = (props) => {\r\n  const { setShowMembersForm, currentMember, updateMemberData, onFileSubmit, onFileChange } = props;\r\n  const [data, setData] = useState(currentMember);\r\n  const editMemberStyle = {\r\n    bottom: '-360px',\r\n    left: '489px',\r\n    zIndex: 100\r\n  };\r\n\r\n  const inputHandler = (e) => {\r\n    const {name, value} = e.target;\r\n    setData({...data, [name]:value})\r\n  };\r\n  \r\n  const submitMemberData = (e) => {\r\n    e.preventDefault();\r\n    updateMemberData({currentMember}, data);\r\n    // onFileSubmit(data);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setData(currentMember);\r\n  }, [currentMember])\r\n\r\n  return (\r\n    <div>\r\n      <div className={styles.feature_card} style={{...editMemberStyle, height: \"395px\"}}>\r\n      <div className={styles.feature_card_container}>\r\n        <h4>{currentMember.name}</h4>\r\n        <div className={styles.icon_text}>\r\n          Cover image\r\n          <span>(Image has to be below 200 KB and PNG/JPG format)</span>\r\n        </div>\r\n        <div className={styles.form_wrapper}>\r\n          <div className={styles.upload_btn_wrapper}>\r\n            <input \r\n              type=\"file\"  \r\n              name=\"image\"\r\n              onChange={onFileChange}\r\n            />\r\n            <button className={styles.btn}>Upload image</button>\r\n          </div>\r\n          <div>\r\n            <p>Name</p>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              className={styles.title_input}\r\n              value={data.name}\r\n              onChange={inputHandler}\r\n            />\r\n          </div>\r\n          <div>\r\n            <p>Flags</p>\r\n            <input\r\n              type=\"text\"\r\n              name=\"flags\"\r\n              className={styles.title_input}\r\n              value={data.flags}\r\n              onChange={inputHandler}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={styles.btn_container}>\r\n        <span>\r\n          <button \r\n            className={styles.btn_apply}\r\n            onClick={submitMemberData}\r\n          >\r\n            Apply\r\n          </button>\r\n        </span>\r\n        <div className={styles.vertical} />\r\n        <span>\r\n          <button \r\n            className={styles.btn_cancel} \r\n            onClick={() => setShowMembersForm(false)}\r\n          >\r\n            Cancel\r\n          </button>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default ComunnityMembersForm;","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\JoinCommunityForm\\JoinCommunityForm.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\BannerForm\\SectionBannerPhotoForm.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\BannerForm\\BannerPhotoForm.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\BannerForm\\BannerPlacesForm.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\TextEdit\\TextEdit.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\SearchCity\\SearchCity.js",["690","691"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { FiSearch } from \"react-icons/fi\";\r\nimport \"./style.css\";\r\nimport JoinCityData from \"../../Data/JoinCityData\";\r\n\r\n\r\nexport const SearchCity = () => {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  const [joinCity, setJoinCity] = useState(JoinCityData);\r\n  const [currentURL, setCurrentURL] = useState();\r\n  const node = useRef();\r\n  \r\n\r\n  useEffect(() => {\r\n    fetchJoinCityData();\r\n  }, [query]);\r\n\r\n  const fetchJoinCityData = () => {\r\n    const sorted = JoinCityData.filter((city) =>\r\n      city.name.toLowerCase().includes(query.toLowerCase())\r\n    );\r\n    setJoinCity(sorted.sort());\r\n  };\r\n  \r\n  const onSelectCity = (city, url) => {\r\n    setIsVisible(!isVisible);\r\n    setCurrentURL(url);\r\n    setQuery(city);\r\n  };\r\n  \r\n  const navigateTo = (url) => {\r\n    window.location.href = `${url}`;\r\n  };\r\n  \r\n  const handleClick = (e) => {\r\n    if (node.current.contains(e.target)) {\r\n    } else {\r\n      setIsVisible(false);\r\n    }\r\n  };\r\n  \r\n  useEffect(() => {\r\n    document.addEventListener(\"mousedown\", handleClick);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClick);\r\n    };\r\n  }, []);\r\n  \r\n  return (\r\n    <div className=\"search_city_container\" ref={node}>\r\n      <div className=\"header_search\">\r\n        <div className=\"search_input\">\r\n          <FiSearch className=\"search_icon\" />\r\n          <input\r\n            autoComplete=\"new-password\"\r\n            type=\"text\"\r\n            placeholder=\"Your next destination \"\r\n            id=\"header_input_city\"\r\n            value={query}\r\n            onChange={(event) => setQuery(event.target.value)}\r\n            onClick={() => setIsVisible(!isVisible)}\r\n          />\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          className=\"button_submit\"\r\n          id=\"search_submit\"\r\n          onClick={() => {\r\n            query !== \"\"\r\n              ? navigateTo(currentURL)\r\n              : alert(\"Please enter a city name\");\r\n          }}\r\n        >\r\n          Search\r\n        </button>\r\n      </div>\r\n      {isVisible && (\r\n        <div className=\"search_result_containter\">\r\n          {JoinCityData.map((city, index) => (\r\n            <button\r\n              className=\"result_item\"\r\n              onClick={() => onSelectCity(city.name, city.url)}\r\n              type=\"button\"\r\n              key={index}\r\n            >\r\n              {city.name}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\RequestNewCity\\RequestNewCity.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\ArticleForm\\ArticleForm.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\ServiceForm\\AddServiceForm.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\TravelBlog\\sectionHeader\\SectionHeader.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\Footer\\FooterCopyright.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Section\\Header\\SearchBar\\SearchBar.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\Footer\\FooterIcons.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\MemberNearYou\\MemberNearYou.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\ServiceForm\\ServiceForm.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\AuxService\\AuxService.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Section\\TopVideos\\VideoForm.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\TravelBlog\\contexts\\refContext.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\Carousel\\Carousel.js",["692"],"import React, { useEffect, useState } from 'react';\r\nimport 'keen-slider/keen-slider.min.css';\r\nimport { useKeenSlider } from 'keen-slider/react';\r\nimport CarouselCard from './CarouselCard';\r\nimport { GetWindowDimension } from \"../../utils/GetWindowDimension\";\r\n\r\nconst KeenSlider = (props) => {\r\n const { \r\n    data,\r\n    editStyle,\r\n    getCurrentVideo,\r\n    cityId,\r\n    showDeleteForm,\r\n    setShowVideoForm,\r\n    currentSlide,\r\n    setCurrentSlide\r\n  } = props\r\n  const { width } = GetWindowDimension();\r\n  const [slides, setSlides] = useState(1);\r\n  // const [currentSlide, setCurrentSlide] = useState(0);\r\n  const [sliderRef, slider] = useKeenSlider(\r\n    { slidesPerView: slides, \r\n      loop: true,\r\n      centered: true,\r\n      initial: currentSlide,\r\n      slideChanged(s) {\r\n        setCurrentSlide(s.details().relativeSlide)\r\n      },\r\n    });\r\nconsole.log(currentSlide)\r\n    const noSlides = () => {\r\n      return width > 1100 ? 3 : 1;\r\n    };\r\n  \r\n    useEffect(() => {\r\n      setSlides(noSlides());\r\n    }, [width]);\r\n\r\n  return (\r\n    <>\r\n      { data && sliderRef && slider ? (\r\n        <div ref={sliderRef} className=\"keen-slider\">\r\n          {data.map((d, i) => (\r\n              <div \r\n                key={d.id} \r\n                className=\"keen-slider__slide\"\r\n                onClick={() => getCurrentVideo(d.id)}\r\n                style={editStyle}\r\n              >\r\n                <CarouselCard \r\n                  item={d}\r\n                  currentSlide={currentSlide}\r\n                  slideIndex={i}\r\n                  videos={data}\r\n                  cityId={cityId}\r\n                  showDeleteForm={showDeleteForm}\r\n                  setShowVideoForm={setShowVideoForm}\r\n                  render={props.render}\r\n                />\r\n              </div>\r\n            ))}\r\n        </div>\r\n      ) : <div>Loading...</div> }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default KeenSlider;","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\Carousel\\CarouselCard.js",["693"],"import React, { useContext, useRef, useState } from 'react';\r\nimport './styles.css';\r\nimport PlayVideo from './PlayVideo';\r\nimport { IconContext } from \"react-icons\";\r\nimport { AiOutlineCloseCircle, AiOutlinePlayCircle } from \"react-icons/ai\";\r\nimport { EditContext } from '../../contexts/editContext';\r\n\r\nconst CarouselCard = (props) => {\r\n  const {\r\n    item,\r\n    currentSlide,\r\n    slideIndex,\r\n  } = props;\r\n  \r\n  const videoFrameRef = useRef();\r\n  const { editMode } = useContext(EditContext);\r\n\r\n  const initialState = {\r\n    video: null,\r\n    play: false\r\n  };\r\n  const [about, setAbout] = useState(initialState);\r\n\r\n  const playMe = () => {\r\n    const target = videoFrameRef.current;\r\n    return target.classList.remove('video-disabled');\r\n  };\r\n\r\n  const closeMe = () => {\r\n    setAbout(initialState);\r\n    const target = videoFrameRef.current;\r\n    return target.classList.add('video-disabled')\r\n  };\r\n\r\n  const centerStyle = () => {\r\n    if (currentSlide === slideIndex) {\r\n      return {\r\n        transform: 'scale(1.08)',\r\n\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <div className=\"slider center\">\r\n     <div className=\"slide\" style={centerStyle()}>\r\n        <p>{item.text}</p>\r\n        <div \r\n        className=\"cl\"\r\n        style={{backgroundImage: `linear-gradient(to top, rgba(255, 255, 255, 0.1), rgba(0, 0, 0, 0.5)), url(${item.coverImg})`}}\r\n        >\r\n          <div className=\"video-frame video-disabled\" ref={videoFrameRef}>\r\n      <div className=\"video-player\" id=\"video-player\">\r\n        <p onClick={closeMe}>\r\n          <IconContext.Provider value={{ className: \"gr-close\" }}>\r\n            <AiOutlineCloseCircle />\r\n          </IconContext.Provider>\r\n        </p>\r\n          <PlayVideo video={about.video}  />\r\n      </div>\r\n    </div>\r\n          <div className=\"flexbox-centering\"> \r\n            <div onClick={() => {setAbout({video: item.url, play: true}); playMe()} }>\r\n              <AiOutlinePlayCircle />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <p>\" \"</p>\r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CarouselCard;","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\FeatureCardForm\\SectionNewsCardForm.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Section\\Vimeo\\VimeoForm.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Section\\Articles\\Form.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Section\\Articles\\ArticlesForm.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Section\\Relocate\\Summary\\Summary.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Section\\Relocate\\Desktop\\Desktop.js",["694"],"import React ,{useState, useEffect} from \"react\";\r\nimport styles from './Desktop.module.css';\r\nimport { Link } from \"react-router-dom\";\r\nimport {RelocateData} from '../../../../assets/Section/Relocate/RelocateData';\r\nimport DesktopCard from \"./DesktopCard\";\r\nimport Add from \"../../../../assets/Section/Relocate/add-btn.svg\";\r\nimport arrow from \"../../../../assets/Section/Relocate/arrow-icon.svg\";\r\n\r\nconst packagesPerPage = 3;\r\nlet arrayHoldingPackages = [];\r\nconst Desktop = () => {\r\n  const [packagesToShow, setPackagesToShow]=useState([]);\r\n  const [next, setNext]=useState(3);\r\n  const [like,setLike] = useState();\r\n  const increaseLike = (item) =>{ \r\n    const likeNumber = RelocateData.find((p) => p.id === item.id);\r\n    setLike(likeNumber);\r\n    likeNumber.liked = !likeNumber.liked;\r\n  };\r\n\r\n  const loopWithSlice = (start, end)=>{\r\n    const slicedPackages = RelocateData.slice(start,end);\r\n    arrayHoldingPackages=[...arrayHoldingPackages, ...slicedPackages];\r\n    setPackagesToShow(arrayHoldingPackages);\r\n  };\r\n\r\n  useEffect(()=>{\r\n    loopWithSlice(0, packagesPerPage);\r\n  },[]);\r\n\r\n  const showPackagesHandler = ()=>{\r\n    loopWithSlice(next, next + packagesPerPage);\r\n    setNext(next + packagesPerPage);\r\n  };\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <div className={styles.container}>\r\n        <DesktopCard packagesToRender={packagesToShow} heart={increaseLike}/>\r\n        <div className={styles.guide}>\r\n          <p className={styles.title}>Start to create your own Guides!</p>\r\n          <img src={Add} alt=\"add-btn\" className={styles.addBtn} />\r\n        </div>\r\n      </div>\r\n      <div className={styles.moreDesk} onClick={showPackagesHandler}>\r\n        <Link className={styles.moreLink}>View All Guides</Link>\r\n        <img src={arrow} alt=\"arrow-icon\" className={styles.arrow} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Desktop;\r\n","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Section\\Relocate\\Mobile\\Mobile.js",["695"],"import React, {useState, useEffect} from 'react';\r\nimport styles from './Mobile.module.css';\r\nimport {RelocateData} from '../../../../assets/Section/Relocate/RelocateData';\r\nimport MobileCard from './MobileCard';\r\n\r\nconst packagesPerPage = 3;\r\nlet arrayHoldingPackages = [];\r\nconst Mobile = () => {\r\n  const [packagesToShow, setPackagesToShow]=useState([]);\r\n  const [next, setNext]=useState(3);\r\n  const [like,setLike] = useState();\r\n  const increaseLike = (item) =>{ \r\n    const likeNumber = RelocateData.find((p) => p.id === item.id);\r\n    setLike(likeNumber);\r\n    likeNumber.liked = !likeNumber.liked;\r\n  };\r\n  const loopWithSlice = (start, end)=>{\r\n    const slicedPackages = RelocateData.slice(start,end);\r\n    arrayHoldingPackages=[...arrayHoldingPackages, ...slicedPackages];\r\n    setPackagesToShow(arrayHoldingPackages);\r\n  };\r\n\r\n  useEffect(()=>{\r\n    loopWithSlice(0, packagesPerPage);\r\n  },[]);\r\n\r\n  const showPackagesHandler = ()=>{\r\n    loopWithSlice(next, next + packagesPerPage);\r\n    setNext(next + packagesPerPage);\r\n  };\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <MobileCard packagesToRender={packagesToShow} heart={increaseLike}/>\r\n      <button className={styles.more} onClick={showPackagesHandler}>View more</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Mobile;\r\n","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\TextEdit\\Data.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\UploadImage\\UploadImageSection.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\config.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\UploadImage\\UploadImage.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Section\\Header\\SearchBar\\RelatedInfo.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Section\\Header\\SearchBar\\oldSections.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\Data\\JoinCityData.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\EditDropdown\\Dropdown.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\assets\\Section\\Header\\RelatedInfoData.js",["696"],"export default [\r\n    {\r\n        id:1,\r\n        text:\"Eduacation\"\r\n    },\r\n    {\r\n        id:2,\r\n        text:\"Attraction\"\r\n    },\r\n    {\r\n        id:3,\r\n        text:\"Accomodation\"\r\n    },\r\n    {\r\n        id:4,\r\n        text:\"Culture\"\r\n    },\r\n    {\r\n        id:5,\r\n        text:\"Eduacation\"\r\n    },\r\n    {\r\n        id:6,\r\n        text:\"Attraction\"\r\n    },\r\n    {\r\n        id:7,\r\n        text:\"Accomodation\"\r\n    },\r\n    {\r\n        id:8,\r\n        text:\"Transportation\"\r\n    },\r\n    {\r\n        id:9,\r\n        text:\"Culture\"\r\n    },\r\n    {\r\n        id:10,\r\n        text:\"Events\"\r\n    },\r\n    {\r\n        id:11,\r\n        text:\"Health\"\r\n    },\r\n    {\r\n        id:12,\r\n        text:\"Sports\"\r\n    },\r\n    {\r\n        id:13,\r\n        text:\"Entertainment\"\r\n    },\r\n    {\r\n        id:14,\r\n        text:\"Eduacation\"\r\n    },\r\n    {\r\n        id:15,\r\n        text:\"Attraction\"\r\n    }\r\n]","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\Carousel\\PlayVideo.js",["697"],"import React, { useState } from 'react'\r\nimport ReactPlayer from 'react-player';\r\n\r\nconst PlayVideo = ({ video }) => {\r\n  \r\n  const videoSize = () => {\r\n    let opts = {\r\n    height: '390',\r\n    width: '640',\r\n    playerVars: {\r\n      autoplay: 1,\r\n    },};\r\n    (window.innerWidth <= 900) ? ((opts.height = 200) && (opts.width = 300)) : ((opts.height = 390) && (opts.width = 640));\r\n      return opts;\r\n  }\r\nconst [opts] = useState(videoSize());\r\n\r\n  return (\r\n    <ReactPlayer \r\n      url={video} \r\n      height='100%'\r\n      width='100%'\r\n      // muted={true}\r\n      controls={true}\r\n      playing={true}\r\n    />\r\n  );\r\n}\r\n\r\nexport default PlayVideo;","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Section\\Relocate\\Desktop\\DesktopCard.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\assets\\Section\\Relocate\\RelocateData.js",["698"],"import FlagIcon from './flag-icon.svg';\r\nimport author from \"./author-img.jpg\";\r\nimport heart from \"./like-icon.svg\";\r\nimport share from \"./share-icon.svg\";\r\n\r\nexport const RelocateData = [\r\n    {\r\n        id:1,\r\n        img:FlagIcon,\r\n        price: \"€20\",\r\n        title:\"Relocating to Stockholm\",\r\n        textOne:\"What do I need to pack?\",\r\n        textTwo:\"How is the swedish way of life?\",\r\n        textThree:\"What visa do I require for Sweden?\",\r\n        author: author,\r\n        name:\"Sofia\",\r\n        share: share\r\n    },\r\n    {\r\n        id:2,\r\n        img:FlagIcon,\r\n        price: \"€20\",\r\n        title:\"Relocating to Stockholm\",\r\n        textOne:\"What do I need to pack?\",\r\n        textTwo:\"How is the swedish way of life?\",\r\n        textThree:\"What visa do I require for Sweden?\",\r\n        author: author,\r\n        name:\"Sofia\",\r\n        share: share\r\n    },\r\n    {\r\n        id:3,\r\n        img:FlagIcon,\r\n        price: \"€20\",\r\n        title:\"Relocating to Stockholm\",\r\n        textOne:\"What do I need to pack?\",\r\n        textTwo:\"How is the swedish way of life?\",\r\n        textThree:\"What visa do I require for Sweden?\",\r\n        author: author,\r\n        name:\"Sofia\",\r\n        share: share\r\n    },\r\n    {\r\n        id:4,\r\n        img:FlagIcon,\r\n        price: \"€20\",\r\n        title:\"Relocating to Stockholm\",\r\n        textOne:\"What do I need to pack?\",\r\n        textTwo:\"How is the swedish way of life?\",\r\n        textThree:\"What visa do I require for Sweden?\",\r\n        author: author,\r\n        name:\"Sofia\",\r\n        share: share\r\n    },\r\n    {\r\n        id:5,\r\n        img:FlagIcon,\r\n        price: \"€20\",\r\n        title:\"Relocating to Stockholm\",\r\n        textOne:\"What do I need to pack?\",\r\n        textTwo:\"How is the swedish way of life?\",\r\n        textThree:\"What visa do I require for Sweden?\",\r\n        author: author,\r\n        name:\"Sofia\",\r\n        share: share\r\n    },\r\n    {\r\n        id:6,\r\n        img:FlagIcon,\r\n        price: \"€20\",\r\n        title:\"Relocating to Stockholm\",\r\n        textOne:\"What do I need to pack?\",\r\n        textTwo:\"How is the swedish way of life?\",\r\n        textThree:\"What visa do I require for Sweden?\",\r\n        author: author,\r\n        name:\"Sofia\",\r\n        share: share\r\n    }\r\n]","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Section\\Relocate\\Mobile\\MobileCard.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\Data\\HelsinkiTopicData.js",["699"],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\SideNav\\TopicMenu.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\Navigation\\Navigation.js",["700","701"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { HashLink } from \"react-router-hash-link\";\r\nimport { FiMenu } from \"react-icons/fi\";\r\nimport { animated, useSpring } from \"react-spring\";\r\nimport GLOBUZZER from \"../../assets/Logo.svg\";\r\nimport { GetWindowDimension } from \"../../utils/GetWindowDimension\";\r\nimport DestinationIcon from \"../../assets/Nav/DestinationIcon.svg\";\r\nimport ServicesIcon from \"../../assets/Nav/ServicesIcon.svg\";\r\nimport CareerIcon from \"../../assets/Nav/CareerIcon.svg\";\r\nimport PricingIcon from \"../../assets/Nav/PricingIcon.svg\";\r\nimport \"./style.css\";\r\n\r\nexport const Navigation = () => {\r\n  const [navColor, setNavColor] = useState(\"transparent\");\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const { width, height } = GetWindowDimension();\r\n\r\n  window.addEventListener(\"scroll\", () => {\r\n    const currentScroll = window.pageYOffset;\r\n    if (currentScroll > 60) {\r\n      setNavColor(\"rgba(128,128,128,0.6)\");\r\n    } else {\r\n      setNavColor(\"transparent\");\r\n    }\r\n  });\r\n\r\n  const animation = useSpring({\r\n    height: isOpen ? `${height}px` : \"0px\",\r\n    opacity: isOpen ? 1 : 0,\r\n    width: isOpen ? \"213px\" : \"0px\",\r\n    backgroundColor: \"#2A293A\",\r\n    position: \"absolute\",\r\n    top: 0,\r\n    right: 0,\r\n    zIndex: 9999,\r\n    pointerEvents: isOpen ? \"auto\" : \"none\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    config: {\r\n      duration: isOpen ? 100 : 150,\r\n    },\r\n  });\r\n  const Nav = () => (\r\n    <section className=\"section_navigation\">\r\n      <Link to=\"/\">\r\n        <img src={GLOBUZZER} alt=\"logo\" />\r\n      </Link>\r\n      <div className=\"navigation_center\">\r\n        <a\r\n          href=\"/#section_newcity\"\r\n          className=\"navigation_link\"\r\n          id=\"link_destination\"\r\n        >\r\n          Destinations\r\n        </a>\r\n        <a href=\"/#aux_services\" className=\"navigation_link\" id=\"link_services\">\r\n          Services\r\n        </a>\r\n\r\n        <Link to=\"/pricing\" className=\"navigation_link\" id=\"link_pricing\">\r\n          Pricing\r\n        </Link>\r\n\r\n        <a\r\n          href=\"https://skillscanner.globuzzer.com/\"\r\n          className=\"navigation_link\"\r\n          id=\"link_career\"\r\n        >\r\n          Career\r\n        </a>\r\n\r\n        <Link to=\"/travel-blog\"\r\n          className=\"navigation_link\"\r\n          id=\"link_own\"\r\n        >\r\n          Create your travel blog\r\n        </Link>\r\n      </div>\r\n      <div className=\"navigation_control\">\r\n        <a\r\n          type=\"button\"\r\n          className=\"navigation_button\"\r\n          id=\"button_login\"\r\n          href=\"https://globuzzer.mn.co/sign_in\"\r\n        >\r\n          Login\r\n        </a>\r\n        <button type=\"button\" className=\"navigation_button\" id=\"button_signup\">\r\n          <Link to=\"/signup\" className=\"navigation_link\">\r\n            Sign up\r\n          </Link>\r\n        </button>\r\n      </div>\r\n    </section>\r\n  );\r\n  const NavMobileMenu = () => (\r\n    <div style={{ display: \"flex\" }}>\r\n      {isOpen && (\r\n        <div\r\n          onKeyDown={() => { }}\r\n          tabIndex={0}\r\n          role=\"button\"\r\n          style={{\r\n            backgroundColor: \"transparent\",\r\n            width: \"100vw\",\r\n            height: \"100vh\",\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            zIndex: 9999,\r\n            color: \"transparent\",\r\n          }}\r\n          onClick={() => setIsOpen(!isOpen)}\r\n        >\r\n          Test\r\n        </div>\r\n      )}\r\n      <animated.div style={animation} className=\"navigation_mobile_menu\">\r\n        <div className=\"nav_top\">\r\n          <HashLink className=\"nav_item\" to=\"/#section_newcity\" smooth>\r\n            <img src={DestinationIcon} alt=\"nav_icon\" className=\"nav_icon\" />\r\n            Destination\r\n          </HashLink>\r\n          <HashLink className=\"nav_item\" to=\"/#aux_services\" smooth>\r\n            <img src={ServicesIcon} alt=\"nav_icon\" className=\"nav_icon\" />\r\n            Services\r\n          </HashLink>\r\n\r\n          <HashLink className=\"nav_item\" to=\"/pricing\">\r\n            <img src={PricingIcon} alt=\"nav_icon\" className=\"nav_icon\" />\r\n            Pricing\r\n          </HashLink>\r\n          <a href=\"http://skillscanner.globuzzer.com/\" className=\"nav_item\">\r\n            <img src={CareerIcon} alt=\"nav_icon\" className=\"nav_icon\" />\r\n            Career\r\n          </a>\r\n        </div>\r\n        <div className=\"nav_bottom\">\r\n          <Link\r\n            to=\"/travel-blog\"\r\n            className=\"nav_mobile_own\"\r\n          >\r\n            Create your travel blog\r\n          </Link>\r\n          <div className=\"nav_bottom_container\">\r\n            <a\r\n              type=\"button\"\r\n              href=\"https://globuzzer.mn.co/sign_in\"\r\n              className=\"nav_mob_link\"\r\n            >\r\n              Login\r\n            </a>\r\n            <button type=\"button\" className=\"nav_mob_link\" id=\"mob_sign\">\r\n              <Link to=\"/signup\" className=\"nav_mob_link\">\r\n                Sign up\r\n              </Link>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </animated.div>\r\n    </div>\r\n  );\r\n  const NavMobile = () => (\r\n    <section className=\"section_navigation\">\r\n      <Link to=\"/\">\r\n        <img src={GLOBUZZER} alt=\"logo\" />\r\n      </Link>\r\n      <FiMenu\r\n        className=\"mobile_hamburger_menu\"\r\n        onClick={() => setIsOpen(!isOpen)}\r\n      />\r\n      <NavMobileMenu />\r\n    </section>\r\n  );\r\n\r\n  return <>\r\n    {width > 1100 ? <Nav /> : <NavMobile />}\r\n  </>;\r\n};\r\n",["702","703"],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\AdminTopic\\Accomodation.js",["704","705"],"import React, { createContext, useContext, useEffect, useState } from \"react\";\r\nimport SideNav from \"../SideNav/SideNav\";\r\nimport styles from './admin area/AdminTopic.module.css';\r\nimport { IoMdArrowDropright } from \"react-icons/io\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport TopNav from \"../TopNav/TopNav\";\r\nimport { EditContext, TopicPathContext } from \"../../../contexts/editContext\";\r\nimport MainAccomodation from \"./MainAccomodation\";\r\nimport { firestore } from \"../../../utils/firebase.utils\";\r\nimport { readData } from \"../../../utils/actions.firebase\";\r\n\r\nconst Accomodation = ({ props }) => {\r\n  const { admin, live } = props.pathName;\r\n\r\n  const { city, cityId, topic } = useParams();\r\n  const { editMode, handleEditMode, setEditMode } = useContext(EditContext)\r\n\r\n  const [currentCity, setFetchedCurrentCity] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const getCurrentCity = async () => {\r\n      const doc = await firestore.collection(admin).doc(cityId).get();\r\n      if (!doc.exists) {\r\n        setLoading(true);\r\n      } else {\r\n        setFetchedCurrentCity(doc.data());\r\n        setLoading(false);\r\n      }\r\n    };\r\n    getCurrentCity();\r\n  }, [loading]);\r\n\r\n  const releaseNewInfo = async () => {\r\n    const check = await readData(live, cityId);\r\n    check\r\n      ?\r\n      await firestore.collection(live).doc(check).update(currentCity)\r\n      :\r\n      await firestore.collection(live).add({ ...currentCity, id: cityId });\r\n\r\n    alert('your changes are now live')\r\n  }\r\n\r\n  return (\r\n    <TopicPathContext.Provider value={props.pathName}>\r\n      <div className={styles.wrapper}>\r\n        <TopNav />\r\n        <div>\r\n          <div className={styles.navLink}>\r\n            <Link\r\n              to=\"/dashboard\"\r\n              className={styles.dashboardLink}\r\n            >\r\n              Dashboard\r\n            </Link>\r\n            <IoMdArrowDropright color=\"#F26678\" size=\"25px\" />\r\n            <Link\r\n              to=\"/topic\"\r\n              className={styles.dashboardLink}\r\n            >\r\n              Topic Page\r\n            </Link>\r\n            <IoMdArrowDropright color=\"#F26678\" size=\"25px\" />\r\n            <Link\r\n              to={`/topic/${topic}`}\r\n              className={styles.dashboardLink}\r\n            >\r\n              {topic.charAt(0).toUpperCase() + topic.slice(1)}\r\n            </Link>\r\n            <IoMdArrowDropright color=\"#F26678\" size=\"25px\" />\r\n            <Link\r\n              to={`/topic/${topic}/${city}/${cityId}`}\r\n              className={styles.landingLink}\r\n            >\r\n              {city}\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        <div className={styles.container}>\r\n          <section className={styles.sidenav}>\r\n            <SideNav iconTopic='true' />\r\n          </section>\r\n          <section className={styles.main}>\r\n            {!editMode ?\r\n              (<button className={styles.editBtn} onClick={handleEditMode}>Edit it</button>) :\r\n              (<div>\r\n                <button className={styles.svrBtn} onClick={() => setEditMode(false)}>Save it</button>\r\n                <button className={styles.svrBtn} onClick={() => setEditMode(false)}>View it</button>\r\n                <button className={styles.svrBtn} onClick={releaseNewInfo}>Release it</button>\r\n              </div>\r\n              )\r\n            }\r\n\r\n            <MainAccomodation />\r\n          </section>\r\n        </div>\r\n      </div>\r\n    </TopicPathContext.Provider>\r\n  )\r\n}\r\n\r\nexport default Accomodation\r\n","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\AdminTopic\\MainAccomodation.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\BannerForm\\BannerTopicForm.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\components\\UploadImage\\UploadImageTopic.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Topic\\Menu\\Menu.js",[],["706","707"],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Topic\\Service\\TopicServiceCardForm.js",["708"],"import React, { useEffect, useState } from 'react'\r\nimport styles from './FeatureCardForm.module.css'\r\n\r\nconst TopicServiceCardForm = ({\r\n  setShow, currentFeatureCard, onFileChange, updateFeatureCard, title, uploadLabel, textLabel, uploadDescription, deleteTopicCard, show, setLoading\r\n}) => {\r\n\r\n  const [data, setData] = useState(currentFeatureCard);\r\n\r\n  useEffect(() => {\r\n    setData(currentFeatureCard)\r\n  }, [])\r\n\r\n  const inputHandler = e => {\r\n    const { name, value } = e.target;\r\n    setData({ ...data, [name]: value })\r\n  }\r\n\r\n  const submitFeatureCard = e => {\r\n    console.log('submit card 2');\r\n    setShow(false)\r\n    e.preventDefault();\r\n    updateFeatureCard(data)\r\n  }\r\n\r\n  console.log('show', show)\r\n\r\n  return (\r\n    <div className={styles.feature_card}>\r\n      <div className={styles.feature_card_container}>\r\n        <h4>{title}</h4>\r\n        <div className={styles.icon_text}>\r\n          <label>{uploadLabel}</label>\r\n          <span> {uploadDescription}</span>\r\n        </div>\r\n        <div className={styles.form_wrapper}>\r\n          <div className={styles.upload_btn_wrapper}>\r\n            <input\r\n              type=\"file\"\r\n              name=\"image\"\r\n              onChange={onFileChange}\r\n            />\r\n            <button className={styles.btn}>Upload image</button>\r\n          </div>\r\n          <div>\r\n            <p>{textLabel}</p>\r\n            <input\r\n              type=\"text\"\r\n              name=\"title\"\r\n              className={styles.title_input}\r\n              value={data.title}\r\n              onChange={inputHandler}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <p>Link</p>\r\n            <input\r\n              type=\"text\"\r\n              name=\"link\"\r\n              className={styles.title_input}\r\n              value={data.link}\r\n              onChange={inputHandler}\r\n            />\r\n          </div>\r\n\r\n          <div className={styles.editBox}>\r\n            <p>Content</p>\r\n            <textarea\r\n              style={{width: '100%'}}\r\n              rows='4'\r\n              name='content'\r\n              value={data.content}\r\n              onChange={inputHandler}\r\n            />\r\n          </div>\r\n\r\n          {\r\n            (title === 'Topics' && data) &&\r\n            <>\r\n              <div>\r\n                <p>Description</p>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"description\"\r\n                  className={styles.title_input}\r\n                  value={data.description}\r\n                  onChange={inputHandler}\r\n                />\r\n              </div>\r\n\r\n              <div className={styles.editBox}>\r\n                <button onClick={() => console.log('go to that page to edit it later')}>Edit this page</button>\r\n                <button\r\n                  onClick={() => deleteTopicCard(data.id)}\r\n                >\r\n                  Delete it\r\n                </button>\r\n              </div>\r\n            </>}\r\n\r\n        </div>\r\n      </div>\r\n      <div className={styles.btn_container}>\r\n        <span>\r\n          <button\r\n            className={styles.btn_apply}\r\n            onClick={submitFeatureCard}\r\n          >\r\n            Apply\r\n          </button>\r\n        </span>\r\n        <div className={styles.vertical} />\r\n        <span>\r\n          <button\r\n            className={styles.btn_cancel}\r\n            onClick={() => {\r\n              setShow(false)\r\n            }\r\n            }\r\n          >\r\n            Cancel\r\n          </button>\r\n        </span>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default TopicServiceCardForm\r\n","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Topic\\Main\\Body.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Topic\\Main\\Article\\Article.js",["709"],"import React, { useContext, useEffect, useState } from 'react'\r\nimport videos from \"./video_articles.module.css\";\r\nimport { BsSearch } from \"react-icons/bs\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { AiOutlineCloseCircle } from \"react-icons/ai\";\r\nimport { SiSkillshare } from \"react-icons/si\";\r\nimport {\r\n  IoIosArrowForward,\r\n  IoIosArrowDown,\r\n  IoIosArrowUp,\r\n} from \"react-icons/io\";\r\nimport { TiArrowSortedDown } from \"react-icons/ti\";\r\nimport ArticleCard from './ArticleCard';\r\nimport { app, firestore } from '../../../../utils/firebase.utils';\r\nimport playButton from '../../../../assets/Topic/Menu/playButton.png';\r\nimport Youtube from 'react-youtube';\r\nimport Slider from 'react-slick';\r\nimport { EditContext, TopicPathContext } from '../../../../contexts/editContext';\r\nimport VideoArticleServiceCard from '../../Service/VideoArticleServiceCard';\r\nimport { sizeTransform } from '../../../../utils/sizeTransform';\r\nimport { useParams } from 'react-router-dom';\r\nimport NewServiceCardForm from '../../Service/NewServiceCardForm';\r\nimport { sliceData } from '../../../../utils/sliceData';\r\n\r\nconst Article = () => {\r\n  const { cityId } = useParams();\r\n  const topicName = useContext(TopicPathContext);\r\n\r\n  //for edit stuff\r\n  const { editStyle, editMode } = useContext(EditContext);\r\n  const [showServiceForm, setShowServiceForm] = useState(false);\r\n  const [currentServiceCard, setCurrentServiceCard] = useState([]);\r\n  const [fileUrl, setFileUrl] = useState('');\r\n  const [userImgUrl, setUserImgUrl] = useState('');\r\n  const [subImg, setSubImg] = useState('');\r\n\r\n  //normal states\r\n  const [title, setTitle] = useState('videos');\r\n  const [input, setInput] = useState('')\r\n  const [data, setData] = useState([]);\r\n\r\n  const [videoData, setVideoData] = useState([]);\r\n  const [articleData, setArticleData] = useState([]);\r\n\r\n  //All videos state\r\n  const [vid, setVid] = useState([]);\r\n  const [video, setVideo] = useState({\r\n    playVideo: false,\r\n    videoId: \"\",\r\n\r\n  });\r\n  const [videoSize, SetVideoSize] = useState(8);\r\n  const [firstVideos, setFirstVideos] = useState([]);\r\n  const [secondVideos, setSecondVideos] = useState([]);\r\n\r\n  //All article states\r\n  const [article, setArticle] = useState([]);\r\n  const [articleVideo, setArticleVideo] = useState({\r\n    playVideo: false,\r\n    videoId: \"\",\r\n  });\r\n  const [articleSize, SetArticleSize] = useState(8);\r\n  const [firstArticles, setFirstArticles] = useState([]);\r\n  const [secondArticles, setSecondArticles] = useState([]);\r\n\r\n  //for checking row size when slicing\r\n  const [rowSize, setRowSize] = useState(null);\r\n\r\n  //slider state\r\n  const [slideShow, setSlideShow] = useState([]);\r\n  const [showNewServiceForm, setShowNewServiceForm] = useState(false);\r\n\r\n  //for youtube\r\n  const opts = {\r\n    height: \"390\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      // https://developers.google.com/youtube/player_parameters\r\n      autoplay: 1,\r\n    },\r\n  };\r\n\r\n  //for the right slider article\r\n  const settings = {\r\n    dots: true,\r\n    dotsClass: \"slider-dots\",\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    autoplay: true,\r\n    autoplaySpeed: 3000,\r\n    arrows: false,\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData()\r\n  }, [showServiceForm, showNewServiceForm])\r\n\r\n  useEffect(() => {\r\n    const width = window.innerWidth;\r\n    window.addEventListener(\"resize\", handleSize);\r\n\r\n    if (width <= 768) {\r\n      SetVideoSize(4);\r\n      SetArticleSize(4);\r\n    }\r\n\r\n    //setting rowSize on load\r\n    if (width <= 500) setRowSize(1);\r\n    if (width >= 517 && width < 774) setRowSize(2);\r\n    if (width >= 774 && width < 900) setRowSize(3);\r\n    if (width >= 900 && width < 1014) setRowSize(2);\r\n    if (width >= 1014 && width < 1344) setRowSize(3);\r\n    if (width >= 1344) setRowSize(4);\r\n  }, [cityId]);\r\n\r\n  const getData = async () => {\r\n    const doc = await firestore.collection(topicName.admin).doc(cityId).get();\r\n\r\n    if (!doc.exists) {\r\n      console.log('no');\r\n    } else {\r\n      setData(doc.data().videoData)\r\n      setVideoData(doc.data().videoData)\r\n      setArticleData(doc.data().articleData)\r\n      setSlideShow(doc.data().news)\r\n    }\r\n  }\r\n\r\n  const handleSize = () => {\r\n    //setting rowSize while resized\r\n    const width = window.innerWidth;\r\n    if (width <= 500) setRowSize(1);\r\n    if (width >= 517 && width < 774) setRowSize(2);\r\n    if (width >= 774 && width < 900) setRowSize(3);\r\n    if (width >= 900 && width < 1014) setRowSize(2);\r\n    if (width >= 1014 && width < 1344) setRowSize(3);\r\n    if (width >= 1344) setRowSize(4);\r\n\r\n    if (window.innerWidth <= 768) {\r\n      SetVideoSize(4);\r\n      SetArticleSize(4);\r\n      return;\r\n    }\r\n\r\n    SetVideoSize(8);\r\n    SetArticleSize(8);\r\n  };\r\n\r\n  const slicedData = sliceData(\r\n    data,\r\n    0,\r\n    title === \"videos\" ? videoSize : articleSize\r\n  );\r\n\r\n  const render =\r\n    input.length > 2\r\n      ? data.filter(\r\n        (article) =>\r\n          article.title.toLocaleLowerCase().startsWith(input) ||\r\n          article.title.toLocaleLowerCase().endsWith(input) ||\r\n          article.title.toLocaleLowerCase().includes(input)\r\n      )\r\n      : slicedData;\r\n\r\n\r\n  const articleLikes = ({ likes }) => {\r\n    if (likes < 1) return \"\";\r\n    if (likes > 999) {\r\n      const render = likes % 1000;\r\n      if (render > 99) return `${(likes / 1000).toFixed(1)}k`;\r\n      return `${(likes / 1000).toFixed(0)}k`;\r\n    }\r\n    return likes;\r\n  };\r\n\r\n  const moreArticle = () => {\r\n    if (title === \"videos\") {\r\n      let size = videoSize + 4;\r\n      if (videoSize >= data.length) {\r\n        if (window.innerWidth <= 900) size = 4;\r\n        else size = 8;\r\n      }\r\n      return SetVideoSize(size);\r\n    }\r\n\r\n    let size = articleSize + 4;\r\n\r\n    if (articleSize >= data.length) {\r\n      if (window.innerWidth <= 900) size = 4;\r\n      else size = 8;\r\n    }\r\n    SetArticleSize(size);\r\n  };\r\n\r\n  const moreOrLess = () => {\r\n    let render = \"more\";\r\n\r\n    if (title === \"videos\" && videoSize >= data.length) render = \"less\";\r\n\r\n    if (title === \"articles\" && articleSize >= data.length) render = \"less\";\r\n\r\n    return `${render} ${title}`;\r\n  };\r\n\r\n\r\n  const heart = article => {\r\n    const allData = [...data];\r\n\r\n    const newArticle = allData.find(d => d.id === article.id);\r\n\r\n    if (newArticle.liked) newArticle.likes -= 1;\r\n    else newArticle.likes += 1;\r\n\r\n    newArticle.liked = !newArticle.liked;\r\n    setData(allData)\r\n\r\n    // firestore.collection(topicName.admin).doc('cityId').update({})\r\n  }\r\n\r\n  const showArticle = (art, index) => {\r\n\r\n    const arts = [...render];\r\n    let newArts, secondArts;\r\n\r\n    let newIndex = index + 1;\r\n    let k = rowSize;\r\n    if (newIndex > rowSize) {\r\n      if (newIndex % rowSize === 0) {\r\n        k = newIndex;\r\n      } else {\r\n        k = Math.floor(newIndex / rowSize) * rowSize + rowSize;\r\n      }\r\n    }\r\n    newArts = arts.slice(0, k);\r\n    secondArts = arts.slice(k);\r\n\r\n    if (title === \"videos\") {\r\n      if (firstVideos.length > 0) {\r\n        const i = arts.indexOf(art);\r\n        if (i > rowSize) {\r\n          if (i % rowSize === 0) {\r\n            k = i;\r\n          } else {\r\n            k = Math.floor(i / rowSize) * rowSize + rowSize;\r\n          }\r\n        }\r\n        newArts = arts.slice(0, k);\r\n        secondArts = arts.slice(k);\r\n      }\r\n      setFirstVideos(newArts);\r\n      setSecondVideos(secondArts);\r\n      setVid([art]);\r\n      setVideo({ playVideo: false, videoId: \"\" });\r\n      return;\r\n    }\r\n\r\n    if (firstArticles.length > 0) {\r\n      const i = arts.indexOf(art);\r\n      if (i > rowSize) {\r\n        if (i % rowSize === 0) {\r\n          k = i;\r\n        } else {\r\n          k = Math.floor(i / rowSize) * rowSize + rowSize;\r\n        }\r\n      }\r\n      newArts = arts.slice(0, k);\r\n      secondArts = arts.slice(k);\r\n    }\r\n    setFirstArticles(newArts);\r\n    setSecondArticles(secondArts);\r\n    setArticle([art]);\r\n    setArticleVideo({ playVideo: false, videoId: \"\" });\r\n  }\r\n\r\n  const articleHover = art => {\r\n    if (title === 'videos' && vid.length > 0) {\r\n      setVid([art]);\r\n      setVideo({ playVideo: false, videoId: '' });\r\n    }\r\n\r\n    if (title === \"articles\" && article.length > 0) {\r\n      setArticle([art]);\r\n      setArticleVideo({ playVideo: false, videoId: \"\" });\r\n    }\r\n  }\r\n\r\n  const originalData = () => {\r\n    const renderData = (\r\n      <ArticleCard\r\n        render={render}\r\n        title={title}\r\n        playButton={playButton}\r\n        articleLikes={articleLikes}\r\n        heart={heart}\r\n        articleHover={articleHover}\r\n        showArticle={showArticle}\r\n        // artRef={artRef}\r\n        setArticle={setArticle}\r\n\r\n        editMode={editMode}\r\n        openServiceEditForm={openServiceEditForm}\r\n        onSelectedService={onSelectedService}\r\n        currentServiceCard={currentServiceCard}\r\n      />\r\n    )\r\n\r\n    if (title === \"videos\") {\r\n      if (firstVideos.length < 1) return renderData;\r\n    } else {\r\n      if (firstArticles.length < 1) return renderData;\r\n    }\r\n  }\r\n\r\n  const btnStyle = item => {\r\n    if (item === \"video\") {\r\n      return {\r\n        background: title === \"videos\" && \"#f24b6a\",\r\n        color: title === \"videos\" && \"#fff\",\r\n      };\r\n    } else {\r\n      return {\r\n        background: title === \"articles\" && \"#f24b6a\",\r\n        color: title === \"articles\" && \"#fff\",\r\n      };\r\n    }\r\n  }\r\n\r\n  const handleClick = ({ target: btn }) => {\r\n    if (btn.innerText.toLocaleLowerCase() === \"video\") {\r\n      setData(videoData)\r\n      setTitle(\"videos\");\r\n    } else {\r\n      setData(articleData)\r\n      setTitle(\"articles\");\r\n    }\r\n  };\r\n\r\n  const closeVid = () => {\r\n    window.innerWidth <= 768 ? SetVideoSize(4) : SetVideoSize(8);\r\n    if (window.innerWidth <= 515) SetVideoSize(4);\r\n    setVid([]);\r\n    setFirstVideos([]);\r\n    setSecondVideos([]);\r\n  };\r\n\r\n  const closeVideo = () => {\r\n    if (title === \"videos\") {\r\n      const newVideo = { ...video };\r\n      newVideo.playVideo = false;\r\n      newVideo.videoId = \"\";\r\n\r\n      return setVideo(newVideo);\r\n    }\r\n\r\n    const newVideo = { ...articleVideo };\r\n    newVideo.playVideo = false;\r\n    newVideo.videoId = \"\";\r\n\r\n    setArticleVideo(newVideo);\r\n  };\r\n\r\n  const closeArticle = () => {\r\n    window.innerWidth <= 768 ? SetArticleSize(4) : SetArticleSize(8);\r\n    setArticle([]);\r\n    setFirstArticles([]);\r\n    setSecondArticles([]);\r\n  }\r\n\r\n  const onReady = (e) => {\r\n    e.target.playVideo();\r\n  };\r\n\r\n  const playVideo = ({ videoId }) => {\r\n    console.log(title)\r\n    if (title === \"videos\") {\r\n      console.log('video')\r\n      console.log(title)\r\n      const newVideo = { ...video };\r\n      newVideo.playVideo = true;\r\n      newVideo.videoId = videoId;\r\n\r\n      return setVideo(newVideo);\r\n    }\r\n\r\n    const newVideo = { ...articleVideo };\r\n    newVideo.playVideo = true;\r\n    newVideo.videoId = videoId;\r\n\r\n    setArticleVideo(newVideo);\r\n  };\r\n\r\n\r\n  //for edit functions\r\n  const openServiceEditForm = item => {\r\n    setShowServiceForm(true);\r\n\r\n    if (item.article) {\r\n      setCurrentServiceCard({\r\n        id: item.id,\r\n        title: item.title,\r\n        imgPath: item.imgPath,\r\n        name: item.name,\r\n        likes: item.likes,\r\n        userImg: item.userImg,\r\n        link: item.link,\r\n        article: item.article,\r\n      })\r\n    } else {\r\n      setCurrentServiceCard({\r\n        id: item.id,\r\n        title: item.title,\r\n        imgPath: item.imgPath,\r\n        name: item.name,\r\n        likes: item.likes,\r\n        userImg: item.userImg,\r\n        link: item.link,\r\n      })\r\n    }\r\n  }\r\n\r\n  const openNewServiceForm = item => {\r\n    setShowNewServiceForm(true);\r\n\r\n    setCurrentServiceCard({\r\n      id: item.id,\r\n      image: item.image,\r\n      link: item.link,\r\n      text: item.text\r\n    })\r\n  }\r\n\r\n  const onSelectedNewService = () => {\r\n    return (\r\n      (showNewServiceForm && editMode) ?\r\n        <div>\r\n          <NewServiceCardForm\r\n            title='News'\r\n            uploadLabel='Image'\r\n            uploadDescription=' (Image has to be below 200 KB and PNG/JPG format) '\r\n            setShow={setShowNewServiceForm}\r\n            currentFeatureCard={currentServiceCard}\r\n            updateFeatureCard={updateNewCard}\r\n            onFileChange={onFileChange}\r\n          />\r\n        </div>\r\n        : undefined\r\n    )\r\n  }\r\n\r\n  const onSelectedService = (item) => {\r\n    return (\r\n      (showServiceForm && editMode) ?\r\n        <div>\r\n          <VideoArticleServiceCard\r\n            title={title}\r\n            uploadLabel='Cover Image'\r\n            textLabel='Title'\r\n            uploadDescription=' (The image has to be below 200 KB and PNG/JPG format) '\r\n            setShow={setShowServiceForm}\r\n            currentFeatureCard={currentServiceCard}\r\n            updateFeatureCard={updateServiceCard}\r\n            onFileChange={onFileChange}\r\n          />\r\n        </div>\r\n        : undefined\r\n    )\r\n  }\r\n\r\n  const updateNewCard = updatedCard => {\r\n    const updatedNews = slideShow.map(slide => slide.id === updatedCard.id ? { ...updatedCard, image: fileUrl || updatedCard.image } : slide)\r\n\r\n    return firestore.collection(topicName.admin).doc(cityId).update({\r\n      news: updatedNews\r\n    })\r\n  }\r\n\r\n\r\n  const updateServiceCard = updatedCard => {\r\n\r\n    const newVideoId = updatedCard.link.split('=')[1].split('&')[0];\r\n\r\n    if (!updatedCard.article) {\r\n      const updatedVideos = videoData.map(video => {\r\n        return video.id === updatedCard.id ? { ...updatedCard, imgPath: fileUrl || updatedCard.imgPath, userImg: userImgUrl || updatedCard.userImg, videoId: newVideoId } : video;\r\n      })\r\n\r\n      return firestore.collection(topicName.admin).doc(cityId).update({\r\n        videoData: updatedVideos\r\n      })\r\n    }\r\n\r\n    else {\r\n      const updatedArticles = articleData.map(article => {\r\n\r\n        return article.id === updatedCard.id ? { ...updatedCard, imgPath: fileUrl || updatedCard.imgPath, userImg: userImgUrl || updatedCard.userImg, videoId: newVideoId, [article.article.img.path]: subImg } : article;\r\n      })\r\n\r\n      return firestore.collection(topicName.admin).doc(cityId).update({\r\n        articleData: updatedArticles\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  //image handling stuff\r\n  const typeValidation = [\"image/png\", \"image/jpeg\", \"image/jpg\", \"image/svg+xml\"];\r\n  const sizeValidation = 200000;\r\n  const message = (file) => {\r\n    return `The size of the image should be maximum ${sizeTransform(sizeValidation)}, and the format need to be PNG, JPG. You tried to upload a file format: ${file.type}, size: ${sizeTransform(file.size)}`;\r\n  }\r\n\r\n  const onFileChange = async (e) => {\r\n\r\n    const imgName = e.target.name;\r\n\r\n    const file = e.target.files[0];\r\n    const storageRef = app.storage().ref();\r\n    if (file && typeValidation.includes(file.type) && file.size <= sizeValidation) {\r\n      const fileRef = storageRef.child(`topic/accomodation/${file.name}`);\r\n      await fileRef.put(file);\r\n      if (title === 'videos') {\r\n        console.log('from videos')\r\n        imgName === 'imgPath' ?\r\n          setFileUrl(await fileRef.getDownloadURL()) :\r\n          setUserImgUrl(await fileRef.getDownloadURL())\r\n      } else {\r\n        console.log('from article', imgName)\r\n        imgName === 'imgPath' && setFileUrl(await fileRef.getDownloadURL());\r\n        imgName === 'userImg' && setUserImgUrl(await fileRef.getDownloadURL());\r\n        imgName === 'subImg' && setSubImg(await fileRef.getDownloadURL());\r\n      }\r\n    } else {\r\n      alert(message(file))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section className={videos.article}>\r\n      <div className={videos.articleLeft}>\r\n        <div className={videos.btnGroup}>\r\n          <button\r\n            className={`${videos.btn} ${videos.btnVid}`}\r\n            onMouseOver={handleClick}\r\n            style={btnStyle(\"video\")}\r\n          >\r\n            Video\r\n          </button>\r\n\r\n          <button\r\n            className={`${videos.btn} ${videos.btnArt}`}\r\n            onMouseOver={handleClick}\r\n            style={btnStyle(\"article\")}\r\n          >\r\n            Article\r\n          </button>\r\n        </div>\r\n\r\n        <div className={videos.search}>\r\n          <input\r\n            type=\"text\"\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            placeholder={`Search ${title} here...`}\r\n            id=\"search_input\"\r\n          />\r\n\r\n          <IconContext.Provider value={{ className: \"a-search\" }}>\r\n            <BsSearch className={videos.searchIcon} />\r\n          </IconContext.Provider>\r\n        </div>\r\n\r\n        {/* original data */}\r\n        <div className={videos.articleCardContainer}>\r\n          {originalData()}\r\n\r\n        </div>\r\n\r\n        {/*Fist Articles after click */}\r\n        <div className={videos.articleCardContainer}>\r\n          <ArticleCard\r\n            render={title === \"videos\" ? firstVideos : firstArticles}\r\n            // artRef={artRef}\r\n            articleHover={articleHover}\r\n            showArticle={showArticle}\r\n            playButton={playButton}\r\n            title={title}\r\n            heart={heart}\r\n            articleLikes={articleLikes}\r\n          />\r\n        </div>\r\n\r\n        {!video.playVideo && title === 'videos' && vid.map(v =>\r\n          <div className={videos.vid} key={v.id}>\r\n            <img src={v.imgPath} alt='img' id={videos['vidImg']} />\r\n            <div className={videos.playVid} onClick={() => playVideo(v)}>\r\n              <img src={playButton} alt='playButton' id={videos['playVid']} />\r\n            </div>\r\n\r\n            <div onClick={closeVid}>\r\n              <IconContext.Provider value={{ className: \" vidClose\" }}>\r\n                <AiOutlineCloseCircle className={videos.vidClose} />\r\n              </IconContext.Provider>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {title === \"videos\" && video.playVideo && (\r\n          <div className={videos.video}>\r\n            <span\r\n              onClick={closeVideo}\r\n            >\r\n              <IconContext.Provider value={{ className: \"icon\" }}>\r\n                <AiOutlineCloseCircle className={videos.icon} />\r\n              </IconContext.Provider>\r\n            </span>\r\n            <Youtube videoId={video.videoId} opts={opts} onReady={onReady} />\r\n          </div>\r\n        )}\r\n\r\n\r\n        {/* article */}\r\n        {title === \"articles\" && articleVideo.playVideo && (\r\n          <div className={videos.video}>\r\n            <span onClick={closeVideo}>\r\n              <IconContext.Provider value={{ className: \"icon\" }}>\r\n                <AiOutlineCloseCircle className={videos.icon} />\r\n              </IconContext.Provider>\r\n            </span>\r\n            <Youtube\r\n              videoId={articleVideo.videoId}\r\n              opts={opts}\r\n              onReady={onReady}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {!articleVideo.playVideo &&\r\n          title === \"articles\" &&\r\n          article.map((a) => (\r\n            <div className={videos.helsinki} key={a.id}>\r\n              <div className={videos.helsinkileft}>\r\n                <img src={a.article.img.path} alt=\"helsinki\" id={videos['helsinki']} />\r\n\r\n                <div className={videos.helsinkidesc}>\r\n                  <span onClick={() => playVideo(a)}>\r\n                    <img src={playButton} alt=\"playButton\" id={videos['play']} />\r\n                  </span>\r\n\r\n                  <p>{a.article.img.title}</p>\r\n\r\n                </div>\r\n              </div>\r\n\r\n              <div className={videos.helsinkiright}>\r\n                <header>\r\n                  <p>{a.title}</p>\r\n                  <p onClick={closeArticle}>\r\n                    <IconContext.Provider\r\n                      value={{ className: \"icon helsinki-close\" }}\r\n                    >\r\n                      <AiOutlineCloseCircle />\r\n                    </IconContext.Provider>\r\n                  </p>\r\n                </header>\r\n\r\n                <div className={videos.para}>\r\n                  <p>{a.article.content}</p>\r\n                </div>\r\n\r\n                <div className={`${videos.listmore} ${videos.listMoreArticle}`}>\r\n                  <a href={a.article.articleLink}>\r\n                    View more details{\" \"}\r\n                    <IconContext.Provider\r\n                      value={{ className: \"icon arrow-right\" }}\r\n                    >\r\n                      <IoIosArrowForward />\r\n                    </IconContext.Provider>\r\n                  </a>\r\n\r\n                  <p>\r\n                    share this video\r\n                    <IconContext.Provider\r\n                      value={{ className: \"icon share article-share\" }}\r\n                    >\r\n                      <SiSkillshare className={videos.share} />\r\n                    </IconContext.Provider>\r\n                  </p>\r\n                </div>\r\n\r\n                {/*Second Articles after click*/}\r\n                <div className={videos.articleCardContainer}>\r\n                  <ArticleCard\r\n                    render={title === \"videos\" ? secondVideos : secondArticles}\r\n                    // artRef={artRef}\r\n                    articleHover={articleHover}\r\n                    showArticle={showArticle}\r\n                    setArticle={setArticle}\r\n                    playButton={playButton}\r\n                    title={title}\r\n                    heart={heart}\r\n                    articleLikes={articleLikes}\r\n                  />\r\n                </div>\r\n\r\n                <div className={videos.moreArticles} onClick={moreArticle}>\r\n                  <p>\r\n                    <IconContext.Provider value={{ className: \"arrow-down\" }}>\r\n                      {moreOrLess().includes(\"less\") ? (\r\n                        <IoIosArrowUp className={videos.arrowDown} />\r\n                      ) : (\r\n                        <IoIosArrowDown className={videos.arrowDown} />\r\n                      )}\r\n                    </IconContext.Provider>\r\n                    {moreOrLess()}\r\n                  </p>\r\n\r\n                  <p>\r\n                    see more{\" \"}\r\n                    <IconContext.Provider value={{ className: \"arrow-down\" }}>\r\n                      <IoIosArrowDown />\r\n                    </IconContext.Provider>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n      </div>\r\n\r\n\r\n      {/* article right  */}\r\n      <div\r\n        className={videos.articleRight}\r\n      >\r\n        <div\r\n          className={videos.articleRightTop}\r\n          style={{ ...editStyle }}\r\n        >\r\n          <Slider {...settings}>\r\n            {slideShow.map((s) => (\r\n              <div\r\n                className={videos.slide} key={s.id}\r\n                onClick={editMode ? () => openNewServiceForm(s) : () => window.open(s.link, '_blank')}\r\n              >\r\n                <img src={s.image} alt=\"mask\" />\r\n                <div className={videos.slideItems}>\r\n                  <p>{s.text}</p>\r\n                  {window.innerWidth <= 900 && <p>{s.text}</p>}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </Slider>\r\n\r\n          <div>\r\n            {onSelectedNewService()}\r\n          </div>\r\n        </div>\r\n\r\n        <div className={videos.articleRightBottom}>\r\n          <header>What are you looking for ?</header>\r\n\r\n          <div className={videos.articleRightForm}>\r\n            <select>\r\n              <option>Discover Helsinki</option>\r\n            </select>\r\n\r\n            <p className={videos.formselect}>\r\n              <IconContext.Provider value={{ className: \"dropIcon\" }}>\r\n                <TiArrowSortedDown />\r\n              </IconContext.Provider>\r\n            </p>\r\n          </div>\r\n\r\n          <div className={videos.articleRightForm}>\r\n            <select>\r\n              <option>Topic: Accomodation</option>\r\n            </select>\r\n\r\n            <p className={videos.formselect}>\r\n              <IconContext.Provider value={{ className: \"dropIcon\" }}>\r\n                <TiArrowSortedDown />\r\n              </IconContext.Provider>\r\n            </p>\r\n          </div>\r\n\r\n          <div className={videos.articleRightForm}>\r\n            <input type=\"text\" placeholder=\"Search anything you want\" />\r\n            <p className={videos.formsearch}>\r\n              <IconContext.Provider value={{ className: \"search-icon\" }}>\r\n                <BsSearch />\r\n              </IconContext.Provider>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Article\r\n","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Topic\\Main\\Article\\ArticleCard.js",["710"],"import React, { useContext } from \"react\";\r\nimport videos from \"./video_articles.module.css\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { RiShareForwardBoxFill } from \"react-icons/ri\";\r\nimport { BsHeart, BsHeartFill } from \"react-icons/bs\";\r\nimport { EditContext } from \"../../../../contexts/editContext\";\r\nimport { Fragment } from \"react\";\r\n\r\nconst ArticleCard = ({\r\n  render,\r\n  artRef,\r\n  articleHover,\r\n  showArticle,\r\n  playButton,\r\n  title,\r\n  heart,\r\n  articleLikes,\r\n  openServiceEditForm,\r\n  onSelectedService,\r\n  currentServiceCard\r\n}) => {\r\n\r\n  const { editMode, editStyle } = useContext(EditContext);\r\n\r\n  return render.map((article, index) => (\r\n    <Fragment key={index}>\r\n      <div\r\n        className={!editMode ? videos.articleCard : videos.articleCardEdit}\r\n        key={article.id}\r\n        onMouseOver={() => articleHover(article)}\r\n        style={{ ...editStyle }}\r\n      // ref={artRef}\r\n      >\r\n        <span\r\n          onClick={() => {\r\n            !editMode ?\r\n              showArticle(article, index)\r\n              : openServiceEditForm(article)\r\n          }}\r\n        >\r\n          <img src={article.imgPath} alt={article.title} id=\"article-card-img\" />\r\n        </span>\r\n        <IconContext.Provider value={{ className: \"forward\" }}>\r\n          <RiShareForwardBoxFill className={videos.forward} />\r\n        </IconContext.Provider>\r\n\r\n        <div\r\n          className={videos.play}\r\n          style={{ display: title === \"videos\" && \"block\" }}\r\n          onClick={() => showArticle(article, index)}\r\n        >\r\n          <img src={playButton} alt=\"playButton\" className={videos.playImg} />\r\n        </div>\r\n\r\n        <div className={videos.desc}>\r\n          <header>{article.title}</header>\r\n\r\n          <div className={videos.descItems}>\r\n            <div className={videos.descLeft}>\r\n              <img src={article.userImg} alt={article.title} id=\"article-card-img\" style={{ width: 40 }} />\r\n              <p>{article.name}</p>\r\n            </div>\r\n\r\n            <div className={videos.descRight}>\r\n              <span\r\n                onClick={() => heart(article)}\r\n              >\r\n                {article.liked ? (\r\n                  <IconContext.Provider value={{ className: \"heart\" }}>\r\n                    <BsHeartFill className={videos.heart} />\r\n                  </IconContext.Provider>\r\n                ) : (\r\n                  <IconContext.Provider value={{ className: \"heart\" }}>\r\n                    <BsHeart className={videos.heart} />\r\n                  </IconContext.Provider>\r\n                )}\r\n              </span>\r\n              {articleLikes(article)}\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {currentServiceCard && (article.id == currentServiceCard.id) ?\r\n          <div>\r\n            {onSelectedService(article)}\r\n          </div>\r\n          : undefined\r\n        }\r\n      </div>\r\n\r\n    </Fragment>\r\n  ));\r\n}\r\n\r\nexport default ArticleCard\r\n","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Topic\\Service\\VideoArticleServiceCard.js",["711","712","713","714"],"import React, { useEffect, useState } from 'react'\r\nimport styles from './FeatureCardForm.module.css'\r\n\r\nconst VideoArticleServiceCard = ({\r\n  setShow, currentFeatureCard, onFileChange, updateFeatureCard, uploadLabel, textLabel, uploadDescription, title\r\n}) => {\r\n\r\n  const [data, setData] = useState(currentFeatureCard);\r\n\r\n  const [articleLink, setArticleLink] = useState('');\r\n  const [content, setContent] = useState('');\r\n  const [subtitle, setSubtitle] = useState('');\r\n\r\n\r\n  useEffect(() => {\r\n    setData(currentFeatureCard)\r\n    if (currentFeatureCard.article) {\r\n      setArticleLink(currentFeatureCard.article.articleLink)\r\n      setContent(currentFeatureCard.article.content)\r\n      setSubtitle(currentFeatureCard.article.img.title)\r\n    }\r\n  }, [])\r\n\r\n  const inputHandler = e => {\r\n    const { name, value } = e.target;\r\n    setData({ ...data, [name]: value })\r\n  }\r\n\r\n  const inputHandler2 = e => {\r\n\r\n    const { name, value } = e.target;\r\n\r\n    name === 'content' && setContent(value);\r\n    name === 'subtitle' && setSubtitle(value);\r\n    name === 'articleLink' && setArticleLink(value);\r\n\r\n    const newImg = { ...data.article.img, ['title']: subtitle }\r\n    const newArticle = { ...data.article, [name]: value, ['img']: newImg }\r\n\r\n    setData({ ...data, ['article']: newArticle })\r\n  }\r\n\r\n  const submitFeatureCard = e => {\r\n    console.log('submit card 2')\r\n    setShow(false)\r\n    e.preventDefault();\r\n    updateFeatureCard(data)\r\n  }\r\n\r\n  return (\r\n    <div className={styles.feature_card}>\r\n      <div className={styles.feature_card_container}>\r\n        <h4>{title.toUpperCase()}</h4>\r\n        <div className={styles.icon_text}>\r\n          <label>{uploadLabel}</label>\r\n          <span> {uploadDescription}</span>\r\n        </div>\r\n        <div className={styles.form_wrapper}>\r\n          <div className={styles.upload_btn_wrapper}>\r\n            <input\r\n              type=\"file\"\r\n              name=\"imgPath\"\r\n              onChange={onFileChange}\r\n            />\r\n            <button className={styles.btn} style={{ marginRight: 150 }}>Upload image</button>\r\n          </div>\r\n          <div>\r\n            <p>{textLabel}</p>\r\n            <input\r\n              type=\"text\"\r\n              name=\"title\"\r\n              className={styles.heading_input}\r\n              value={data.title}\r\n              onChange={inputHandler}\r\n            />\r\n          </div>\r\n          <div>\r\n            <p>Youtube link</p>\r\n            <input\r\n              type=\"text\"\r\n              name=\"link\"\r\n              className={styles.heading_input}\r\n              value={data.link}\r\n              onChange={inputHandler}\r\n            />\r\n          </div>\r\n\r\n          <div className={styles.editBox}>\r\n            <p style={{ width: '40%' }}>Author image</p>\r\n            <div className={styles.upload_btn_wrapper}>\r\n              <input\r\n                type=\"file\"\r\n                name=\"userImg\"\r\n                onChange={onFileChange}\r\n              />\r\n              <button className={styles.btn}>Upload image</button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className={styles.editBox}>\r\n            <p style={{ width: '50%' }}>Author name</p>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              className={styles.heading_input}\r\n              value={data.name}\r\n              onChange={inputHandler}\r\n            />\r\n          </div>\r\n\r\n          <div className={styles.editBox}>\r\n            <p style={{ width: '50%' }}>Liked number</p>\r\n            <input\r\n              type=\"text\"\r\n              name=\"likes\"\r\n              className={styles.heading_input}\r\n              value={data.likes}\r\n              onChange={inputHandler}\r\n            />\r\n          </div>\r\n\r\n          {title === 'articles' &&\r\n            <>\r\n              <p style={{ margin: 20 }}>Article</p>\r\n\r\n              <div className={styles.editBox}>\r\n                <p style={{ width: '50%' }}>Article link</p>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"articleLink\"\r\n                  className={styles.heading_input}\r\n                  value={articleLink}\r\n                  onChange={inputHandler2}\r\n                />\r\n              </div>\r\n\r\n              <div className={styles.editBox}>\r\n                <p style={{ width: '50%' }}>Content</p>\r\n                <textarea\r\n                  name=\"content\"\r\n                  className={styles.textarea_input}\r\n                  value={content}\r\n                  onChange={inputHandler2}\r\n                  rows='5'\r\n                />\r\n              </div>\r\n\r\n\r\n              <div className={styles.editBox}>\r\n                <p style={{width: '40%'}}>Sub image</p>\r\n                <div className={styles.upload_btn_wrapper}>\r\n                  <input\r\n                    type=\"file\"\r\n                    name=\"subImg\"\r\n                    onChange={onFileChange}\r\n                  />\r\n                  <button className={styles.btn}>Upload image</button>\r\n                </div>\r\n              </div>\r\n\r\n              <div className={styles.editBox}>\r\n                <p style={{ width: '50%' }}>Subtitle</p>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"subtitle\"\r\n                  className={styles.heading_input}\r\n                  value={subtitle}\r\n                  onChange={inputHandler2}\r\n                />\r\n              </div>\r\n            </>\r\n          }\r\n\r\n        </div>\r\n      </div>\r\n      <div className={styles.btn_container}>\r\n        <span>\r\n          <button\r\n            className={styles.btn_apply}\r\n            onClick={submitFeatureCard}\r\n          >\r\n            Apply\r\n          </button>\r\n        </span>\r\n        <div className={styles.vertical} />\r\n        <span>\r\n          <button\r\n            className={styles.btn_cancel}\r\n            onClick={() => setShow(false)}\r\n          >\r\n            Cancel\r\n          </button>\r\n        </span>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default VideoArticleServiceCard\r\n","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Topic\\Main\\Hotel\\Hotels.js",["715","716"],"import React, { useContext, useEffect, useState, Fragment } from 'react';\r\nimport hotel from \"./hotels.module.css\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { TiArrowSortedDown } from \"react-icons/ti\";\r\nimport { app, firestore } from '../../../../utils/firebase.utils';\r\nimport _ from \"lodash\";\r\nimport like from '../../../../assets/Topic/like.png'\r\nimport { EditContext, TopicPathContext } from '../../../../contexts/editContext';\r\nimport HotelServiceCard from '../../Service/HotelServiceCard';\r\nimport { sizeTransform } from '../../../../utils/sizeTransform';\r\nimport { useParams } from 'react-router-dom';\r\nimport HotelServiceCard2 from '../../Service/HotelServiceCard2';\r\nimport BlogHeader from '../../../../components/TravelBlog/sectionHeader/SectionHeader';\r\n\r\nconst Hotels = () => {\r\n  const { cityId } = useParams();\r\n  const topicName = useContext(TopicPathContext);\r\n  //edit stuff\r\n  const { editStyle, editMode } = useContext(EditContext);\r\n  const [showAdsServiceForm, setShowAdsServiceForm] = useState(false);\r\n  const [showHotelServiceForm, setShowHotelServiceForm] = useState(false);\r\n\r\n  const [currentServiceCard, setCurrentServiceCard] = useState([]);\r\n  const [fileUrl, setFileUrl] = useState('');\r\n\r\n  const [select, setSelect] = useState('');\r\n  const [showList, setShowList] = useState(false);\r\n\r\n  const [data, setData] = useState([]);\r\n  const [ads, setAds] = useState({});\r\n\r\n  useEffect(() => {\r\n    getData()\r\n  }, [showAdsServiceForm, showHotelServiceForm])\r\n\r\n  const getData = async () => {\r\n    const doc = await firestore.collection(topicName.admin).doc(cityId).get();\r\n\r\n    if (!doc.exists) {\r\n      console.log('no exist');\r\n    } else {\r\n      setData(doc.data().hotel)\r\n      setAds(doc.data().advertise)\r\n    }\r\n  }\r\n\r\n  const handleSelect = () => {\r\n    setShowList(!showList);\r\n  }\r\n\r\n  const handleList = e => {\r\n    setSelect(e.target.innerText);\r\n    setShowList(false)\r\n  }\r\n\r\n  const hotelPrice = price => {\r\n    let string = '€';\r\n\r\n    if (price < 50) string = string.repeat(2);\r\n    if (price >= 50 && price < 80) string = string.repeat(3);\r\n    if (price >= 80) string = string.repeat(4);\r\n\r\n    return string;\r\n  }\r\n\r\n  const openServiceEditForm = () => {\r\n    setShowAdsServiceForm(true);\r\n\r\n    setCurrentServiceCard({\r\n      link: ads.link,\r\n      logo: ads.logo,\r\n      text1: ads.text1,\r\n      text2: ads.text2,\r\n      style: ads.style\r\n    })\r\n  }\r\n\r\n  const onSelectedService = () => {\r\n    return (\r\n      (showAdsServiceForm && editMode) ?\r\n        <div>\r\n          <HotelServiceCard\r\n            title='Advertisement'\r\n            uploadLabel='Logo'\r\n            uploadDescription=' (The image has to be below 200 KB and PNG/JPG format) '\r\n            setShow={setShowAdsServiceForm}\r\n            currentFeatureCard={currentServiceCard}\r\n            updateFeatureCard={updateServiceCard}\r\n            onFileChange={onFileChange}\r\n          />\r\n        </div>\r\n        : <div></div>\r\n    )\r\n  }\r\n\r\n  const updateServiceCard = updatedCard => {\r\n    setShowAdsServiceForm(false);\r\n\r\n    const updatedAds = { ...updatedCard, logo: fileUrl || updatedCard.logo };\r\n\r\n    return firestore.collection(topicName.admin).doc(cityId).update({\r\n      advertise: updatedAds\r\n    })\r\n\r\n\r\n  }\r\n\r\n  //image handling stuff\r\n  const typeValidation = [\"image/png\", \"image/jpeg\", \"image/jpg\", \"image/svg+xml\"];\r\n  const sizeValidation = 200000;\r\n  const message = (file) => {\r\n    return `The size of the image should be maximum ${sizeTransform(sizeValidation)}, and the format need to be PNG, JPG. You tried to upload a file format: ${file.type}, size: ${sizeTransform(file.size)}`;\r\n  }\r\n\r\n  const onFileChange = async (e) => {\r\n    const file = e.target.files[0];\r\n    const storageRef = app.storage().ref();\r\n\r\n    if (file && typeValidation.includes(file.type) && file.size <= sizeValidation) {\r\n      const fileRef = storageRef.child(`topic/accomodation/${file.name}`);\r\n      await fileRef.put(file);\r\n      setFileUrl(await fileRef.getDownloadURL());\r\n    } else {\r\n      alert(message(file))\r\n    }\r\n  }\r\n\r\n  //for hotel handling\r\n  const openHotelEditForm = item => {\r\n    setShowHotelServiceForm(true);\r\n\r\n    setCurrentServiceCard({\r\n      id: item.id,\r\n      distance: item.distance,\r\n      img: item.img,\r\n      link: item.link,\r\n      price: item.price,\r\n      rating: item.rating,\r\n      recommended: item.recommended,\r\n      title: item.title\r\n    })\r\n  }\r\n\r\n  const onHotelService = () => {\r\n    return (\r\n      (showHotelServiceForm && editMode) ?\r\n        <div>\r\n          <HotelServiceCard2\r\n            title='Hotel'\r\n            uploadLabel='Image'\r\n            uploadDescription=' (The image has to be below 200 KB and PNG/JPG format) '\r\n            setShow={setShowHotelServiceForm}\r\n            currentFeatureCard={currentServiceCard}\r\n            updateFeatureCard={updateHotelCard}\r\n            onFileChange={onFileChange}\r\n          />\r\n        </div>\r\n        : <div></div>\r\n    )\r\n  }\r\n\r\n  const updateHotelCard = updatedCard => {\r\n    setShowHotelServiceForm(false);\r\n\r\n    const updatedHotels = data.map(hotel => {\r\n      return hotel.id === updatedCard.id ? { ...updatedCard, img: fileUrl || updatedCard.img } : hotel;\r\n    })\r\n\r\n    return firestore.collection(topicName.admin).doc(cityId).update({\r\n      hotel: updatedHotels\r\n    })\r\n  }\r\n\r\n  return (\r\n    <section className={hotel.hotel}>\r\n      <BlogHeader label='Find suitable hotels' />\r\n\r\n      <div className={hotel.check}>\r\n        <div>\r\n          <input type='date' placeholder='check-in' />\r\n        </div>\r\n\r\n        <div>\r\n          <input type=\"date\" placeholder=\"Check-out\" />\r\n        </div>\r\n\r\n        <div>\r\n          <span>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Number of guests\"\r\n              readOnly={true}\r\n              value={select}\r\n              onClick={handleSelect}\r\n            />\r\n\r\n            <nav style={{ height: showList && \"89px\" }}>\r\n              <ul>\r\n                <li onClick={handleList}>1</li>\r\n                <li onClick={handleList}>2</li>\r\n                <li onClick={handleList}>3+</li>\r\n              </ul>\r\n            </nav>\r\n          </span>\r\n\r\n          <p className={hotel.formselect}>\r\n            <IconContext.Provider\r\n              value={{\r\n                className: \"dropIcon\",\r\n                style: { transform: showList && \"rotate(180deg)\" },\r\n              }}\r\n            >\r\n              <TiArrowSortedDown />\r\n            </IconContext.Provider>\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={hotel.hotelflex}>\r\n        <div\r\n          className={hotel.hotelist}\r\n          style={{ ...editStyle }}\r\n        >\r\n          {data.map(d => (\r\n            <Fragment key={d.id}>\r\n              <div\r\n                className={!editMode ? hotel.hotelitems : hotel.hotelitemsEdit}\r\n                key={d.id}\r\n                onClick={editMode ? () => openHotelEditForm(d) : undefined}\r\n              >\r\n                <div className={hotel.hoteleft}>\r\n                  <img src={d.img} alt={d.title} />\r\n                  {d.recommended && <p>{d.recommended}</p>}\r\n                </div>\r\n\r\n                <div className={hotel.hotelright}>\r\n                  <header>{d.title}</header>\r\n\r\n                  <div className={hotel.rightp}>\r\n                    <p>{d.distance} km from city center</p>\r\n                    <p>Price: {hotelPrice(d.price)}</p>\r\n                    <p>\r\n                      {\" \"}\r\n                      {_.range(d.rating).map(r => (\r\n                        <img src={like} alt='like' key={r} />\r\n                      ))}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {d.id === currentServiceCard.id &&\r\n                <div>\r\n                  {onHotelService()}\r\n                </div>\r\n              }\r\n            </Fragment>\r\n          ))}\r\n        </div>\r\n\r\n        {ads && (\r\n          <div\r\n            className={hotel.vimeo}\r\n            style={{ ...editStyle }}\r\n          >\r\n            <div\r\n              className={hotel.content}\r\n              style={ads.style ? { backgroundColor: ads.style.backgroundColor } : undefined}\r\n              onClick={editMode ? openServiceEditForm : undefined}\r\n            >\r\n              <header className={hotel.vimeohead}>\r\n                <img src={ads.logo} alt='logo' style={{ width: 100 }} />\r\n              </header>\r\n\r\n              <div className={hotel.vimeop}>\r\n                <p>{ads.text1}</p>\r\n\r\n                <p>{ads.text2}</p>\r\n              </div>\r\n\r\n              <div className={hotel.vimeobtn}>\r\n                <a href={ads.link} target='_blank'>\r\n                  <button\r\n                    style={ads.style ? { backgroundColor: ads.style.buttonColor } : undefined}\r\n                  >\r\n                    Learn more\r\n                  </button>\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div>\r\n          {onSelectedService()}\r\n        </div>\r\n\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Hotels\r\n","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Topic\\Service\\HotelServiceCard.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Topic\\Main\\Other\\OtherTopics.js",["717","718","719"],"import React, { useContext, useState, useEffect, Fragment } from 'react'\r\nimport { EditContext, TopicPathContext } from '../../../../contexts/editContext';\r\nimport { app, firestore } from '../../../../utils/firebase.utils';\r\nimport others from \"./otherTopics.module.css\";\r\nimport TopicServiceCardForm from '../../Service/TopicServiceCardForm';\r\nimport { sizeTransform } from '../../../../utils/sizeTransform';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport AddTopicCardForm from '../../Service/AddTopicCardForm';\r\nimport { useParams } from 'react-router-dom';\r\nimport BlogHeader from '../../../../components/TravelBlog/sectionHeader/SectionHeader';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst OtherTopics = () => {\r\n  const { cityId } = useParams();\r\n  const topicName = useContext(TopicPathContext);\r\n\r\n  const [topics, setTopics] = useState([]);\r\n  const [currentTopic, setCurrentTopic] = useState({});\r\n\r\n  //edit stuff\r\n  const { editMode, editStyle } = useContext(EditContext);\r\n  const [showEditForm, setShowEditForm] = useState(false);\r\n  const [fileUrl, setFileUrl] = useState('');\r\n  const [newImgUrl, setNewImgUrl] = useState('');\r\n\r\n  //add topic\r\n  const [showAddTopicForm, setShowAddTopicForm] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [showEditForm, showAddTopicForm])\r\n\r\n  const getData = async () => {\r\n    const doc = await firestore.collection(topicName.admin).doc(cityId).get();\r\n\r\n    if (!doc.exists) {\r\n      console.log('no exist');\r\n    } else {\r\n      setTopics(doc.data().otherTopic)\r\n    }\r\n  }\r\n\r\n  const openEditForm = item => {\r\n    setShowEditForm(true);\r\n\r\n    setCurrentTopic({\r\n      id: item.id,\r\n      title: item.title,\r\n      description: item.description,\r\n      img: item.img,\r\n      link: item.link\r\n    })\r\n  }\r\n\r\n  const onSelectedService = () => {\r\n    return (\r\n      (showEditForm && editMode) ?\r\n        <div>\r\n          <TopicServiceCardForm\r\n            title='Topics'\r\n            currentFeatureCard={currentTopic}\r\n            uploadLabel='Cover image'\r\n            uploadDescription=' (Image has to be below 200 KB and PNG/JPG format)'\r\n            textLabel='Topic'\r\n            onFileChange={onFileChange}\r\n            updateFeatureCard={updateTopicCard}\r\n            deleteTopicCard={deleteTopic}\r\n            setShow={setShowEditForm}\r\n          />\r\n        </div>\r\n        : <div></div>\r\n    )\r\n  }\r\n\r\n  const deleteTopic = (id) => {\r\n    setShowEditForm(false);\r\n\r\n    const updatedTopics = topics.filter(topic => topic.id !== id)\r\n\r\n    return firestore.collection(topicName.admin).doc(cityId).update({\r\n      otherTopic: updatedTopics\r\n    })\r\n\r\n  }\r\n\r\n  //image handling stuff\r\n  const typeValidation = [\"image/png\", \"image/jpeg\", \"image/jpg\", \"image/svg+xml\"];\r\n  const sizeValidation = 200000;\r\n  const message = (file) => {\r\n    return `The size of the image should be maximum ${sizeTransform(sizeValidation)}, and the format need to be PNG, JPG. You tried to upload a file format: ${file.type}, size: ${sizeTransform(file.size)}`;\r\n  }\r\n  const onFileChange = async (e) => {\r\n    const file = e.target.files[0];\r\n    const storageRef = app.storage().ref();\r\n\r\n    if (file && typeValidation.includes(file.type) && file.size <= sizeValidation) {\r\n      const fileRef = storageRef.child(`topic/accomodation/${file.name}`);\r\n      await fileRef.put(file);\r\n\r\n      showEditForm\r\n        ? setFileUrl(await fileRef.getDownloadURL())\r\n        : setNewImgUrl(await fileRef.getDownloadURL());\r\n    } else {\r\n      alert(message(file))\r\n    }\r\n  }\r\n\r\n  const updateTopicCard = updatedCard => {\r\n    const updatedTopics = topics.map(topic => {\r\n      return topic.id === updatedCard.id ? { ...updatedCard, img: fileUrl || updatedCard.img } : topic;\r\n    })\r\n\r\n    return firestore.collection(topicName.admin).doc(cityId).update({\r\n      otherTopic: updatedTopics\r\n    })\r\n  }\r\n\r\n\r\n  //add topic\r\n  const onAddService = () => {\r\n    return (\r\n      (showAddTopicForm && editMode) ?\r\n        <div>\r\n          <AddTopicCardForm\r\n            title='Topics'\r\n            uploadLabel='Cover image'\r\n            uploadDescription=' (Image has to be below 200 KB and PNG/JPG format)'\r\n            textLabel='Topic'\r\n            onFileChange={onFileChange}\r\n            addFeatureCard={addTopicCard}\r\n            setShow={setShowAddTopicForm}\r\n          />\r\n        </div>\r\n        : <div></div>\r\n    )\r\n  }\r\n\r\n  const addTopicCard = newCard => {\r\n    setShowAddTopicForm(false);\r\n\r\n    return firestore.collection(topicName.admin).doc(cityId).update({\r\n      otherTopic: [...topics, { ...newCard, img: newImgUrl, id: uuidv4() }]\r\n    })\r\n  }\r\n\r\n  return (\r\n    <section className={others.othertopics}>\r\n      <header\r\n        className={others.topicsheader}\r\n        style={editMode ? { display: 'flex', justifyContent: 'flex-end' } : {}}\r\n      >\r\n        <div style={editMode ? { marginRight: 500 } : {}}>\r\n          <BlogHeader label={window.innerWidth <= 500 ? \"Related topics\" : \"Other topics\"} />\r\n        </div>\r\n\r\n        {editMode &&\r\n          <div\r\n            onClick={() => setShowAddTopicForm(true)}\r\n          >\r\n            <AddCircleIcon\r\n              fontSize='large'\r\n              className={others.addCirle}\r\n              style={{ color: !showAddTopicForm ? '#C4C4C4' : '#F24B6A' }}\r\n            />\r\n            {showAddTopicForm && \r\n              <div>\r\n                {onAddService()}\r\n              </div>\r\n            }\r\n          </div>\r\n        }\r\n      </header>\r\n\r\n      <div className={others.cardcontainer}>\r\n        {topics.map((topic) => (\r\n          <Fragment key={topic.id}>\r\n            <a href={!editMode ? topic.link : undefined} target='_blank'>\r\n              <div\r\n                className={others.card}\r\n                onClick={editMode ? () => openEditForm(topic) : undefined}\r\n                style={{ ...editStyle }}\r\n              >\r\n\r\n                <img src={topic.img} alt={topic.description} />\r\n                <div className={others.carditems}>\r\n                  <p className={others.cardItemsTop}>{topic.title}</p>\r\n                  <p className={others.cardItemsBottom}>{topic.description}</p>\r\n                </div>\r\n              </div>\r\n            </a>\r\n\r\n\r\n            <div className={others.editBox}>\r\n              {onSelectedService()}\r\n            </div>\r\n\r\n\r\n          </Fragment>\r\n        ))}\r\n\r\n\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default OtherTopics\r\n","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Topic\\Footer\\Footer.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Topic\\Service\\AddTopicCardForm.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Topic\\Main\\Member\\Member.js",["720"],"import React, { useContext, useEffect, useState, Fragment } from \"react\";\r\nimport { FiPlus } from \"react-icons/fi\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { EditContext, TopicPathContext } from \"../../../../contexts/editContext\";\r\nimport { app, firestore } from \"../../../../utils/firebase.utils\";\r\nimport { sizeTransform } from \"../../../../utils/sizeTransform\";\r\nimport { MemberCard } from \"../../../Section/Members/MemberCard\";\r\nimport styles from \"./members.module.css\";\r\n\r\nimport CommunityMembersForm from '../../../Admin/JoinCommunityForm/SectionMembersForm';\r\nimport BlogHeader from \"../../../../components/TravelBlog/sectionHeader/SectionHeader\";\r\n\r\nfunction Members() {\r\n  const { cityId } = useParams();\r\n  const topicName = useContext(TopicPathContext);\r\n\r\n  const { editStyle, editMode } = useContext(EditContext);\r\n  const [fileUrl, setFileUrl] = useState(null);\r\n\r\n  const [members, setMembers] = useState([]);\r\n  const [showMembersForm, setShowMembersForm] = useState(false);\r\n  const [currentMember, setCurrentMember] = useState({ id: \"\", name: '', flags: '', image: '' });\r\n\r\n  useEffect(() => {\r\n    getData()\r\n  }, [cityId, showMembersForm]);\r\n\r\n  const getData = async () => {\r\n    const doc = await firestore.collection(topicName.admin).doc(cityId).get();\r\n\r\n    if (!doc.exists) {\r\n      console.log('no data')\r\n    } else {\r\n      setMembers(doc.data().topMembers)\r\n    }\r\n  }\r\n\r\n  const getCurrentMember = (ref) => {\r\n    const member = members.filter((m) => {\r\n      return m.id === ref.current.id;\r\n    });\r\n    setCurrentMember(member[0]);\r\n    setShowMembersForm(true);\r\n  };\r\n\r\n  // validations for uploaded images\r\n  const typeValidation = [\"image/png\", \"image/jpeg\", \"image/jpg\"];\r\n  const sizeValidation = 200000;\r\n  const message = (file) => {\r\n    return `The size of the image should be maximum ${sizeTransform(sizeValidation)}, and the format need to be PNG, JPG. You tried to upload a file format: ${file.type}, size: ${sizeTransform(file.size)}`;\r\n  }\r\n  // manage the upload member picture form + type and size validation\r\n  const onFileChange = async (e) => {\r\n    const file = e.target.files[0];\r\n    const storageRef = app.storage().ref();\r\n\r\n    if (file && typeValidation.includes(file.type) && file.size <= sizeValidation) {\r\n      const fileRef = storageRef.child(`topic/accomodation/${file.name}`);\r\n      await fileRef.put(file);\r\n      setFileUrl(await fileRef.getDownloadURL());\r\n    } else {\r\n      alert(message(file))\r\n    }\r\n  }\r\n\r\n  const updateMemberData = (({ currentMember }, updatedMember) => {\r\n    setShowMembersForm(false);\r\n    const updatedMembers = members.map((s) => s.id === updatedMember.id ? { ...updatedMember, image: fileUrl || updatedMember.image } : s)\r\n    setShowMembersForm(false);\r\n    firestore.collection(topicName.admin).doc(cityId).update({\r\n      topMembers: updatedMembers\r\n    });\r\n\r\n  });\r\n\r\n  return (\r\n    <section className={styles.wrapper}>\r\n      <BlogHeader label='Top members to meet' />\r\n\r\n      <div className={styles.grid} style={editStyle}>\r\n        <div className={styles.empty}>\r\n          {members.slice(0, 2).map(member =>\r\n            <MemberCard\r\n              key={member.id}\r\n              memberData={member}\r\n              getCurrentMember={getCurrentMember}\r\n            />\r\n          )}\r\n\r\n          <div className={styles.flipcard}>\r\n            <div className={styles.flipcardInner}>\r\n              <div className={styles.flipcardFront}>\r\n                <FiPlus className={styles.joinIcon} />\r\n              </div>\r\n              <button type=\"button\" className={styles.flipcardBack}>\r\n                <Link to=\"/signup\" className={styles.joinAnchor}>\r\n                  Join us\r\n                </Link>\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          {members.slice(2, 5).map((memberData) => (\r\n            <MemberCard\r\n              key={memberData.id}\r\n              memberData={memberData}\r\n              getCurrentMember={getCurrentMember} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {editMode &&\r\n        <Fragment>\r\n          {showMembersForm &&\r\n            <CommunityMembersForm\r\n              currentMember={currentMember}\r\n              setShowMembersForm={setShowMembersForm}\r\n              updateMemberData={updateMemberData}\r\n              // onFileSubmit={onFileSubmit}\r\n              onFileChange={onFileChange}\r\n            />\r\n          }\r\n        </Fragment>\r\n      }\r\n\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Members;\r\n","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Topic\\Header\\Header.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Topic\\Header\\MainImg\\HeaderContent.js",["721","722","723","724","725","726"],"import React, { Fragment, useContext, useEffect, useState } from 'react'\r\nimport { firestore } from '../../../../utils/firebase.utils';\r\nimport '../../../../css/Home.css'\r\nimport { IconContext } from \"react-icons\";\r\nimport TextEdit from '../../../../components/TextEdit/TextEdit';\r\nimport { EditContext, TopicPathContext } from '../../../../contexts/editContext';\r\nimport { useParams } from 'react-router-dom';\r\nimport { IoIosArrowDown } from 'react-icons/io';\r\nimport styles from './headerContent.module.css';\r\n\r\nconst HeaderContent = ({ contentEditable }) => {\r\n  const { editStyle, editMode } = useContext(EditContext);\r\n\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [showTextForm, setShowTextForm] = useState(false)\r\n  //for the title and subtitle\r\n  const [fetchedTexts, setFetchedTexts] = useState([]);\r\n  //for the select list\r\n  const [select, setSelect] = useState('');\r\n  const [showList, setShowList] = useState(false);\r\n  const [height, setHeight] = useState(\"125px\");\r\n\r\n  const { cityId } = useParams();\r\n  const topicName = useContext(TopicPathContext);\r\n\r\n  const rawText = {\r\n    content: '',\r\n    style: {\r\n      color: '',\r\n      fontSize: '',\r\n      fontWeight: '',\r\n      textAlign: ''\r\n    }\r\n  };\r\n\r\n  const [currentText, setCurrentText] = useState(rawText);\r\n\r\n  const formTextStyle = !showTextForm ? { display: 'none' } : {\r\n    position: 'relative',\r\n    left: '20%'\r\n  }\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [currentText])\r\n\r\n\r\n  const getData = async () => {\r\n    const doc = await firestore.collection(topicName.admin).doc(cityId).get();\r\n    if (!doc.exists) {\r\n      setLoading(true);\r\n    } else {\r\n      setData(doc.data());\r\n      setFetchedTexts([\r\n        { id: 'title', content: doc.data().title.content, style: doc.data().title.style },\r\n        { id: 'subtitle', content: doc.data().subtitle.content, style: doc.data().subtitle.style },\r\n      ])\r\n    }\r\n  }\r\n\r\n  const getCurrentText = e => {\r\n    const newText = fetchedTexts.filter(text => {\r\n      return text.id === e.target.id;\r\n    })\r\n\r\n    setCurrentText(newText[0])\r\n  }\r\n\r\n  const handleChangeText = e => {\r\n    setCurrentText({ ...currentText, content: e.target.innerText, id: e.target.id })\r\n  }\r\n\r\n  const onSelectedText = (text, currentText) => {\r\n    return (\r\n      editMode && showTextForm && text.id === currentText.id &&\r\n      <TextEdit\r\n        currentText={currentText}\r\n        formTextStyle={formTextStyle}\r\n        setShowForm={setShowTextForm}\r\n        save={handleSubmitText}\r\n      />\r\n    )\r\n  }\r\n\r\n  const handleSubmitText = async () => {\r\n    switch (currentText.id) {\r\n      case 'title':\r\n        await firestore.collection(topicName.admin).doc(cityId).update({ \"title.content\": currentText.content, \"title.style\": currentText.style });\r\n        break;\r\n      case 'subtitle':\r\n        await firestore.collection(topicName.admin).doc(cityId).update({ \"subtitle.content\": currentText.content, \"subtitle.style\": currentText.style });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    setShowTextForm(false)\r\n  }\r\n\r\n\r\n  //for the selected list\r\n  const handleSelect = () => {\r\n    setShowList(!showList);\r\n  };\r\n\r\n  const handleList = (e) => {\r\n    setSelect(e.target.innerText);\r\n    setShowList(false);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        className='section_header'\r\n        style={{ backgroundImage: `url(${data.mainImg || data.bannerImg})`, }}\r\n      >\r\n        {/* texts part */}\r\n        <div className='headers' style={{ textAlign: 'center' }}>\r\n\r\n          {fetchedTexts.map(text =>\r\n            <Fragment key={text.id}>\r\n              <div>{onSelectedText(text, currentText)}</div>\r\n              <p\r\n                id={text.id}\r\n                name={text.id}\r\n                contentEditable={contentEditable}\r\n                suppressContentEditableWarning='true'\r\n                style={{ ...editStyle, ...text.style }}\r\n                onFocus={getCurrentText}\r\n                onBlur={handleChangeText}\r\n                onClick={() => setShowTextForm(true)}\r\n                name='title'\r\n              >\r\n                {text.content}\r\n              </p>\r\n            </Fragment>\r\n          )}\r\n          <a className='link' href='#'>\r\n            <button className='linkBtn' style={{ backgroundColor: '#f24b6a', color: '#ecf0f1', borderRadius: 10, fontSize: 20, height: 60, width: 150, fontWeight: 700, border: '0px' }}>\r\n              Join us\r\n            </button>\r\n          </a>\r\n        </div>\r\n\r\n        {topicName.name == 'accomodation' &&\r\n          <div className={styles.selectperson}>\r\n            <span>I am a</span>\r\n            <span>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Person who will stay for a long term\"\r\n                value={select}\r\n                readOnly={true}\r\n                onClick={handleSelect}\r\n              />\r\n\r\n              <IconContext.Provider\r\n                value={{\r\n                  className: \"arrowDown\",\r\n                  style: { transform: showList && \"rotate(180deg)\" },\r\n                }}\r\n              >\r\n                <IoIosArrowDown className={styles.arrowDown} />\r\n              </IconContext.Provider>\r\n\r\n              <nav style={{ height: showList && height }}>\r\n                <ul>\r\n                  <li onClick={handleList}>\r\n                    Person who will stay for a long term\r\n                  </li>\r\n                  <li onClick={handleList}>\r\n                    Person who will stay for a short term\r\n                  </li>\r\n                  <li onClick={handleList}>\r\n                    Person who is a student\r\n                  </li>\r\n                </ul>\r\n              </nav>\r\n            </span>\r\n          </div>\r\n        }\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default HeaderContent\r\n","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Topic\\Header\\Banner\\Banner.js",["727","728","729"],"import React, { useContext, useEffect, useState } from 'react'\r\nimport playButton from '../../../../assets/Topic/Menu/playButton.png';\r\nimport banner from './banner.module.css';\r\nimport { IconContext } from 'react-icons/lib';\r\nimport { AiOutlineCloseCircle } from \"react-icons/ai\";\r\nimport {\r\n  IoIosArrowForward,\r\n} from \"react-icons/io\";\r\nimport YouTube from 'react-youtube';\r\nimport { app, firestore } from '../../../../utils/firebase.utils';\r\nimport { EditContext, TopicPathContext } from '../../../../contexts/editContext';\r\nimport { sizeTransform } from '../../../../utils/sizeTransform';\r\nimport TopicServiceCardForm from '../../Service/TopicServiceCardForm';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faChurch, faDollarSign, faFlag, faRecycle, faShoppingCart } from '@fortawesome/free-solid-svg-icons';\r\n\r\nlibrary.add(faShoppingCart, faRecycle, faChurch, faFlag, faDollarSign)\r\n\r\nconst Banner = () => {\r\n  const { cityId, city } = useParams();\r\n  const topicName = useContext(TopicPathContext);\r\n\r\n  const [current, setCurrent] = useState(topicName.firstBanner);\r\n  const [video, setVideo] = useState({\r\n    playVideo: false,\r\n    videoId: ''\r\n  })\r\n  const [data, setData] = useState([])\r\n  const [list, setList] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  //edit stuff\r\n  const { editStyle, editMode } = useContext(EditContext);\r\n  const [currentFeatureCard, setCurrentFeatureCard] = useState([]);\r\n  const [showEditForm, setShowEditForm] = useState(false);\r\n  const [showServiceForm, setShowServiceForm] = useState(false);\r\n  const [currentServiceCard, setCurrentServiceCard] = useState([])\r\n\r\n  //image\r\n  const [fileUrl, setFileUrl] = useState(null);\r\n  const [iconUrl, setIconUrl] = useState(null);\r\n\r\n  const opts = {\r\n    width: \"100%\",\r\n    height: \"380px\",\r\n    playerVars: {\r\n      autoplay: 1,\r\n    },\r\n  }\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [loading])\r\n\r\n  const getData = async () => {\r\n    const doc = await firestore.collection(topicName.admin).doc(cityId).get();\r\n\r\n    if (!doc.exists) {\r\n      setLoading(true);\r\n    } else {\r\n      const init = doc.data().banner.filter(b => b.id === 1)\r\n      setData(init)\r\n      setList(doc.data())\r\n    }\r\n  }\r\n\r\n  const changeList = currentList => {\r\n    const init = list.banner.filter(d => d.title.toLocaleLowerCase() === currentList)\r\n    setData(init)\r\n\r\n    setCurrent(currentList)\r\n    setVideo({ playVideo: false })\r\n  }\r\n\r\n  const listStyle = desc => {\r\n    if (desc.toLocaleLowerCase() === current) {\r\n      return {\r\n        background: '#FF889E',\r\n      }\r\n    }\r\n  }\r\n\r\n  const playVideo = ({ videoId }) => {\r\n    const newVideo = { ...video };\r\n    newVideo.playVideo = true;\r\n    newVideo.videoId = videoId;\r\n\r\n    setVideo(newVideo);\r\n  }\r\n\r\n  const onReady = e => {\r\n    e.target.playVideo();\r\n  }\r\n\r\n  const closeVideo = () => {\r\n    const newVideo = { ...video };\r\n    newVideo.playVideo = false;\r\n    newVideo.videoId = '';\r\n\r\n    setVideo(newVideo);\r\n  }\r\n\r\n  const closeList = () => {\r\n    setData([]);\r\n    setCurrent('');\r\n  }\r\n\r\n  const openVideosEditForm = item => {\r\n    setShowEditForm(true);\r\n    setCurrentFeatureCard({\r\n      id: item.id,\r\n      title: item.title,\r\n      link: item.link,\r\n      icon: item.icon,\r\n      videoId: item.videoId,\r\n      content: item.content,\r\n      img: item.img\r\n    })\r\n  }\r\n\r\n\r\n\r\n  const openServiceEditForm = item => {\r\n    setShowServiceForm(true);\r\n    setCurrentServiceCard({\r\n      id: item.id,\r\n      title: item.title,\r\n      link: item.link,\r\n      icon: item.icon,\r\n      videoId: item.videoId,\r\n      content: item.content,\r\n      img: item.img\r\n    })\r\n  }\r\n\r\n  const updateServiceCard = (updatedFeatureCard) => {\r\n    setLoading(!loading);\r\n    setShowServiceForm(false);\r\n    const updatedCard = list.banner.map(b => {\r\n      return b.id === updatedFeatureCard.id ? { ...updatedFeatureCard, img: fileUrl || updatedFeatureCard.img, icon: iconUrl || updatedFeatureCard.icon } : b;\r\n    })\r\n\r\n    return firestore.collection(topicName.admin).doc(cityId).update({\r\n      banner: updatedCard\r\n    })\r\n  }\r\n\r\n  const onFileChangeIcon = async (e) => {\r\n    const file = e.target.files[0];\r\n    const storageRef = app.storage().ref();\r\n    if (file && typeValidation.includes(file.type) && file.size <= sizeValidation) {\r\n      const fileRef = storageRef.child(`topic/accomodation/${file.name}`);\r\n      await fileRef.put(file);\r\n      setIconUrl(await fileRef.getDownloadURL());\r\n    } else {\r\n      alert(message(file))\r\n    }\r\n  }\r\n\r\n  //for the video cards\r\n  const onSelectedCard = (item, currentCard) => {\r\n    return (\r\n      (item.id === currentCard.id &&\r\n        showEditForm && editMode) ?\r\n        <div>\r\n          <TopicServiceCardForm\r\n            title='Videos'\r\n            uploadLabel='Cover image'\r\n            textLabel='Title'\r\n            uploadDescription='(The image has to be below 200 KB and PNG/JPG format)'\r\n            show={showEditForm}\r\n            setShow={setShowEditForm}\r\n            currentFeatureCard={currentFeatureCard}\r\n            updateFeatureCard={updateFeatureCard}\r\n            onFileChange={onFileChange}\r\n          />\r\n        </div>\r\n        : <div></div>\r\n    )\r\n  }\r\n\r\n  //for the service cards\r\n  const onSelectedService = (item, currentCard) => {\r\n    return (\r\n      (showServiceForm && editMode) ?\r\n        <div>\r\n          <TopicServiceCardForm\r\n            title='Service'\r\n            uploadLabel='Icon'\r\n            textLabel='Text'\r\n            uploadDescription='The size of the image should be maximum 500kb, and the format need to be PNG, JPG'\r\n            show={showServiceForm}\r\n            setShow={setShowServiceForm}\r\n            setLoading={setLoading}\r\n            currentFeatureCard={currentServiceCard}\r\n            updateFeatureCard={updateServiceCard}\r\n            onFileChange={onFileChangeIcon}\r\n          />\r\n        </div>\r\n        : <div></div>\r\n    )\r\n  }\r\n\r\n  //for the image handling\r\n  const typeValidation = [\"image/png\", \"image/jpeg\", \"image/jpg\", \"image/svg+xml\"];\r\n  const sizeValidation = 200000;\r\n  const message = (file) => {\r\n    return `The size of the image should be maximum ${sizeTransform(sizeValidation)}, and the format need to be PNG, JPG. You tried to upload a file format: ${file.type}, size: ${sizeTransform(file.size)}`;\r\n  }\r\n\r\n  //manage the update image file\r\n  const onFileChange = async (e) => {\r\n    const file = e.target.files[0];\r\n    const storageRef = app.storage().ref();\r\n    if (file && typeValidation.includes(file.type) && file.size <= sizeValidation) {\r\n      const fileRef = storageRef.child(`topic/accomodation/${file.name}`);\r\n      await fileRef.put(file);\r\n      setFileUrl(await fileRef.getDownloadURL());\r\n    } else {\r\n      alert(message(file))\r\n    }\r\n  }\r\n\r\n  //manage update\r\n  const updateFeatureCard = (updatedFeatureCard) => {\r\n    setLoading(!loading);\r\n    const updatedVideos = list.banner.map(b => {\r\n      const newVideoId = updatedFeatureCard.link.split('=')[1];\r\n\r\n      return b.id == updatedFeatureCard.id ? { ...updatedFeatureCard, img: fileUrl || updatedFeatureCard.img, videoId: newVideoId || '' } : b;\r\n    })\r\n\r\n    return firestore.collection(topicName.admin).doc(cityId).update({\r\n      banner: updatedVideos\r\n    })\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      <div className={banner.list}>\r\n        {list.banner && list.banner.map(item =>\r\n\r\n          <div\r\n            key={item.id}\r\n            onMouseOver={() => {\r\n              changeList(item.title.toLocaleLowerCase());\r\n\r\n            }}\r\n            onClick={editMode ? () => openServiceEditForm(item) : undefined}\r\n            className={banner.listflex}\r\n            style={{ ...editStyle, ...listStyle(item.title.toLocaleLowerCase()) }}\r\n          >\r\n            <span>\r\n              <img src={item.icon} alt={item.title} style={{ width: 50 }} />\r\n            </span>\r\n            {/* <FontAwesomeIcon icon={item.icon} size='2x' /> */}\r\n            <span>{item.title}</span>\r\n\r\n            {item.title.toLocaleLowerCase() == current ?\r\n              <div>\r\n                {onSelectedService(item, currentFeatureCard)}\r\n              </div>\r\n              : <></>\r\n            }\r\n          </div>\r\n\r\n        )}\r\n      </div>\r\n\r\n      {video.playVideo && (\r\n        <div className={`${banner.video} ${banner.bannervideo}`}>\r\n          <span onClick={closeVideo} className={banner.closeIcon}>\r\n            <IconContext.Provider value={{ className: \"icon\" }}>\r\n              <AiOutlineCloseCircle />\r\n            </IconContext.Provider>\r\n          </span>\r\n          <YouTube videoId={video.videoId} opts={opts} onReady={onReady} />\r\n        </div>\r\n      )}\r\n\r\n      {!video.playVideo && data &&\r\n        (data.map((d) => (\r\n          <div\r\n            className={banner.listitem} key={d.id}\r\n            onClick={editMode ? () => openVideosEditForm(d) : undefined}\r\n            style={{ ...editStyle }}\r\n          >\r\n            <div className={banner.listleft}>\r\n              <img style={{ width: '100%', height: '100%' }} src={d.img} alt={city} id=\"list\" />\r\n              <div className={banner.listdesc}>\r\n                <div className={banner.listVid} onClick={() => playVideo(d)}>\r\n                  <img src={playButton} alt=\"playButton\" id=\"listVid\" style={{ height: 53 }} />\r\n                </div>\r\n                <p>Accomodation in {city}</p>\r\n              </div>\r\n            </div>\r\n\r\n            <div className={banner.listright}>\r\n              <header>\r\n                <span>{d.title}</span>{\" \"}\r\n                <span onClick={closeList}>\r\n                  <IconContext.Provider value={{ className: \"icon\" }}>\r\n                    <AiOutlineCloseCircle />\r\n                  </IconContext.Provider>\r\n                </span>\r\n              </header>\r\n\r\n              <div className={banner.listpara}>\r\n                <p>{d.content}</p>\r\n              </div>\r\n\r\n              <div className={banner.listmore}>\r\n                <p>\r\n                  View more details{\" \"}\r\n                  <IconContext.Provider\r\n                    value={{ className: \"icon arrow-right\" }}\r\n                  >\r\n                    <IoIosArrowForward fontSize={25} />\r\n                  </IconContext.Provider>\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              {onSelectedCard(d, currentFeatureCard)}\r\n            </div>\r\n\r\n          </div>\r\n        ))\r\n        )}\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Banner\r\n","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\AdminTopic\\admin area\\AdminTopicListCountries.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\AdminTopic\\admin area\\AdminTopic.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\AdminTopic\\admin area\\TopicMain.js",["730"],"import React, { useEffect } from 'react'\r\nimport { BsSearch } from 'react-icons/bs';\r\nimport useFetch from '../../../../hooks/useFetch'\r\nimport styles from './AdminTopic.module.css';\r\nimport TopicItems from './TopicItems';\r\nimport { createNew } from '../../../../utils/actions.firebase';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst TopicMain = ({ setTopicSelected, path }) => {\r\n  \r\n  const { loading, items } = useFetch(path.admin);\r\n  const {topic} = useParams();\r\n\r\n  useEffect(() => setTopicSelected({isSelected: true, topicContent: topic}), [])\r\n\r\n  return (\r\n    <>\r\n      {loading ? 'Loading...' :\r\n        <div className={styles.mainContainer}>\r\n          <div className={styles.actions}>\r\n            <span className={styles.inputForm}>\r\n              <BsSearch />\r\n              <input type=\"text\"\r\n              // value={searchedCity}\r\n              // onChange={(e) => setSearchedCity(e.target.value)}\r\n              />\r\n            </span>\r\n            <button\r\n              onClick={() => createNew(path.admin, path.dataObj)}\r\n            >\r\n              Add\r\n            </button>\r\n          </div>\r\n          <TopicItems currentItems={items} path={path} />\r\n        </div>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TopicMain\r\n","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\AdminTopic\\admin area\\TopicItems.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Topic\\Service\\HotelServiceCard2.js",["731"],"import React, { useEffect, useState } from 'react'\r\nimport styles from './FeatureCardForm.module.css'\r\n\r\nconst HotelServiceCard2 = ({\r\n  setShow, currentFeatureCard, onFileChange, updateFeatureCard, uploadLabel, uploadDescription, title\r\n}) => {\r\n\r\n  const [data, setData] = useState(currentFeatureCard);\r\n  \r\n  const inputHandler = e => {\r\n    const { name, value } = e.target;\r\n    setData({ ...data, [name]: value });\r\n  }\r\n\r\n  const submitFeatureCard = e => {\r\n    console.log('submit card 2')\r\n    e.preventDefault();\r\n    updateFeatureCard(data)\r\n  }\r\n\r\n  return (\r\n    <div className={styles.feature_card}>\r\n      <div className={styles.feature_card_container}>\r\n        <h4>{title.toUpperCase()}</h4>\r\n        <div className={styles.icon_text}>\r\n          <label>{uploadLabel}</label>\r\n          <span> {uploadDescription}</span>\r\n        </div>\r\n        <div className={styles.form_wrapper}>\r\n          <div className={styles.upload_btn_wrapper}>\r\n            <input\r\n              type=\"file\"\r\n              name=\"imgPath\"\r\n              onChange={onFileChange}\r\n            />\r\n            <button className={styles.btn} style={{ marginRight: 150 }}>Upload image</button>\r\n          </div>\r\n\r\n          <div>\r\n            <p>Title</p>\r\n            <input\r\n              type=\"text\"\r\n              name=\"title\"\r\n              className={styles.heading_input}\r\n              value={data.title}\r\n              onChange={inputHandler}\r\n            />\r\n          </div>\r\n      \r\n          <div>\r\n            <p>Link</p>\r\n            <input\r\n              type=\"text\"\r\n              name=\"link\"\r\n              className={styles.heading_input}\r\n              value={data.link}\r\n              onChange={inputHandler}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <p>Distance</p>\r\n            <input\r\n              type=\"number\"\r\n              min='0'\r\n              name=\"distance\"\r\n              className={styles.heading_input}\r\n              value={data.distance}\r\n              onChange={inputHandler}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <p>Price</p>\r\n            <input\r\n              type=\"number\"\r\n              min='0'\r\n              name=\"price\"\r\n              className={styles.heading_input}\r\n              value={data.price}\r\n              onChange={inputHandler}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <p>Rating</p>\r\n            <input\r\n              type=\"number\"\r\n              min='1' max='5'\r\n              name=\"rating\"\r\n              className={styles.heading_input}\r\n              value={data.rating}\r\n              onChange={inputHandler}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <p>Recommended</p>\r\n            <input\r\n              type=\"text\"\r\n              name=\"recommended\"\r\n              className={styles.heading_input}\r\n              value={data.recommended}\r\n              onChange={inputHandler}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={styles.btn_container}>\r\n        <span>\r\n          <button\r\n            className={styles.btn_apply}\r\n            onClick={submitFeatureCard}\r\n          >\r\n            Apply\r\n          </button>\r\n        </span>\r\n        <div className={styles.vertical} />\r\n        <span>\r\n          <button\r\n            className={styles.btn_cancel}\r\n            onClick={() => setShow(false)}\r\n          >\r\n            Cancel\r\n          </button>\r\n        </span>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default HotelServiceCard2\r\n","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Topic\\Service\\NewServiceCardForm.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\utils\\sliceData.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\Data\\TopicData.js",["732"],"import { accomodationObj } from \"../pages/Admin/AdminTopic/RawAccomodationData\";\r\nimport { attractionObj } from \"../pages/Admin/AdminTopic/RawAttractionData\";\r\nimport { cultureObj } from \"../pages/Admin/AdminTopic/RawCultureData\";\r\nimport { transportObj } from \"../pages/Admin/AdminTopic/RawTransportData\";\r\n\r\nexport default [\r\n    { title: \"Attractions\", path: { admin: 'attraction_items', live: 'attraction_live', dataObj: attractionObj, name: 'attraction', firstBanner: 'churches' } },\r\n    { title: \"Accommation\", path: { admin: 'accomodation_items', live: 'accomodation_live', dataObj: accomodationObj, name: 'accomodation', firstBanner: 'visa issue' } },\r\n    { title: \"Local Culture\", path: { admin: 'culture_items', live: 'culture_live', dataObj: cultureObj, name: 'culture', firstBanner: 'currency' } },\r\n    { title: \"Events\", path: { admin: 'event_items', live: 'event_live', name: 'event' } },\r\n\r\n    { title: \"Transportation\", path: { admin: 'transport_items', live: 'transport_live', dataObj: transportObj, name: 'transportation', firstBanner: 'flight' } },\r\n\r\n    { title: \"Entertainment\", path: { admin: 'attraction_items', live: 'attraction_live' } },\r\n    { title: \"Education\", path: { admin: 'attraction_items', live: 'attraction_live' } },\r\n    { title: \"Sports & Activities\", path: { admin: 'attraction_items', live: 'attraction_live' } },\r\n    { title: \"Health & Emergency\", path: { admin: 'attraction_items', live: 'attraction_live' } },\r\n    { title: \"Internet Service\", path: { admin: 'attraction_items', live: 'attraction_live' } }\r\n];\r\n","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\AdminTopic\\RawAccomodationData.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\AdminTopic\\RawAttractionData.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Topic\\Main\\LandingTopic.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Topic\\Main\\Attractions\\Attraction.js",["733","734","735"],"import React, { useContext, useEffect, useState, Fragment } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport BlogHeader from '../../../../components/TravelBlog/sectionHeader/SectionHeader'\r\nimport { EditContext, TopicPathContext } from '../../../../contexts/editContext'\r\nimport { app, firestore } from '../../../../utils/firebase.utils'\r\nimport styles from './Attraction.module.css'\r\nimport { FaHeart, FaShare } from 'react-icons/fa'\r\nimport Vimeo from '../../../Section/Vimeo/Vimeo'\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport AttractionServiceCard from '../../Service/attraction/AttractionServiceCard'\r\nimport { sizeTransform } from '../../../../utils/sizeTransform'\r\nimport AddAttractionCardForm from '../../Service/attraction/AddAttractionCardForm'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { upperCaseFirstLetter } from '../../../../utils/upperCaseFirstLetter'\r\n\r\nconst Attraction = () => {\r\n  //params\r\n  const { cityId } = useParams();\r\n  const topicName = useContext(TopicPathContext);\r\n\r\n  const { editMode, editStyle } = useContext(EditContext);\r\n\r\n  //states\r\n  const [attractions, setAttractions] = useState([])\r\n  const [currentAttr, setCurrentAttr] = useState('sea');\r\n  const [currentCard, setCurrentCard] = useState({});\r\n\r\n  const [showEditAttr, setShowEditAttr] = useState(false);\r\n  const [showAddAttr, setShowAddAttr] = useState(false);\r\n  const [fileUrl, setFileUrl] = useState('')\r\n\r\n  useEffect(() => getData(), [cityId, topicName, showEditAttr, showAddAttr])\r\n\r\n  const getData = async () => {\r\n    const doc = await firestore.collection(topicName.admin).doc(cityId).get();\r\n\r\n    if (!doc.exists) {\r\n      console.log('no data')\r\n    } else {\r\n      setAttractions(doc.data().attractionData);\r\n    }\r\n  }\r\n\r\n  const openEditForm = item => {\r\n    setShowEditAttr(true);\r\n    setCurrentCard({\r\n      id: item.id,\r\n      content: item.content,\r\n      img: item.img,\r\n      link: item.link,\r\n      title: item.title\r\n    })\r\n  }\r\n\r\n  const onEditService = () =>\r\n    (showEditAttr & editMode) &&\r\n    <div>\r\n      <AttractionServiceCard\r\n        title='Attraction'\r\n        currentFeatureCard={currentCard}\r\n        uploadLabel='Cover image'\r\n        uploadDescription=' (Image has to be below 200 KB and PNG/JPG format)'\r\n        textLabel='Title'\r\n        onFileChange={onFileChange}\r\n        updateFeatureCard={updateCard}\r\n        deleteTopicCard={deleteCard}\r\n        setShow={setShowEditAttr}\r\n      />\r\n    </div>\r\n\r\n  const deleteCard = (id) => {\r\n    alert('Are you sure you want to delete the card?')\r\n    setShowEditAttr(false);\r\n\r\n    const updatedContent = attractions[currentAttr].data.filter(attr => attr.id !== id);\r\n\r\n    const newTitle = upperCaseFirstLetter(currentAttr);\r\n\r\n    attractions[currentAttr] = {\r\n      title: newTitle,\r\n      data: updatedContent\r\n    }\r\n\r\n    return firestore.collection(topicName.admin).doc(cityId).update({\r\n      attractionData: attractions\r\n    })\r\n  }\r\n\r\n  //image handling stuff\r\n  const typeValidation = [\"image/png\", \"image/jpeg\", \"image/jpg\", \"image/svg+xml\"];\r\n  const sizeValidation = 200000;\r\n  const message = (file) => {\r\n    return `The size of the image should be maximum ${sizeTransform(sizeValidation)}, and the format need to be PNG, JPG. You tried to upload a file format: ${file.type}, size: ${sizeTransform(file.size)}`;\r\n  }\r\n  const onFileChange = async (e) => {\r\n    const file = e.target.files[0];\r\n    const storageRef = app.storage().ref();\r\n\r\n    if (file && typeValidation.includes(file.type) && file.size <= sizeValidation) {\r\n      const fileRef = storageRef.child(`topic/${file.name}`);\r\n      await fileRef.put(file);\r\n      setFileUrl(await fileRef.getDownloadURL())\r\n    } else {\r\n      alert(message(file))\r\n    }\r\n  }\r\n\r\n  const updateCard = updatedItem => {\r\n    const attrObj = attractions;\r\n\r\n    const updatedContent = attrObj[currentAttr].data.map(item =>\r\n      item.id === updatedItem.id ?\r\n        { ...updatedItem, img: fileUrl || updatedItem.img }\r\n        : item\r\n    )\r\n\r\n    const updatedData = Object.values(attrObj).map(item =>\r\n      item.title.toLowerCase() === currentAttr ?\r\n        { title: upperCaseFirstLetter(currentAttr), data: updatedContent }\r\n        : item\r\n    )\r\n\r\n    const updatedObject = {};\r\n\r\n    Object.keys(attrObj).map(key => {\r\n      updatedData.map(data =>\r\n        data.title.toLowerCase() === key ?\r\n          updatedObject[key] = data : undefined\r\n      )\r\n    })\r\n\r\n    return firestore.collection(topicName.admin).doc(cityId).update({\r\n      attractionData: updatedObject\r\n    })\r\n  }\r\n\r\n  //add card\r\n  const onAddService = () => {\r\n    return (\r\n      (showAddAttr && editMode) ?\r\n        <div>\r\n          <AddAttractionCardForm\r\n            title='Attractions'\r\n            uploadLabel='Cover image'\r\n            uploadDescription=' (Image has to be below 200 KB and PNG/JPG format)'\r\n            textLabel='Title'\r\n            onFileChange={onFileChange}\r\n            addFeatureCard={addAttractionCard}\r\n            setShow={setShowAddAttr}\r\n          />\r\n        </div>\r\n        : <div></div>\r\n    )\r\n  }\r\n\r\n  const addAttractionCard = newCard => {\r\n    setShowAddAttr(false);\r\n\r\n    const newAttractionList = attractions[currentAttr].data;\r\n    newAttractionList.push({ ...newCard, id: uuidv4(), img: fileUrl || '' });\r\n\r\n    attractions[currentAttr] = {\r\n      title: upperCaseFirstLetter(currentAttr),\r\n      data: newAttractionList\r\n    }\r\n\r\n    return firestore.collection(topicName.admin).doc(cityId).update({\r\n      attractionData: attractions\r\n    })\r\n  }\r\n\r\n\r\n  return (\r\n    <section className={styles.container}>\r\n      <header\r\n        className={styles.attractionHeader}\r\n        style={editMode ? { display: 'flex', justifyContent: 'flex-end' } : {}}\r\n      >\r\n        <div style={editMode ? { marginRight: 370 } : {}}>\r\n          <BlogHeader label='Find suitable attractions' />\r\n        </div>\r\n\r\n        {editMode &&\r\n          <div\r\n            onClick={() => setShowAddAttr(true)}\r\n          >\r\n            <AddCircleIcon\r\n              fontSize='large'\r\n              className={styles.addCirle}\r\n              style={{ color: !showAddAttr ? '#C4C4C4' : '#F24B6A' }}\r\n            />\r\n            {showAddAttr &&\r\n              <div>\r\n                {onAddService()}\r\n              </div>\r\n            }\r\n          </div>\r\n        }\r\n      </header>\r\n\r\n      <div className={styles.attractionBtn}>\r\n        {attractions && Object.keys(attractions).map(attr =>\r\n          <button\r\n            key={attr}\r\n            onMouseOver={() => setCurrentAttr(attr)}\r\n            style={attr === currentAttr ? { backgroundColor: '#F24B6A', color: 'white' } : {}}\r\n          >\r\n            {attractions[attr].title}\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      <div className={styles.attractionFlex} >\r\n        <div className={styles.attractionList}>\r\n\r\n          {attractions[currentAttr] && attractions[currentAttr].data.map(attr =>\r\n            <Fragment key={attr.id}>\r\n              <div\r\n                className={styles.attractionItems}\r\n                style={editMode ? editStyle : {}}\r\n                onClick={editMode ? () => openEditForm(attr) : undefined}\r\n              >\r\n                <div className={styles.attractionLeft}>\r\n                  <img src={attr.img} alt={currentAttr} />\r\n                </div>\r\n\r\n                <div className={styles.attractionRight}>\r\n                  <div>\r\n                    <header>{attr.title}</header>\r\n\r\n                    <div style={{ display: 'flex' }}>\r\n                      <FaShare className={styles.icon} onClick={() => console.log('share')} />\r\n                      <FaHeart className={styles.icon} onClick={() => console.log('heart')} />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <p>{attr.content}</p>\r\n\r\n                  <button onClick={() => window.open(attr.link ? attr.link : '#')}>\r\n                    Explore more\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              {showEditAttr && currentCard.id == attr.id &&\r\n                <div className={styles.editBox}>\r\n                  {onEditService()}\r\n                </div>\r\n              }\r\n\r\n            </Fragment>\r\n          )}\r\n        </div>\r\n\r\n        <div>\r\n          <Vimeo cityId={cityId} collection={topicName.admin} />\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Attraction\r\n","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Topic\\Service\\attraction\\AttractionServiceCard.js",["736","737","738"],"import React, { useEffect, useState } from 'react'\r\nimport styles from '../FeatureCardForm.module.css'\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport moment from 'moment';\r\n\r\nconst AttractionServiceCard = ({\r\n  setShow, currentFeatureCard, onFileChange, updateFeatureCard, title, uploadLabel, textLabel, uploadDescription, deleteTopicCard\r\n}) => {\r\n\r\n  const [data, setData] = useState(currentFeatureCard);\r\n\r\n  const [updatedDate, setDate] = useState(new Date())\r\n\r\n  useEffect(() => {\r\n    setData(currentFeatureCard)\r\n    setDate(currentFeatureCard.date.toDate())\r\n  }, [])\r\n\r\n  const inputHandler = e => {\r\n    const { name, value } = e.target;\r\n    setData({ ...data, [name]: value })\r\n  }\r\n\r\n  const submitFeatureCard = e => {\r\n    const updateData = { ...data, date: updatedDate }\r\n    console.log('submit card 2');\r\n    setShow(false)\r\n    e.preventDefault();\r\n    updateFeatureCard(updateData)\r\n  }\r\n\r\n  return (\r\n    <div className={styles.feature_card}>\r\n      <div className={styles.feature_card_container}>\r\n        <h4>{title}</h4>\r\n        <div className={styles.icon_text}>\r\n          <label>{uploadLabel}</label>\r\n          <span> {uploadDescription}</span>\r\n        </div>\r\n        <div className={styles.form_wrapper}>\r\n          <div className={styles.upload_btn_wrapper}>\r\n            <input\r\n              type=\"file\"\r\n              name=\"image\"\r\n              onChange={onFileChange}\r\n            />\r\n            <button className={styles.btn}>Upload image</button>\r\n          </div>\r\n          <div>\r\n            <p>{textLabel}</p>\r\n            <input\r\n              type=\"text\"\r\n              name=\"title\"\r\n              className={styles.title_input}\r\n              value={data.title}\r\n              onChange={inputHandler}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <p>Link</p>\r\n            <input\r\n              type=\"text\"\r\n              name=\"link\"\r\n              className={styles.title_input}\r\n              value={data.link}\r\n              onChange={inputHandler}\r\n            />\r\n          </div>\r\n\r\n          {title == 'Cultures' &&\r\n            <div>\r\n              <p>Date</p>\r\n\r\n              <DatePicker\r\n                selected={updatedDate}\r\n                onChange={date => setDate(date)}\r\n              />\r\n            </div>\r\n          }\r\n\r\n          <div className={styles.editBox}>\r\n            <p>Content</p>\r\n            <textarea\r\n              style={{ width: '100%' }}\r\n              rows='4'\r\n              name='content'\r\n              value={data.content}\r\n              onChange={inputHandler}\r\n            />\r\n          </div>\r\n\r\n\r\n          <div className={styles.editBox}>\r\n            <button\r\n              onClick={() => deleteTopicCard(data.id)}\r\n            >\r\n              Delete this card\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={styles.btn_container}>\r\n        <span>\r\n          <button\r\n            className={styles.btn_apply}\r\n            onClick={submitFeatureCard}\r\n          >\r\n            Apply\r\n          </button>\r\n        </span>\r\n        <div className={styles.vertical} />\r\n        <span>\r\n          <button\r\n            className={styles.btn_cancel}\r\n            onClick={() => {\r\n              setShow(false)\r\n            }\r\n            }\r\n          >\r\n            Cancel\r\n          </button>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AttractionServiceCard\r\n","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Topic\\Service\\attraction\\AddAttractionCardForm.js",["739"],"import React, { useState } from 'react'\r\nimport styles from '../FeatureCardForm.module.css'\r\nimport DatePicker from 'react-datepicker'\r\n\r\nconst AddAttractionCardForm = ({\r\n  setShow, onFileChange, title, uploadLabel, textLabel, uploadDescription, addFeatureCard\r\n}) => {\r\n\r\n  const [data, setData] = useState({\r\n    title: '',\r\n    link: '',\r\n    content: ''\r\n  });\r\n  const [updatedDate, setDate] = useState(new Date())\r\n\r\n  const inputHandler = e => {\r\n    const { name, value } = e.target;\r\n    setData({ ...data, [name]: value })\r\n  }\r\n\r\n  const submitFeatureCard = e => {\r\n    const newCulture = { ...data, date: updatedDate }\r\n    console.log('submit card 2');\r\n    setShow(false);\r\n    e.preventDefault();\r\n    addFeatureCard(newCulture);\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={styles.feature_card}>\r\n      <div className={styles.feature_card_container}>\r\n        <h4>{title}</h4>\r\n        <div className={styles.icon_text}>\r\n          <label>{uploadLabel}</label>\r\n          <span> {uploadDescription}</span>\r\n        </div>\r\n        <div className={styles.form_wrapper}>\r\n          <div className={styles.upload_btn_wrapper}>\r\n            <input\r\n              type=\"file\"\r\n              name=\"image\"\r\n              onChange={onFileChange}\r\n            />\r\n            <button className={styles.btn}>Upload image</button>\r\n          </div>\r\n          <div>\r\n            <p>{textLabel}</p>\r\n            <input\r\n              type=\"text\"\r\n              name=\"title\"\r\n              className={styles.title_input}\r\n              value={data.title}\r\n              onChange={inputHandler}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <p>Link</p>\r\n            <input\r\n              type=\"text\"\r\n              name=\"link\"\r\n              className={styles.title_input}\r\n              value={data.link}\r\n              onChange={inputHandler}\r\n            />\r\n          </div>\r\n\r\n          {title == 'Cultures' &&\r\n            <div>\r\n              <p>Date</p>\r\n              <DatePicker\r\n                selected={updatedDate}\r\n                onChange={date => setDate(date)}\r\n              />\r\n            </div>\r\n          }\r\n\r\n          <div>\r\n            <p>Content</p>\r\n            <textarea\r\n              style={{ width: '100%', fontSize: 18 }}\r\n              rows='4'\r\n              name=\"content\"\r\n              className={styles.title_input}\r\n              value={data.content}\r\n              onChange={inputHandler}\r\n            />\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n      <div className={styles.btn_container}>\r\n        <span>\r\n          <button\r\n            className={styles.btn_apply}\r\n            onClick={submitFeatureCard}\r\n          >\r\n            Apply\r\n          </button>\r\n        </span>\r\n        <div className={styles.vertical} />\r\n        <span>\r\n          <button\r\n            className={styles.btn_cancel}\r\n            onClick={() => setShow(false)}\r\n          >\r\n            Cancel\r\n          </button>\r\n        </span>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default AddAttractionCardForm\r\n","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\AdminTopic\\RawCultureData.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Topic\\Main\\Culture\\Culture.js",["740","741"],"import React, { Fragment, useContext, useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport BlogHeader from '../../../../components/TravelBlog/sectionHeader/SectionHeader';\r\nimport { EditContext, TopicPathContext } from '../../../../contexts/editContext';\r\nimport styles from './Culture.module.css';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport { app, firestore } from '../../../../utils/firebase.utils';\r\nimport { upperCaseFirstLetter } from '../../../../utils/upperCaseFirstLetter';\r\nimport { FaHeart, FaShare } from 'react-icons/fa'\r\nimport Vimeo from '../../../Section/Vimeo/Vimeo';\r\nimport AttractionServiceCard from '../../Service/attraction/AttractionServiceCard';\r\nimport { sizeTransform } from '../../../../utils/sizeTransform';\r\nimport AddAttractionCardForm from '../../Service/attraction/AddAttractionCardForm';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport moment from 'moment';\r\n\r\nimport firebase from 'firebase/app'\r\n\r\nconst Culture = () => {\r\n  //params\r\n  const { cityId } = useParams();\r\n  const topicName = useContext(TopicPathContext);\r\n  const { editMode, editStyle } = useContext(EditContext);\r\n\r\n  //states\r\n  const [showAdd, setShowAdd] = useState(false);\r\n  const [showEdit, setShowEdit] = useState(false);\r\n  const [fileUrl, setFileUrl] = useState('')\r\n\r\n  const [cultures, setCultures] = useState([]);\r\n  const [currentCard, setCurrentCard] = useState({});\r\n  const [current, setCurrent] = useState('museum');\r\n\r\n\r\n  useEffect(() => getData(), [cityId, topicName, showEdit])\r\n\r\n  const getData = async () => {\r\n    const doc = await firestore.collection(topicName.admin).doc(cityId).get();\r\n\r\n    if (!doc.exists) {\r\n      console.log('no data')\r\n    } else {\r\n      setCultures(doc.data().cultureData)\r\n    }\r\n  }\r\n\r\n  const onAddService = () => {\r\n    return (\r\n      (showAdd && editMode) ?\r\n        <div>\r\n          <AddAttractionCardForm\r\n            title='Cultures'\r\n            uploadLabel='Cover image'\r\n            uploadDescription=' (Image has to be below 200 KB and PNG/JPG format)'\r\n            textLabel='Title'\r\n            onFileChange={onFileChange}\r\n            addFeatureCard={addCultureCard}\r\n            setShow={setShowAdd}\r\n          />\r\n        </div>\r\n        : <div></div>\r\n    )\r\n  }\r\n\r\n  const openEditForm = item => {\r\n    setShowEdit(true);\r\n    setCurrentCard({\r\n      id: item.id,\r\n      content: item.content,\r\n      img: item.img,\r\n      link: item.link,\r\n      title: item.title,\r\n      date: item.date\r\n    })\r\n  }\r\n\r\n  const onEditService = () =>\r\n    (showEdit & editMode) &&\r\n    <div>\r\n      <AttractionServiceCard\r\n        title='Cultures'\r\n        currentFeatureCard={currentCard}\r\n        uploadLabel='Cover image'\r\n        uploadDescription=' (Image has to be below 200 KB and PNG/JPG format)'\r\n        textLabel='Title'\r\n        onFileChange={onFileChange}\r\n        updateFeatureCard={updateCard}\r\n        deleteTopicCard={deleteCard}\r\n        setShow={setShowEdit}\r\n      />\r\n    </div>\r\n\r\n  //image handling stuff\r\n  const typeValidation = [\"image/png\", \"image/jpeg\", \"image/jpg\", \"image/svg+xml\"];\r\n  const sizeValidation = 200000;\r\n  const message = (file) => {\r\n    return `The size of the image should be maximum ${sizeTransform(sizeValidation)}, and the format need to be PNG, JPG. You tried to upload a file format: ${file.type}, size: ${sizeTransform(file.size)}`;\r\n  }\r\n  const onFileChange = async (e) => {\r\n    const file = e.target.files[0];\r\n    const storageRef = app.storage().ref();\r\n\r\n    if (file && typeValidation.includes(file.type) && file.size <= sizeValidation) {\r\n      const fileRef = storageRef.child(`topic/${file.name}`);\r\n      await fileRef.put(file);\r\n      setFileUrl(await fileRef.getDownloadURL())\r\n    } else {\r\n      alert(message(file))\r\n    }\r\n  }\r\n\r\n  const deleteCard = (id) => {\r\n    alert('Are you sure you want to delete the card?')\r\n    setShowEdit(false);\r\n\r\n    const updatedContent = cultures[current].filter(cul => cul.id !== id);\r\n    cultures[current] = updatedContent;\r\n\r\n    return firestore.collection(topicName.admin).doc(cityId).update({\r\n      cultureData: cultures\r\n    })\r\n  }\r\n\r\n  const updateCard = updatedItem => {\r\n    const cultureObj = cultures;\r\n\r\n    const dateToTimestamp = firebase.firestore.Timestamp.fromDate(updatedItem.date)\r\n\r\n    const updatedContent = cultures[current].map(item =>\r\n      item.id === updatedItem.id ?\r\n        { ...updatedItem, date: dateToTimestamp, img: fileUrl || updatedItem.img }\r\n        : item\r\n    )\r\n    cultureObj[current] = updatedContent;\r\n\r\n    return firestore.collection(topicName.admin).doc(cityId).update({\r\n      cultureData: cultureObj\r\n    })\r\n  }\r\n\r\n  //add card\r\n  const addCultureCard = newCard => {\r\n    setShowAdd(false);\r\n    const cultureObj = cultures;\r\n\r\n    const dateToTimestamp = firebase.firestore.Timestamp.fromDate(newCard.date)\r\n\r\n    const newCultureList = cultureObj[current];\r\n    newCultureList.push({ ...newCard, id: uuidv4(), img: fileUrl || '', date: dateToTimestamp });\r\n\r\n    cultureObj[current] = newCultureList;\r\n\r\n    return firestore.collection(topicName.admin).doc(cityId).update({\r\n      cultureData: cultureObj\r\n    })\r\n  }\r\n\r\n  return (\r\n    <section className={styles.container}>\r\n      <header\r\n        className={styles.attractionHeader}\r\n        style={editMode ? { display: 'flex', justifyContent: 'flex-end' } : {}}\r\n      >\r\n        <div style={editMode ? { marginRight: 370 } : {}}>\r\n          <BlogHeader label='Find suitable activities' />\r\n        </div>\r\n\r\n        {editMode &&\r\n          <div\r\n            onClick={() => setShowAdd(true)}\r\n          >\r\n            <AddCircleIcon\r\n              fontSize='large'\r\n              className={styles.addCirle}\r\n              style={{ color: !showAdd ? '#C4C4C4' : '#F24B6A' }}\r\n            />\r\n            {showAdd &&\r\n              <div>\r\n                {onAddService()}\r\n              </div>\r\n            }\r\n          </div>\r\n        }\r\n      </header>\r\n\r\n      <div className={styles.attractionBtn}>\r\n        {cultures && Object.keys(cultures).map(culture =>\r\n          <button\r\n            key={culture}\r\n            onMouseOver={() => setCurrent(culture)}\r\n            style={culture === current ? { backgroundColor: '#F24B6A', color: 'white' } : {}}\r\n          >\r\n            {upperCaseFirstLetter(culture)}\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      <div className={styles.attractionFlex} >\r\n        <div className={styles.attractionList}>\r\n\r\n          {cultures[current] && cultures[current].map(culture =>\r\n            <Fragment key={culture.id}>\r\n              <div\r\n                className={styles.attractionItems}\r\n                style={editMode ? editStyle : {}}\r\n                onClick={editMode ? () => openEditForm(culture) : undefined}\r\n              >\r\n                <div className={styles.attractionLeft}>\r\n                  <img src={culture.img} alt={current} />\r\n                  <div>\r\n                    {culture && moment(culture.date.toDate()).format('MMMM Do')}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className={styles.attractionRight}>\r\n                  <div style={{ position: 'relative' }}>\r\n                    <header>{culture.title}</header>\r\n\r\n                    <div>\r\n                      <FaShare className={styles.icon} onClick={() => console.log('share')} />\r\n                      <FaHeart className={styles.icon} onClick={() => console.log('heart')} />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <p>{culture.content}</p>\r\n\r\n                  <button onClick={() => window.open(culture.link ? culture.link : '#')}>\r\n                    Explore more\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              {showEdit && currentCard.id == culture.id &&\r\n                <div className={styles.editBox}>\r\n                  {onEditService()}\r\n                </div>\r\n              }\r\n\r\n            </Fragment>\r\n          )}\r\n        </div>\r\n\r\n        <div>\r\n          <Vimeo cityId={cityId} collection={topicName.admin} />\r\n        </div>\r\n      </div>\r\n\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Culture\r\n","C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\utils\\upperCaseFirstLetter.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Admin\\AdminTopic\\RawTransportData.js",[],"C:\\Users\\quand\\Desktop\\Globuzzer\\admin-project\\src\\pages\\Topic\\Main\\Transport\\Transportation.js",["742","743","744"],{"ruleId":"745","replacedBy":"746"},{"ruleId":"747","replacedBy":"748"},{"ruleId":"749","severity":1,"message":"750","line":17,"column":10,"nodeType":"751","messageId":"752","endLine":17,"endColumn":17},{"ruleId":"749","severity":1,"message":"753","line":1,"column":29,"nodeType":"751","messageId":"752","endLine":1,"endColumn":38},{"ruleId":"749","severity":1,"message":"754","line":8,"column":8,"nodeType":"751","messageId":"752","endLine":8,"endColumn":16},{"ruleId":"749","severity":1,"message":"750","line":9,"column":11,"nodeType":"751","messageId":"752","endLine":9,"endColumn":18},{"ruleId":"749","severity":1,"message":"750","line":17,"column":10,"nodeType":"751","messageId":"752","endLine":17,"endColumn":17},{"ruleId":"749","severity":1,"message":"755","line":10,"column":10,"nodeType":"751","messageId":"752","endLine":10,"endColumn":21},{"ruleId":"749","severity":1,"message":"750","line":11,"column":10,"nodeType":"751","messageId":"752","endLine":11,"endColumn":17},{"ruleId":"749","severity":1,"message":"756","line":13,"column":26,"nodeType":"751","messageId":"752","endLine":13,"endColumn":43},{"ruleId":"749","severity":1,"message":"755","line":14,"column":10,"nodeType":"751","messageId":"752","endLine":14,"endColumn":21},{"ruleId":"749","severity":1,"message":"750","line":15,"column":10,"nodeType":"751","messageId":"752","endLine":15,"endColumn":17},{"ruleId":"749","severity":1,"message":"757","line":1,"column":60,"nodeType":"751","messageId":"752","endLine":1,"endColumn":66},{"ruleId":"749","severity":1,"message":"755","line":17,"column":10,"nodeType":"751","messageId":"752","endLine":17,"endColumn":21},{"ruleId":"749","severity":1,"message":"750","line":18,"column":10,"nodeType":"751","messageId":"752","endLine":18,"endColumn":17},{"ruleId":"749","severity":1,"message":"755","line":10,"column":10,"nodeType":"751","messageId":"752","endLine":10,"endColumn":21},{"ruleId":"749","severity":1,"message":"750","line":11,"column":10,"nodeType":"751","messageId":"752","endLine":11,"endColumn":17},{"ruleId":"749","severity":1,"message":"756","line":13,"column":26,"nodeType":"751","messageId":"752","endLine":13,"endColumn":43},{"ruleId":"749","severity":1,"message":"758","line":11,"column":21,"nodeType":"751","messageId":"752","endLine":11,"endColumn":33},{"ruleId":"749","severity":1,"message":"755","line":12,"column":10,"nodeType":"751","messageId":"752","endLine":12,"endColumn":21},{"ruleId":"749","severity":1,"message":"750","line":13,"column":10,"nodeType":"751","messageId":"752","endLine":13,"endColumn":17},{"ruleId":"749","severity":1,"message":"759","line":15,"column":26,"nodeType":"751","messageId":"752","endLine":15,"endColumn":43},{"ruleId":"749","severity":1,"message":"757","line":1,"column":60,"nodeType":"751","messageId":"752","endLine":1,"endColumn":66},{"ruleId":"749","severity":1,"message":"760","line":13,"column":8,"nodeType":"751","messageId":"752","endLine":13,"endColumn":12},{"ruleId":"749","severity":1,"message":"755","line":21,"column":10,"nodeType":"751","messageId":"752","endLine":21,"endColumn":21},{"ruleId":"749","severity":1,"message":"750","line":22,"column":10,"nodeType":"751","messageId":"752","endLine":22,"endColumn":17},{"ruleId":"749","severity":1,"message":"761","line":87,"column":7,"nodeType":"751","messageId":"752","endLine":87,"endColumn":18},{"ruleId":"749","severity":1,"message":"755","line":14,"column":10,"nodeType":"751","messageId":"752","endLine":14,"endColumn":21},{"ruleId":"749","severity":1,"message":"750","line":15,"column":10,"nodeType":"751","messageId":"752","endLine":15,"endColumn":17},{"ruleId":"749","severity":1,"message":"755","line":15,"column":10,"nodeType":"751","messageId":"752","endLine":15,"endColumn":21},{"ruleId":"749","severity":1,"message":"750","line":16,"column":10,"nodeType":"751","messageId":"752","endLine":16,"endColumn":17},{"ruleId":"762","severity":1,"message":"763","line":48,"column":6,"nodeType":"764","endLine":48,"endColumn":20,"suggestions":"765"},{"ruleId":"749","severity":1,"message":"766","line":8,"column":10,"nodeType":"751","messageId":"752","endLine":8,"endColumn":18},{"ruleId":"749","severity":1,"message":"767","line":10,"column":8,"nodeType":"751","messageId":"752","endLine":10,"endColumn":20},{"ruleId":"749","severity":1,"message":"755","line":15,"column":10,"nodeType":"751","messageId":"752","endLine":15,"endColumn":21},{"ruleId":"749","severity":1,"message":"755","line":11,"column":10,"nodeType":"751","messageId":"752","endLine":11,"endColumn":21},{"ruleId":"749","severity":1,"message":"750","line":12,"column":10,"nodeType":"751","messageId":"752","endLine":12,"endColumn":17},{"ruleId":"749","severity":1,"message":"768","line":14,"column":24,"nodeType":"751","messageId":"752","endLine":14,"endColumn":39},{"ruleId":"749","severity":1,"message":"769","line":17,"column":11,"nodeType":"751","messageId":"752","endLine":17,"endColumn":20},{"ruleId":"749","severity":1,"message":"770","line":4,"column":10,"nodeType":"751","messageId":"752","endLine":4,"endColumn":20},{"ruleId":"749","severity":1,"message":"750","line":16,"column":10,"nodeType":"751","messageId":"752","endLine":16,"endColumn":17},{"ruleId":"771","severity":1,"message":"772","line":9,"column":5,"nodeType":"773","endLine":9,"endColumn":85},{"ruleId":"774","severity":1,"message":"775","line":9,"column":69,"nodeType":"776","endLine":9,"endColumn":84},{"ruleId":"749","severity":1,"message":"753","line":1,"column":17,"nodeType":"751","messageId":"752","endLine":1,"endColumn":26},{"ruleId":"749","severity":1,"message":"777","line":5,"column":64,"nodeType":"751","messageId":"752","endLine":5,"endColumn":76},{"ruleId":"749","severity":1,"message":"777","line":5,"column":64,"nodeType":"751","messageId":"752","endLine":5,"endColumn":76},{"ruleId":"749","severity":1,"message":"778","line":10,"column":10,"nodeType":"751","messageId":"752","endLine":10,"endColumn":18},{"ruleId":"762","severity":1,"message":"779","line":17,"column":6,"nodeType":"764","endLine":17,"endColumn":13,"suggestions":"780"},{"ruleId":"762","severity":1,"message":"781","line":37,"column":8,"nodeType":"764","endLine":37,"endColumn":15,"suggestions":"782"},{"ruleId":"749","severity":1,"message":"783","line":16,"column":11,"nodeType":"751","messageId":"752","endLine":16,"endColumn":19},{"ruleId":"749","severity":1,"message":"784","line":14,"column":10,"nodeType":"751","messageId":"752","endLine":14,"endColumn":14},{"ruleId":"749","severity":1,"message":"784","line":11,"column":10,"nodeType":"751","messageId":"752","endLine":11,"endColumn":14},{"ruleId":"785","severity":1,"message":"786","line":1,"column":1,"nodeType":"787","endLine":62,"endColumn":2},{"ruleId":"749","severity":1,"message":"788","line":16,"column":8,"nodeType":"751","messageId":"752","endLine":16,"endColumn":12},{"ruleId":"749","severity":1,"message":"789","line":3,"column":8,"nodeType":"751","messageId":"752","endLine":3,"endColumn":13},{"ruleId":"785","severity":1,"message":"786","line":11,"column":1,"nodeType":"787","endLine":21,"endColumn":3},{"ruleId":"749","severity":1,"message":"753","line":1,"column":27,"nodeType":"751","messageId":"752","endLine":1,"endColumn":36},{"ruleId":"749","severity":1,"message":"790","line":15,"column":10,"nodeType":"751","messageId":"752","endLine":15,"endColumn":18},{"ruleId":"745","replacedBy":"791"},{"ruleId":"747","replacedBy":"792"},{"ruleId":"749","severity":1,"message":"793","line":1,"column":17,"nodeType":"751","messageId":"752","endLine":1,"endColumn":30},{"ruleId":"762","severity":1,"message":"794","line":32,"column":6,"nodeType":"764","endLine":32,"endColumn":15,"suggestions":"795"},{"ruleId":"745","replacedBy":"796"},{"ruleId":"747","replacedBy":"797"},{"ruleId":"762","severity":1,"message":"798","line":12,"column":6,"nodeType":"764","endLine":12,"endColumn":8,"suggestions":"799"},{"ruleId":"762","severity":1,"message":"800","line":98,"column":6,"nodeType":"764","endLine":98,"endColumn":43,"suggestions":"801"},{"ruleId":"802","severity":1,"message":"803","line":84,"column":44,"nodeType":"804","messageId":"805","endLine":84,"endColumn":46},{"ruleId":"762","severity":1,"message":"798","line":22,"column":6,"nodeType":"764","endLine":22,"endColumn":8,"suggestions":"806"},{"ruleId":"807","severity":1,"message":"808","line":37,"column":43,"nodeType":"809","messageId":"810","endLine":37,"endColumn":62,"fix":"811"},{"ruleId":"807","severity":1,"message":"812","line":38,"column":58,"nodeType":"809","messageId":"810","endLine":38,"endColumn":73,"fix":"813"},{"ruleId":"807","severity":1,"message":"814","line":40,"column":24,"nodeType":"809","messageId":"810","endLine":40,"endColumn":47,"fix":"815"},{"ruleId":"762","severity":1,"message":"800","line":34,"column":6,"nodeType":"764","endLine":34,"endColumn":48,"suggestions":"816"},{"ruleId":"774","severity":1,"message":"775","line":281,"column":36,"nodeType":"776","endLine":281,"endColumn":51},{"ruleId":"762","severity":1,"message":"800","line":31,"column":6,"nodeType":"764","endLine":31,"endColumn":38,"suggestions":"817"},{"ruleId":"771","severity":1,"message":"818","line":177,"column":13,"nodeType":"773","endLine":177,"endColumn":74},{"ruleId":"774","severity":1,"message":"775","line":177,"column":58,"nodeType":"776","endLine":177,"endColumn":73},{"ruleId":"762","severity":1,"message":"800","line":26,"column":6,"nodeType":"764","endLine":26,"endColumn":31,"suggestions":"819"},{"ruleId":"749","severity":1,"message":"750","line":15,"column":10,"nodeType":"751","messageId":"752","endLine":15,"endColumn":17},{"ruleId":"749","severity":1,"message":"820","line":22,"column":18,"nodeType":"751","messageId":"752","endLine":22,"endColumn":27},{"ruleId":"762","severity":1,"message":"800","line":46,"column":6,"nodeType":"764","endLine":46,"endColumn":19,"suggestions":"821"},{"ruleId":"822","severity":1,"message":"823","line":133,"column":17,"nodeType":"776","endLine":133,"endColumn":29},{"ruleId":"771","severity":1,"message":"772","line":139,"column":11,"nodeType":"773","endLine":139,"endColumn":40},{"ruleId":"802","severity":1,"message":"803","line":146,"column":25,"nodeType":"804","messageId":"805","endLine":146,"endColumn":27},{"ruleId":"762","severity":1,"message":"800","line":55,"column":6,"nodeType":"764","endLine":55,"endColumn":15,"suggestions":"824"},{"ruleId":"802","severity":1,"message":"803","line":232,"column":19,"nodeType":"804","messageId":"805","endLine":232,"endColumn":21},{"ruleId":"802","severity":1,"message":"803","line":261,"column":45,"nodeType":"804","messageId":"805","endLine":261,"endColumn":47},{"ruleId":"762","severity":1,"message":"825","line":14,"column":78,"nodeType":"764","endLine":14,"endColumn":80,"suggestions":"826"},{"ruleId":"749","severity":1,"message":"753","line":1,"column":17,"nodeType":"751","messageId":"752","endLine":1,"endColumn":26},{"ruleId":"785","severity":1,"message":"786","line":6,"column":1,"nodeType":"787","endLine":19,"endColumn":3},{"ruleId":"762","severity":1,"message":"800","line":32,"column":30,"nodeType":"764","endLine":32,"endColumn":76,"suggestions":"827"},{"ruleId":"828","severity":1,"message":"829","line":125,"column":34,"nodeType":"830","messageId":"831","endLine":125,"endColumn":36},{"ruleId":"802","severity":1,"message":"803","line":245,"column":47,"nodeType":"804","messageId":"805","endLine":245,"endColumn":49},{"ruleId":"749","severity":1,"message":"832","line":5,"column":8,"nodeType":"751","messageId":"752","endLine":5,"endColumn":14},{"ruleId":"762","severity":1,"message":"798","line":18,"column":6,"nodeType":"764","endLine":18,"endColumn":8,"suggestions":"833"},{"ruleId":"802","severity":1,"message":"803","line":72,"column":18,"nodeType":"804","messageId":"805","endLine":72,"endColumn":20},{"ruleId":"802","severity":1,"message":"803","line":69,"column":18,"nodeType":"804","messageId":"805","endLine":69,"endColumn":20},{"ruleId":"762","severity":1,"message":"800","line":35,"column":30,"nodeType":"764","endLine":35,"endColumn":59,"suggestions":"834"},{"ruleId":"802","severity":1,"message":"803","line":233,"column":43,"nodeType":"804","messageId":"805","endLine":233,"endColumn":45},{"ruleId":"749","severity":1,"message":"769","line":26,"column":11,"nodeType":"751","messageId":"752","endLine":26,"endColumn":20},{"ruleId":"749","severity":1,"message":"783","line":26,"column":22,"nodeType":"751","messageId":"752","endLine":26,"endColumn":30},{"ruleId":"762","severity":1,"message":"800","line":44,"column":30,"nodeType":"764","endLine":44,"endColumn":32,"suggestions":"835"},"no-native-reassign",["836"],"no-negated-in-lhs",["837"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Relocate' is defined but never used.","'currentCity' is assigned a value but never used.","'setCurrentService' is assigned a value but never used.","'useRef' is defined but never used.","'setCreatedId' is assigned a value but never used.","'setCurrentArticle' is assigned a value but never used.","'Form' is defined but never used.","'onImgChange' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'col'. Either include it or remove the dependency array.","ArrayExpression",["838"],"'readData' is defined but never used.","'CarouselCard' is defined but never used.","'setCurrentVideo' is assigned a value but never used.","'editStyle' is assigned a value but never used.","'SearchCity' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'onFileSubmit' is assigned a value but never used.","'joinCity' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchJoinCityData'. Either include it or remove the dependency array.",["839"],"React Hook useEffect has a missing dependency: 'noSlides'. Either include it or remove the dependency array.",["840"],"'editMode' is assigned a value but never used.","'like' is assigned a value but never used.","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","'opts' is assigned a value but never used.","'heart' is defined but never used.","'navColor' is assigned a value but never used.",["836"],["837"],"'createContext' is defined but never used.","React Hook useEffect has missing dependencies: 'admin' and 'cityId'. Either include them or remove the dependency array.",["841"],["836"],["837"],"React Hook useEffect has a missing dependency: 'currentFeatureCard'. Either include it or remove the dependency array. If 'setData' needs the current value of 'currentFeatureCard', you can also switch to useReducer instead of useState and read 'currentFeatureCard' in the reducer.",["842"],"React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["843"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["844"],"no-useless-computed-key","Unnecessarily computed property ['title'] found.","Property","unnecessarilyComputedProperty",{"range":"845","text":"846"},"Unnecessarily computed property ['img'] found.",{"range":"847","text":"848"},"Unnecessarily computed property ['article'] found.",{"range":"849","text":"850"},["851"],["852"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["853"],"'setHeight' is assigned a value but never used.",["854"],"react/jsx-no-duplicate-props","No duplicate props allowed",["855"],"React Hook useEffect has missing dependencies: 'setTopicSelected' and 'topic'. Either include them or remove the dependency array. If 'setTopicSelected' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["856"],["857"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'moment' is defined but never used.",["858"],["859"],["860"],"no-global-assign","no-unsafe-negation",{"desc":"861","fix":"862"},{"desc":"863","fix":"864"},{"desc":"865","fix":"866"},{"desc":"867","fix":"868"},{"desc":"869","fix":"870"},{"desc":"871","fix":"872"},{"desc":"869","fix":"873"},[1150,1159],"'title'",[1230,1237],"'img'",[1274,1285],"'article'",{"desc":"874","fix":"875"},{"desc":"876","fix":"877"},{"desc":"878","fix":"879"},{"desc":"880","fix":"881"},{"desc":"882","fix":"883"},{"desc":"884","fix":"885"},{"desc":"886","fix":"887"},{"desc":"869","fix":"888"},{"desc":"889","fix":"890"},{"desc":"891","fix":"892"},"Update the dependencies array to be: [cityId, col, show]",{"range":"893","text":"894"},"Update the dependencies array to be: [fetchJoinCityData, query]",{"range":"895","text":"896"},"Update the dependencies array to be: [noSlides, width]",{"range":"897","text":"898"},"Update the dependencies array to be: [admin, cityId, loading]",{"range":"899","text":"900"},"Update the dependencies array to be: [currentFeatureCard]",{"range":"901","text":"902"},"Update the dependencies array to be: [showServiceForm, showNewServiceForm, getData]",{"range":"903","text":"904"},{"range":"905","text":"902"},"Update the dependencies array to be: [getData, showAdsServiceForm, showHotelServiceForm]",{"range":"906","text":"907"},"Update the dependencies array to be: [showEditForm, showAddTopicForm, getData]",{"range":"908","text":"909"},"Update the dependencies array to be: [cityId, getData, showMembersForm]",{"range":"910","text":"911"},"Update the dependencies array to be: [currentText, getData]",{"range":"912","text":"913"},"Update the dependencies array to be: [getData, loading]",{"range":"914","text":"915"},"Update the dependencies array to be: [setTopicSelected, topic]",{"range":"916","text":"917"},"Update the dependencies array to be: [cityId, topicName, showEditAttr, showAddAttr, getData]",{"range":"918","text":"919"},{"range":"920","text":"902"},"Update the dependencies array to be: [cityId, topicName, showEdit, getData]",{"range":"921","text":"922"},"Update the dependencies array to be: [getData]",{"range":"923","text":"924"},[1638,1652],"[cityId, col, show]",[511,518],"[fetchJoinCityData, query]",[1023,1030],"[noSlides, width]",[1228,1237],"[admin, cityId, loading]",[416,418],"[currentFeatureCard]",[3245,3282],"[showServiceForm, showNewServiceForm, getData]",[758,760],[1454,1496],"[getData, showAdsServiceForm, showHotelServiceForm]",[1294,1326],"[showEditForm, showAddTopicForm, getData]",[1156,1181],"[cityId, getData, showMembersForm]",[1497,1510],"[currentText, getData]",[1975,1984],"[getData, loading]",[558,560],"[setTopicSelected, topic]",[1481,1527],"[cityId, topicName, showEditAttr, showAddAttr, getData]",[632,634],[1528,1557],"[cityId, topicName, showEdit, getData]",[1617,1619],"[getData]"]